
AtmelStart_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  000007d6  0000086a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080012e  0080012e  00000898  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000898  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000938  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000158d  00000000  00000000  00000a38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d0d  00000000  00000000  00001fc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007b5  00000000  00000000  00002cd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  00003488  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000810  00000000  00000000  000035ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002a1  00000000  00000000  00003dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  0000409d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e6 ed       	ldi	r30, 0xD6	; 214
  c8:	f7 e0       	ldi	r31, 0x07	; 7
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	ae 32       	cpi	r26, 0x2E	; 46
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	ae e2       	ldi	r26, 0x2E	; 46
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a4 33       	cpi	r26, 0x34	; 52
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 7c 00 	call	0xf8	; 0xf8 <main>
  ea:	0c 94 e9 03 	jmp	0x7d2	; 0x7d2 <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
  f2:	0e 94 b0 00 	call	0x160	; 0x160 <system_init>
  f6:	08 95       	ret

000000f8 <main>:
#include <util/delay.h>
#include <stdio.h>
int main(void)
{
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
  f8:	0e 94 79 00 	call	0xf2	; 0xf2 <atmel_start_init>

	/* Replace with your application code */
	while (1) {
		
		
		if (Boton_get_level())
  fc:	1f 9b       	sbis	0x03, 7	; 3
  fe:	0c c0       	rjmp	.+24     	; 0x118 <main+0x20>
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
 100:	85 b1       	in	r24, 0x05	; 5
 102:	8f 7d       	andi	r24, 0xDF	; 223
 104:	85 b9       	out	0x05, r24	; 5
		{
			LED_set_level(false);
			printf("BotonApagado\n\r");
 106:	8e e0       	ldi	r24, 0x0E	; 14
 108:	91 e0       	ldi	r25, 0x01	; 1
 10a:	9f 93       	push	r25
 10c:	8f 93       	push	r24
 10e:	0e 94 0b 01 	call	0x216	; 0x216 <printf>
 112:	0f 90       	pop	r0
 114:	0f 90       	pop	r0
 116:	0b c0       	rjmp	.+22     	; 0x12e <main+0x36>
 *                  false = Pin level set to "low" state
 */
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
 118:	85 b1       	in	r24, 0x05	; 5
 11a:	80 62       	ori	r24, 0x20	; 32
 11c:	85 b9       	out	0x05, r24	; 5
		}else{
			LED_set_level(true);
			printf("BotonPrendido\n\r");
 11e:	8d e1       	ldi	r24, 0x1D	; 29
 120:	91 e0       	ldi	r25, 0x01	; 1
 122:	9f 93       	push	r25
 124:	8f 93       	push	r24
 126:	0e 94 0b 01 	call	0x216	; 0x216 <printf>
 12a:	0f 90       	pop	r0
 12c:	0f 90       	pop	r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12e:	2f ef       	ldi	r18, 0xFF	; 255
 130:	84 e3       	ldi	r24, 0x34	; 52
 132:	9c e0       	ldi	r25, 0x0C	; 12
 134:	21 50       	subi	r18, 0x01	; 1
 136:	80 40       	sbci	r24, 0x00	; 0
 138:	90 40       	sbci	r25, 0x00	; 0
 13a:	e1 f7       	brne	.-8      	; 0x134 <main+0x3c>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <main+0x46>
 13e:	00 00       	nop
 140:	dd cf       	rjmp	.-70     	; 0xfc <main+0x4>

00000142 <USART_0_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
 142:	8a b1       	in	r24, 0x0a	; 10
 144:	8e 7f       	andi	r24, 0xFE	; 254
 146:	8a b9       	out	0x0a, r24	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
 148:	8b b1       	in	r24, 0x0b	; 11
 14a:	8e 7f       	andi	r24, 0xFE	; 254
 14c:	8b b9       	out	0x0b, r24	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
 14e:	8a b1       	in	r24, 0x0a	; 10
 150:	82 60       	ori	r24, 0x02	; 2
 152:	8a b9       	out	0x0a, r24	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
 154:	8b b1       	in	r24, 0x0b	; 11
 156:	8d 7f       	andi	r24, 0xFD	; 253
 158:	8b b9       	out	0x0b, r24	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
 15a:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <USART_0_init>
 15e:	08 95       	ret

00000160 <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR1 = (1 << PRTWI1) | (1 << PRTIM4) | (1 << PRSPI1) | (1 << PRPTC) | (1 << PRTIM3);
 160:	8d e3       	ldi	r24, 0x3D	; 61
 162:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7f8065>

	PRR0 = (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI0) | (1 << PRUSART1) | (1 << PRUSART0)
 166:	8f ef       	ldi	r24, 0xFF	; 255
 168:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7f8064>
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
 16c:	94 b1       	in	r25, 0x04	; 4
 16e:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
 170:	95 b1       	in	r25, 0x05	; 5
 172:	85 b9       	out	0x05, r24	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
 174:	97 b1       	in	r25, 0x07	; 7
 176:	90 78       	andi	r25, 0x80	; 128
 178:	97 b9       	out	0x07, r25	; 7

		PORTC |= mask;
 17a:	98 b1       	in	r25, 0x08	; 8
 17c:	9f 67       	ori	r25, 0x7F	; 127
 17e:	98 b9       	out	0x08, r25	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
 180:	9a b1       	in	r25, 0x0a	; 10
 182:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
 184:	9b b1       	in	r25, 0x0b	; 11
 186:	8b b9       	out	0x0b, r24	; 11
		break;
	case PORT_DIR_OUT:
		DDRE |= mask;
		break;
	case PORT_DIR_OFF:
		DDRE &= ~mask;
 188:	8d b1       	in	r24, 0x0d	; 13
 18a:	80 7f       	andi	r24, 0xF0	; 240
 18c:	8d b9       	out	0x0d, r24	; 13

		PORTE |= mask;
 18e:	8e b1       	in	r24, 0x0e	; 14
 190:	8f 60       	ori	r24, 0x0F	; 15
 192:	8e b9       	out	0x0e, r24	; 14
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
 194:	84 b1       	in	r24, 0x04	; 4
 196:	80 62       	ori	r24, 0x20	; 32
 198:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
 19a:	85 b1       	in	r24, 0x05	; 5
 19c:	8f 7d       	andi	r24, 0xDF	; 223
 19e:	85 b9       	out	0x05, r24	; 5
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
 1a0:	84 b1       	in	r24, 0x04	; 4
 1a2:	8f 77       	andi	r24, 0x7F	; 127
 1a4:	84 b9       	out	0x04, r24	; 4
		DDRB &= ~(1 << pin);

		PORTB |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTB &= ~(1 << pin);
 1a6:	85 b1       	in	r24, 0x05	; 5
 1a8:	8f 77       	andi	r24, 0x7F	; 127
 1aa:	85 b9       	out	0x05, r24	; 5
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
 1ac:	40 e0       	ldi	r20, 0x00	; 0
 1ae:	60 e8       	ldi	r22, 0x80	; 128
 1b0:	81 e6       	ldi	r24, 0x61	; 97
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
 1b8:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
 1ba:	15 be       	out	0x35, r1	; 53
	    // <PORT_PULL_UP"> Pull-up
	    PORT_PULL_OFF);

	sysctrl_init();

	USART_0_initialization();
 1bc:	0e 94 a1 00 	call	0x142	; 0x142 <USART_0_initialization>
 1c0:	08 95       	ret

000001c2 <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
 1c2:	2f b7       	in	r18, 0x3f	; 63
	cli
 1c4:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
 1c6:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
 1c8:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
 1ca:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
 1cc:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
 1ce:	08 95       	ret

000001d0 <USART_0_init>:
uint8_t USART_0_read()
{
	while (!(UCSR0A & (1 << RXC0)))
		;
	return UDR0;
}
 1d0:	e4 e6       	ldi	r30, 0x64	; 100
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	8d 7f       	andi	r24, 0xFD	; 253
 1d8:	80 83       	st	Z, r24
 1da:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 1de:	87 e6       	ldi	r24, 0x67	; 103
 1e0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 1e4:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1e8:	88 e9       	ldi	r24, 0x98	; 152
 1ea:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 1ee:	80 e0       	ldi	r24, 0x00	; 0
 1f0:	91 e0       	ldi	r25, 0x01	; 1
 1f2:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <__data_end+0x3>
 1f6:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end+0x2>
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	08 95       	ret

000001fe <USART_0_write>:
 *
 * \return Nothing
 */
void USART_0_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE0)))
 1fe:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 202:	95 ff       	sbrs	r25, 5
 204:	fc cf       	rjmp	.-8      	; 0x1fe <USART_0_write>
		;
	UDR0 = data;
 206:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 20a:	08 95       	ret

0000020c <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
 20c:	0e 94 ff 00 	call	0x1fe	; 0x1fe <USART_0_write>
	return 0;
}
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	08 95       	ret

00000216 <printf>:
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e0       	ldi	r27, 0x00	; 0
 21a:	e1 e1       	ldi	r30, 0x11	; 17
 21c:	f1 e0       	ldi	r31, 0x01	; 1
 21e:	0c 94 c2 03 	jmp	0x784	; 0x784 <__prologue_saves__+0x20>
 222:	ae 01       	movw	r20, r28
 224:	4b 5f       	subi	r20, 0xFB	; 251
 226:	5f 4f       	sbci	r21, 0xFF	; 255
 228:	fa 01       	movw	r30, r20
 22a:	61 91       	ld	r22, Z+
 22c:	71 91       	ld	r23, Z+
 22e:	af 01       	movw	r20, r30
 230:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end+0x2>
 234:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <__data_end+0x3>
 238:	0e 94 21 01 	call	0x242	; 0x242 <vfprintf>
 23c:	e2 e0       	ldi	r30, 0x02	; 2
 23e:	0c 94 de 03 	jmp	0x7bc	; 0x7bc <__epilogue_restores__+0x20>

00000242 <vfprintf>:
 242:	ab e0       	ldi	r26, 0x0B	; 11
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	e7 e2       	ldi	r30, 0x27	; 39
 248:	f1 e0       	ldi	r31, 0x01	; 1
 24a:	0c 94 b2 03 	jmp	0x764	; 0x764 <__prologue_saves__>
 24e:	6c 01       	movw	r12, r24
 250:	7b 01       	movw	r14, r22
 252:	8a 01       	movw	r16, r20
 254:	fc 01       	movw	r30, r24
 256:	17 82       	std	Z+7, r1	; 0x07
 258:	16 82       	std	Z+6, r1	; 0x06
 25a:	83 81       	ldd	r24, Z+3	; 0x03
 25c:	81 ff       	sbrs	r24, 1
 25e:	cc c1       	rjmp	.+920    	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 260:	ce 01       	movw	r24, r28
 262:	01 96       	adiw	r24, 0x01	; 1
 264:	3c 01       	movw	r6, r24
 266:	f6 01       	movw	r30, r12
 268:	93 81       	ldd	r25, Z+3	; 0x03
 26a:	f7 01       	movw	r30, r14
 26c:	93 fd       	sbrc	r25, 3
 26e:	85 91       	lpm	r24, Z+
 270:	93 ff       	sbrs	r25, 3
 272:	81 91       	ld	r24, Z+
 274:	7f 01       	movw	r14, r30
 276:	88 23       	and	r24, r24
 278:	09 f4       	brne	.+2      	; 0x27c <vfprintf+0x3a>
 27a:	ba c1       	rjmp	.+884    	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 27c:	85 32       	cpi	r24, 0x25	; 37
 27e:	39 f4       	brne	.+14     	; 0x28e <vfprintf+0x4c>
 280:	93 fd       	sbrc	r25, 3
 282:	85 91       	lpm	r24, Z+
 284:	93 ff       	sbrs	r25, 3
 286:	81 91       	ld	r24, Z+
 288:	7f 01       	movw	r14, r30
 28a:	85 32       	cpi	r24, 0x25	; 37
 28c:	29 f4       	brne	.+10     	; 0x298 <vfprintf+0x56>
 28e:	b6 01       	movw	r22, r12
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	0e 94 18 03 	call	0x630	; 0x630 <fputc>
 296:	e7 cf       	rjmp	.-50     	; 0x266 <vfprintf+0x24>
 298:	91 2c       	mov	r9, r1
 29a:	21 2c       	mov	r2, r1
 29c:	31 2c       	mov	r3, r1
 29e:	ff e1       	ldi	r31, 0x1F	; 31
 2a0:	f3 15       	cp	r31, r3
 2a2:	d8 f0       	brcs	.+54     	; 0x2da <vfprintf+0x98>
 2a4:	8b 32       	cpi	r24, 0x2B	; 43
 2a6:	79 f0       	breq	.+30     	; 0x2c6 <vfprintf+0x84>
 2a8:	38 f4       	brcc	.+14     	; 0x2b8 <vfprintf+0x76>
 2aa:	80 32       	cpi	r24, 0x20	; 32
 2ac:	79 f0       	breq	.+30     	; 0x2cc <vfprintf+0x8a>
 2ae:	83 32       	cpi	r24, 0x23	; 35
 2b0:	a1 f4       	brne	.+40     	; 0x2da <vfprintf+0x98>
 2b2:	23 2d       	mov	r18, r3
 2b4:	20 61       	ori	r18, 0x10	; 16
 2b6:	1d c0       	rjmp	.+58     	; 0x2f2 <vfprintf+0xb0>
 2b8:	8d 32       	cpi	r24, 0x2D	; 45
 2ba:	61 f0       	breq	.+24     	; 0x2d4 <vfprintf+0x92>
 2bc:	80 33       	cpi	r24, 0x30	; 48
 2be:	69 f4       	brne	.+26     	; 0x2da <vfprintf+0x98>
 2c0:	23 2d       	mov	r18, r3
 2c2:	21 60       	ori	r18, 0x01	; 1
 2c4:	16 c0       	rjmp	.+44     	; 0x2f2 <vfprintf+0xb0>
 2c6:	83 2d       	mov	r24, r3
 2c8:	82 60       	ori	r24, 0x02	; 2
 2ca:	38 2e       	mov	r3, r24
 2cc:	e3 2d       	mov	r30, r3
 2ce:	e4 60       	ori	r30, 0x04	; 4
 2d0:	3e 2e       	mov	r3, r30
 2d2:	2a c0       	rjmp	.+84     	; 0x328 <vfprintf+0xe6>
 2d4:	f3 2d       	mov	r31, r3
 2d6:	f8 60       	ori	r31, 0x08	; 8
 2d8:	1d c0       	rjmp	.+58     	; 0x314 <vfprintf+0xd2>
 2da:	37 fc       	sbrc	r3, 7
 2dc:	2d c0       	rjmp	.+90     	; 0x338 <vfprintf+0xf6>
 2de:	20 ed       	ldi	r18, 0xD0	; 208
 2e0:	28 0f       	add	r18, r24
 2e2:	2a 30       	cpi	r18, 0x0A	; 10
 2e4:	40 f0       	brcs	.+16     	; 0x2f6 <vfprintf+0xb4>
 2e6:	8e 32       	cpi	r24, 0x2E	; 46
 2e8:	b9 f4       	brne	.+46     	; 0x318 <vfprintf+0xd6>
 2ea:	36 fc       	sbrc	r3, 6
 2ec:	81 c1       	rjmp	.+770    	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 2ee:	23 2d       	mov	r18, r3
 2f0:	20 64       	ori	r18, 0x40	; 64
 2f2:	32 2e       	mov	r3, r18
 2f4:	19 c0       	rjmp	.+50     	; 0x328 <vfprintf+0xe6>
 2f6:	36 fe       	sbrs	r3, 6
 2f8:	06 c0       	rjmp	.+12     	; 0x306 <vfprintf+0xc4>
 2fa:	8a e0       	ldi	r24, 0x0A	; 10
 2fc:	98 9e       	mul	r9, r24
 2fe:	20 0d       	add	r18, r0
 300:	11 24       	eor	r1, r1
 302:	92 2e       	mov	r9, r18
 304:	11 c0       	rjmp	.+34     	; 0x328 <vfprintf+0xe6>
 306:	ea e0       	ldi	r30, 0x0A	; 10
 308:	2e 9e       	mul	r2, r30
 30a:	20 0d       	add	r18, r0
 30c:	11 24       	eor	r1, r1
 30e:	22 2e       	mov	r2, r18
 310:	f3 2d       	mov	r31, r3
 312:	f0 62       	ori	r31, 0x20	; 32
 314:	3f 2e       	mov	r3, r31
 316:	08 c0       	rjmp	.+16     	; 0x328 <vfprintf+0xe6>
 318:	8c 36       	cpi	r24, 0x6C	; 108
 31a:	21 f4       	brne	.+8      	; 0x324 <vfprintf+0xe2>
 31c:	83 2d       	mov	r24, r3
 31e:	80 68       	ori	r24, 0x80	; 128
 320:	38 2e       	mov	r3, r24
 322:	02 c0       	rjmp	.+4      	; 0x328 <vfprintf+0xe6>
 324:	88 36       	cpi	r24, 0x68	; 104
 326:	41 f4       	brne	.+16     	; 0x338 <vfprintf+0xf6>
 328:	f7 01       	movw	r30, r14
 32a:	93 fd       	sbrc	r25, 3
 32c:	85 91       	lpm	r24, Z+
 32e:	93 ff       	sbrs	r25, 3
 330:	81 91       	ld	r24, Z+
 332:	7f 01       	movw	r14, r30
 334:	81 11       	cpse	r24, r1
 336:	b3 cf       	rjmp	.-154    	; 0x29e <vfprintf+0x5c>
 338:	98 2f       	mov	r25, r24
 33a:	9f 7d       	andi	r25, 0xDF	; 223
 33c:	95 54       	subi	r25, 0x45	; 69
 33e:	93 30       	cpi	r25, 0x03	; 3
 340:	28 f4       	brcc	.+10     	; 0x34c <vfprintf+0x10a>
 342:	0c 5f       	subi	r16, 0xFC	; 252
 344:	1f 4f       	sbci	r17, 0xFF	; 255
 346:	9f e3       	ldi	r25, 0x3F	; 63
 348:	99 83       	std	Y+1, r25	; 0x01
 34a:	0d c0       	rjmp	.+26     	; 0x366 <vfprintf+0x124>
 34c:	83 36       	cpi	r24, 0x63	; 99
 34e:	31 f0       	breq	.+12     	; 0x35c <vfprintf+0x11a>
 350:	83 37       	cpi	r24, 0x73	; 115
 352:	71 f0       	breq	.+28     	; 0x370 <vfprintf+0x12e>
 354:	83 35       	cpi	r24, 0x53	; 83
 356:	09 f0       	breq	.+2      	; 0x35a <vfprintf+0x118>
 358:	59 c0       	rjmp	.+178    	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 35a:	21 c0       	rjmp	.+66     	; 0x39e <vfprintf+0x15c>
 35c:	f8 01       	movw	r30, r16
 35e:	80 81       	ld	r24, Z
 360:	89 83       	std	Y+1, r24	; 0x01
 362:	0e 5f       	subi	r16, 0xFE	; 254
 364:	1f 4f       	sbci	r17, 0xFF	; 255
 366:	88 24       	eor	r8, r8
 368:	83 94       	inc	r8
 36a:	91 2c       	mov	r9, r1
 36c:	53 01       	movw	r10, r6
 36e:	13 c0       	rjmp	.+38     	; 0x396 <vfprintf+0x154>
 370:	28 01       	movw	r4, r16
 372:	f2 e0       	ldi	r31, 0x02	; 2
 374:	4f 0e       	add	r4, r31
 376:	51 1c       	adc	r5, r1
 378:	f8 01       	movw	r30, r16
 37a:	a0 80       	ld	r10, Z
 37c:	b1 80       	ldd	r11, Z+1	; 0x01
 37e:	36 fe       	sbrs	r3, 6
 380:	03 c0       	rjmp	.+6      	; 0x388 <vfprintf+0x146>
 382:	69 2d       	mov	r22, r9
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	02 c0       	rjmp	.+4      	; 0x38c <vfprintf+0x14a>
 388:	6f ef       	ldi	r22, 0xFF	; 255
 38a:	7f ef       	ldi	r23, 0xFF	; 255
 38c:	c5 01       	movw	r24, r10
 38e:	0e 94 0d 03 	call	0x61a	; 0x61a <strnlen>
 392:	4c 01       	movw	r8, r24
 394:	82 01       	movw	r16, r4
 396:	f3 2d       	mov	r31, r3
 398:	ff 77       	andi	r31, 0x7F	; 127
 39a:	3f 2e       	mov	r3, r31
 39c:	16 c0       	rjmp	.+44     	; 0x3ca <vfprintf+0x188>
 39e:	28 01       	movw	r4, r16
 3a0:	22 e0       	ldi	r18, 0x02	; 2
 3a2:	42 0e       	add	r4, r18
 3a4:	51 1c       	adc	r5, r1
 3a6:	f8 01       	movw	r30, r16
 3a8:	a0 80       	ld	r10, Z
 3aa:	b1 80       	ldd	r11, Z+1	; 0x01
 3ac:	36 fe       	sbrs	r3, 6
 3ae:	03 c0       	rjmp	.+6      	; 0x3b6 <vfprintf+0x174>
 3b0:	69 2d       	mov	r22, r9
 3b2:	70 e0       	ldi	r23, 0x00	; 0
 3b4:	02 c0       	rjmp	.+4      	; 0x3ba <vfprintf+0x178>
 3b6:	6f ef       	ldi	r22, 0xFF	; 255
 3b8:	7f ef       	ldi	r23, 0xFF	; 255
 3ba:	c5 01       	movw	r24, r10
 3bc:	0e 94 02 03 	call	0x604	; 0x604 <strnlen_P>
 3c0:	4c 01       	movw	r8, r24
 3c2:	f3 2d       	mov	r31, r3
 3c4:	f0 68       	ori	r31, 0x80	; 128
 3c6:	3f 2e       	mov	r3, r31
 3c8:	82 01       	movw	r16, r4
 3ca:	33 fc       	sbrc	r3, 3
 3cc:	1b c0       	rjmp	.+54     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3ce:	82 2d       	mov	r24, r2
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	88 16       	cp	r8, r24
 3d4:	99 06       	cpc	r9, r25
 3d6:	b0 f4       	brcc	.+44     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3d8:	b6 01       	movw	r22, r12
 3da:	80 e2       	ldi	r24, 0x20	; 32
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	0e 94 18 03 	call	0x630	; 0x630 <fputc>
 3e2:	2a 94       	dec	r2
 3e4:	f4 cf       	rjmp	.-24     	; 0x3ce <vfprintf+0x18c>
 3e6:	f5 01       	movw	r30, r10
 3e8:	37 fc       	sbrc	r3, 7
 3ea:	85 91       	lpm	r24, Z+
 3ec:	37 fe       	sbrs	r3, 7
 3ee:	81 91       	ld	r24, Z+
 3f0:	5f 01       	movw	r10, r30
 3f2:	b6 01       	movw	r22, r12
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	0e 94 18 03 	call	0x630	; 0x630 <fputc>
 3fa:	21 10       	cpse	r2, r1
 3fc:	2a 94       	dec	r2
 3fe:	21 e0       	ldi	r18, 0x01	; 1
 400:	82 1a       	sub	r8, r18
 402:	91 08       	sbc	r9, r1
 404:	81 14       	cp	r8, r1
 406:	91 04       	cpc	r9, r1
 408:	71 f7       	brne	.-36     	; 0x3e6 <vfprintf+0x1a4>
 40a:	e8 c0       	rjmp	.+464    	; 0x5dc <__EEPROM_REGION_LENGTH__+0x1dc>
 40c:	84 36       	cpi	r24, 0x64	; 100
 40e:	11 f0       	breq	.+4      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 410:	89 36       	cpi	r24, 0x69	; 105
 412:	41 f5       	brne	.+80     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 414:	f8 01       	movw	r30, r16
 416:	37 fe       	sbrs	r3, 7
 418:	07 c0       	rjmp	.+14     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 41a:	60 81       	ld	r22, Z
 41c:	71 81       	ldd	r23, Z+1	; 0x01
 41e:	82 81       	ldd	r24, Z+2	; 0x02
 420:	93 81       	ldd	r25, Z+3	; 0x03
 422:	0c 5f       	subi	r16, 0xFC	; 252
 424:	1f 4f       	sbci	r17, 0xFF	; 255
 426:	08 c0       	rjmp	.+16     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 428:	60 81       	ld	r22, Z
 42a:	71 81       	ldd	r23, Z+1	; 0x01
 42c:	07 2e       	mov	r0, r23
 42e:	00 0c       	add	r0, r0
 430:	88 0b       	sbc	r24, r24
 432:	99 0b       	sbc	r25, r25
 434:	0e 5f       	subi	r16, 0xFE	; 254
 436:	1f 4f       	sbci	r17, 0xFF	; 255
 438:	f3 2d       	mov	r31, r3
 43a:	ff 76       	andi	r31, 0x6F	; 111
 43c:	3f 2e       	mov	r3, r31
 43e:	97 ff       	sbrs	r25, 7
 440:	09 c0       	rjmp	.+18     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 442:	90 95       	com	r25
 444:	80 95       	com	r24
 446:	70 95       	com	r23
 448:	61 95       	neg	r22
 44a:	7f 4f       	sbci	r23, 0xFF	; 255
 44c:	8f 4f       	sbci	r24, 0xFF	; 255
 44e:	9f 4f       	sbci	r25, 0xFF	; 255
 450:	f0 68       	ori	r31, 0x80	; 128
 452:	3f 2e       	mov	r3, r31
 454:	2a e0       	ldi	r18, 0x0A	; 10
 456:	30 e0       	ldi	r19, 0x00	; 0
 458:	a3 01       	movw	r20, r6
 45a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <__ultoa_invert>
 45e:	88 2e       	mov	r8, r24
 460:	86 18       	sub	r8, r6
 462:	45 c0       	rjmp	.+138    	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 464:	85 37       	cpi	r24, 0x75	; 117
 466:	31 f4       	brne	.+12     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 468:	23 2d       	mov	r18, r3
 46a:	2f 7e       	andi	r18, 0xEF	; 239
 46c:	b2 2e       	mov	r11, r18
 46e:	2a e0       	ldi	r18, 0x0A	; 10
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	25 c0       	rjmp	.+74     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 474:	93 2d       	mov	r25, r3
 476:	99 7f       	andi	r25, 0xF9	; 249
 478:	b9 2e       	mov	r11, r25
 47a:	8f 36       	cpi	r24, 0x6F	; 111
 47c:	c1 f0       	breq	.+48     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 47e:	18 f4       	brcc	.+6      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 480:	88 35       	cpi	r24, 0x58	; 88
 482:	79 f0       	breq	.+30     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 484:	b5 c0       	rjmp	.+362    	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 486:	80 37       	cpi	r24, 0x70	; 112
 488:	19 f0       	breq	.+6      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 48a:	88 37       	cpi	r24, 0x78	; 120
 48c:	21 f0       	breq	.+8      	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 48e:	b0 c0       	rjmp	.+352    	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 490:	e9 2f       	mov	r30, r25
 492:	e0 61       	ori	r30, 0x10	; 16
 494:	be 2e       	mov	r11, r30
 496:	b4 fe       	sbrs	r11, 4
 498:	0d c0       	rjmp	.+26     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
 49a:	fb 2d       	mov	r31, r11
 49c:	f4 60       	ori	r31, 0x04	; 4
 49e:	bf 2e       	mov	r11, r31
 4a0:	09 c0       	rjmp	.+18     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
 4a2:	34 fe       	sbrs	r3, 4
 4a4:	0a c0       	rjmp	.+20     	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 4a6:	29 2f       	mov	r18, r25
 4a8:	26 60       	ori	r18, 0x06	; 6
 4aa:	b2 2e       	mov	r11, r18
 4ac:	06 c0       	rjmp	.+12     	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 4ae:	28 e0       	ldi	r18, 0x08	; 8
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	05 c0       	rjmp	.+10     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4b4:	20 e1       	ldi	r18, 0x10	; 16
 4b6:	30 e0       	ldi	r19, 0x00	; 0
 4b8:	02 c0       	rjmp	.+4      	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4ba:	20 e1       	ldi	r18, 0x10	; 16
 4bc:	32 e0       	ldi	r19, 0x02	; 2
 4be:	f8 01       	movw	r30, r16
 4c0:	b7 fe       	sbrs	r11, 7
 4c2:	07 c0       	rjmp	.+14     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4c4:	60 81       	ld	r22, Z
 4c6:	71 81       	ldd	r23, Z+1	; 0x01
 4c8:	82 81       	ldd	r24, Z+2	; 0x02
 4ca:	93 81       	ldd	r25, Z+3	; 0x03
 4cc:	0c 5f       	subi	r16, 0xFC	; 252
 4ce:	1f 4f       	sbci	r17, 0xFF	; 255
 4d0:	06 c0       	rjmp	.+12     	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
 4d2:	60 81       	ld	r22, Z
 4d4:	71 81       	ldd	r23, Z+1	; 0x01
 4d6:	80 e0       	ldi	r24, 0x00	; 0
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	0e 5f       	subi	r16, 0xFE	; 254
 4dc:	1f 4f       	sbci	r17, 0xFF	; 255
 4de:	a3 01       	movw	r20, r6
 4e0:	0e 94 54 03 	call	0x6a8	; 0x6a8 <__ultoa_invert>
 4e4:	88 2e       	mov	r8, r24
 4e6:	86 18       	sub	r8, r6
 4e8:	fb 2d       	mov	r31, r11
 4ea:	ff 77       	andi	r31, 0x7F	; 127
 4ec:	3f 2e       	mov	r3, r31
 4ee:	36 fe       	sbrs	r3, 6
 4f0:	0d c0       	rjmp	.+26     	; 0x50c <__EEPROM_REGION_LENGTH__+0x10c>
 4f2:	23 2d       	mov	r18, r3
 4f4:	2e 7f       	andi	r18, 0xFE	; 254
 4f6:	a2 2e       	mov	r10, r18
 4f8:	89 14       	cp	r8, r9
 4fa:	58 f4       	brcc	.+22     	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
 4fc:	34 fe       	sbrs	r3, 4
 4fe:	0b c0       	rjmp	.+22     	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
 500:	32 fc       	sbrc	r3, 2
 502:	09 c0       	rjmp	.+18     	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
 504:	83 2d       	mov	r24, r3
 506:	8e 7e       	andi	r24, 0xEE	; 238
 508:	a8 2e       	mov	r10, r24
 50a:	05 c0       	rjmp	.+10     	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
 50c:	b8 2c       	mov	r11, r8
 50e:	a3 2c       	mov	r10, r3
 510:	03 c0       	rjmp	.+6      	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
 512:	b8 2c       	mov	r11, r8
 514:	01 c0       	rjmp	.+2      	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
 516:	b9 2c       	mov	r11, r9
 518:	a4 fe       	sbrs	r10, 4
 51a:	0f c0       	rjmp	.+30     	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
 51c:	fe 01       	movw	r30, r28
 51e:	e8 0d       	add	r30, r8
 520:	f1 1d       	adc	r31, r1
 522:	80 81       	ld	r24, Z
 524:	80 33       	cpi	r24, 0x30	; 48
 526:	21 f4       	brne	.+8      	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
 528:	9a 2d       	mov	r25, r10
 52a:	99 7e       	andi	r25, 0xE9	; 233
 52c:	a9 2e       	mov	r10, r25
 52e:	09 c0       	rjmp	.+18     	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 530:	a2 fe       	sbrs	r10, 2
 532:	06 c0       	rjmp	.+12     	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 534:	b3 94       	inc	r11
 536:	b3 94       	inc	r11
 538:	04 c0       	rjmp	.+8      	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 53a:	8a 2d       	mov	r24, r10
 53c:	86 78       	andi	r24, 0x86	; 134
 53e:	09 f0       	breq	.+2      	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 540:	b3 94       	inc	r11
 542:	a3 fc       	sbrc	r10, 3
 544:	11 c0       	rjmp	.+34     	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 546:	a0 fe       	sbrs	r10, 0
 548:	06 c0       	rjmp	.+12     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 54a:	b2 14       	cp	r11, r2
 54c:	88 f4       	brcc	.+34     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 54e:	28 0c       	add	r2, r8
 550:	92 2c       	mov	r9, r2
 552:	9b 18       	sub	r9, r11
 554:	0e c0       	rjmp	.+28     	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 556:	b2 14       	cp	r11, r2
 558:	60 f4       	brcc	.+24     	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 55a:	b6 01       	movw	r22, r12
 55c:	80 e2       	ldi	r24, 0x20	; 32
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	0e 94 18 03 	call	0x630	; 0x630 <fputc>
 564:	b3 94       	inc	r11
 566:	f7 cf       	rjmp	.-18     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 568:	b2 14       	cp	r11, r2
 56a:	18 f4       	brcc	.+6      	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 56c:	2b 18       	sub	r2, r11
 56e:	02 c0       	rjmp	.+4      	; 0x574 <__EEPROM_REGION_LENGTH__+0x174>
 570:	98 2c       	mov	r9, r8
 572:	21 2c       	mov	r2, r1
 574:	a4 fe       	sbrs	r10, 4
 576:	10 c0       	rjmp	.+32     	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
 578:	b6 01       	movw	r22, r12
 57a:	80 e3       	ldi	r24, 0x30	; 48
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	0e 94 18 03 	call	0x630	; 0x630 <fputc>
 582:	a2 fe       	sbrs	r10, 2
 584:	17 c0       	rjmp	.+46     	; 0x5b4 <__EEPROM_REGION_LENGTH__+0x1b4>
 586:	a1 fc       	sbrc	r10, 1
 588:	03 c0       	rjmp	.+6      	; 0x590 <__EEPROM_REGION_LENGTH__+0x190>
 58a:	88 e7       	ldi	r24, 0x78	; 120
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	02 c0       	rjmp	.+4      	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
 590:	88 e5       	ldi	r24, 0x58	; 88
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	b6 01       	movw	r22, r12
 596:	0c c0       	rjmp	.+24     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 598:	8a 2d       	mov	r24, r10
 59a:	86 78       	andi	r24, 0x86	; 134
 59c:	59 f0       	breq	.+22     	; 0x5b4 <__EEPROM_REGION_LENGTH__+0x1b4>
 59e:	a1 fe       	sbrs	r10, 1
 5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 5a2:	8b e2       	ldi	r24, 0x2B	; 43
 5a4:	01 c0       	rjmp	.+2      	; 0x5a8 <__EEPROM_REGION_LENGTH__+0x1a8>
 5a6:	80 e2       	ldi	r24, 0x20	; 32
 5a8:	a7 fc       	sbrc	r10, 7
 5aa:	8d e2       	ldi	r24, 0x2D	; 45
 5ac:	b6 01       	movw	r22, r12
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	0e 94 18 03 	call	0x630	; 0x630 <fputc>
 5b4:	89 14       	cp	r8, r9
 5b6:	38 f4       	brcc	.+14     	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
 5b8:	b6 01       	movw	r22, r12
 5ba:	80 e3       	ldi	r24, 0x30	; 48
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	0e 94 18 03 	call	0x630	; 0x630 <fputc>
 5c2:	9a 94       	dec	r9
 5c4:	f7 cf       	rjmp	.-18     	; 0x5b4 <__EEPROM_REGION_LENGTH__+0x1b4>
 5c6:	8a 94       	dec	r8
 5c8:	f3 01       	movw	r30, r6
 5ca:	e8 0d       	add	r30, r8
 5cc:	f1 1d       	adc	r31, r1
 5ce:	80 81       	ld	r24, Z
 5d0:	b6 01       	movw	r22, r12
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	0e 94 18 03 	call	0x630	; 0x630 <fputc>
 5d8:	81 10       	cpse	r8, r1
 5da:	f5 cf       	rjmp	.-22     	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
 5dc:	22 20       	and	r2, r2
 5de:	09 f4       	brne	.+2      	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
 5e0:	42 ce       	rjmp	.-892    	; 0x266 <vfprintf+0x24>
 5e2:	b6 01       	movw	r22, r12
 5e4:	80 e2       	ldi	r24, 0x20	; 32
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	0e 94 18 03 	call	0x630	; 0x630 <fputc>
 5ec:	2a 94       	dec	r2
 5ee:	f6 cf       	rjmp	.-20     	; 0x5dc <__EEPROM_REGION_LENGTH__+0x1dc>
 5f0:	f6 01       	movw	r30, r12
 5f2:	86 81       	ldd	r24, Z+6	; 0x06
 5f4:	97 81       	ldd	r25, Z+7	; 0x07
 5f6:	02 c0       	rjmp	.+4      	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5f8:	8f ef       	ldi	r24, 0xFF	; 255
 5fa:	9f ef       	ldi	r25, 0xFF	; 255
 5fc:	2b 96       	adiw	r28, 0x0b	; 11
 5fe:	e2 e1       	ldi	r30, 0x12	; 18
 600:	0c 94 ce 03 	jmp	0x79c	; 0x79c <__epilogue_restores__>

00000604 <strnlen_P>:
 604:	fc 01       	movw	r30, r24
 606:	05 90       	lpm	r0, Z+
 608:	61 50       	subi	r22, 0x01	; 1
 60a:	70 40       	sbci	r23, 0x00	; 0
 60c:	01 10       	cpse	r0, r1
 60e:	d8 f7       	brcc	.-10     	; 0x606 <strnlen_P+0x2>
 610:	80 95       	com	r24
 612:	90 95       	com	r25
 614:	8e 0f       	add	r24, r30
 616:	9f 1f       	adc	r25, r31
 618:	08 95       	ret

0000061a <strnlen>:
 61a:	fc 01       	movw	r30, r24
 61c:	61 50       	subi	r22, 0x01	; 1
 61e:	70 40       	sbci	r23, 0x00	; 0
 620:	01 90       	ld	r0, Z+
 622:	01 10       	cpse	r0, r1
 624:	d8 f7       	brcc	.-10     	; 0x61c <strnlen+0x2>
 626:	80 95       	com	r24
 628:	90 95       	com	r25
 62a:	8e 0f       	add	r24, r30
 62c:	9f 1f       	adc	r25, r31
 62e:	08 95       	ret

00000630 <fputc>:
 630:	0f 93       	push	r16
 632:	1f 93       	push	r17
 634:	cf 93       	push	r28
 636:	df 93       	push	r29
 638:	fb 01       	movw	r30, r22
 63a:	23 81       	ldd	r18, Z+3	; 0x03
 63c:	21 fd       	sbrc	r18, 1
 63e:	03 c0       	rjmp	.+6      	; 0x646 <fputc+0x16>
 640:	8f ef       	ldi	r24, 0xFF	; 255
 642:	9f ef       	ldi	r25, 0xFF	; 255
 644:	2c c0       	rjmp	.+88     	; 0x69e <fputc+0x6e>
 646:	22 ff       	sbrs	r18, 2
 648:	16 c0       	rjmp	.+44     	; 0x676 <fputc+0x46>
 64a:	46 81       	ldd	r20, Z+6	; 0x06
 64c:	57 81       	ldd	r21, Z+7	; 0x07
 64e:	24 81       	ldd	r18, Z+4	; 0x04
 650:	35 81       	ldd	r19, Z+5	; 0x05
 652:	42 17       	cp	r20, r18
 654:	53 07       	cpc	r21, r19
 656:	44 f4       	brge	.+16     	; 0x668 <fputc+0x38>
 658:	a0 81       	ld	r26, Z
 65a:	b1 81       	ldd	r27, Z+1	; 0x01
 65c:	9d 01       	movw	r18, r26
 65e:	2f 5f       	subi	r18, 0xFF	; 255
 660:	3f 4f       	sbci	r19, 0xFF	; 255
 662:	31 83       	std	Z+1, r19	; 0x01
 664:	20 83       	st	Z, r18
 666:	8c 93       	st	X, r24
 668:	26 81       	ldd	r18, Z+6	; 0x06
 66a:	37 81       	ldd	r19, Z+7	; 0x07
 66c:	2f 5f       	subi	r18, 0xFF	; 255
 66e:	3f 4f       	sbci	r19, 0xFF	; 255
 670:	37 83       	std	Z+7, r19	; 0x07
 672:	26 83       	std	Z+6, r18	; 0x06
 674:	14 c0       	rjmp	.+40     	; 0x69e <fputc+0x6e>
 676:	8b 01       	movw	r16, r22
 678:	ec 01       	movw	r28, r24
 67a:	fb 01       	movw	r30, r22
 67c:	00 84       	ldd	r0, Z+8	; 0x08
 67e:	f1 85       	ldd	r31, Z+9	; 0x09
 680:	e0 2d       	mov	r30, r0
 682:	09 95       	icall
 684:	89 2b       	or	r24, r25
 686:	e1 f6       	brne	.-72     	; 0x640 <fputc+0x10>
 688:	d8 01       	movw	r26, r16
 68a:	16 96       	adiw	r26, 0x06	; 6
 68c:	8d 91       	ld	r24, X+
 68e:	9c 91       	ld	r25, X
 690:	17 97       	sbiw	r26, 0x07	; 7
 692:	01 96       	adiw	r24, 0x01	; 1
 694:	17 96       	adiw	r26, 0x07	; 7
 696:	9c 93       	st	X, r25
 698:	8e 93       	st	-X, r24
 69a:	16 97       	sbiw	r26, 0x06	; 6
 69c:	ce 01       	movw	r24, r28
 69e:	df 91       	pop	r29
 6a0:	cf 91       	pop	r28
 6a2:	1f 91       	pop	r17
 6a4:	0f 91       	pop	r16
 6a6:	08 95       	ret

000006a8 <__ultoa_invert>:
 6a8:	fa 01       	movw	r30, r20
 6aa:	aa 27       	eor	r26, r26
 6ac:	28 30       	cpi	r18, 0x08	; 8
 6ae:	51 f1       	breq	.+84     	; 0x704 <__ultoa_invert+0x5c>
 6b0:	20 31       	cpi	r18, 0x10	; 16
 6b2:	81 f1       	breq	.+96     	; 0x714 <__ultoa_invert+0x6c>
 6b4:	e8 94       	clt
 6b6:	6f 93       	push	r22
 6b8:	6e 7f       	andi	r22, 0xFE	; 254
 6ba:	6e 5f       	subi	r22, 0xFE	; 254
 6bc:	7f 4f       	sbci	r23, 0xFF	; 255
 6be:	8f 4f       	sbci	r24, 0xFF	; 255
 6c0:	9f 4f       	sbci	r25, 0xFF	; 255
 6c2:	af 4f       	sbci	r26, 0xFF	; 255
 6c4:	b1 e0       	ldi	r27, 0x01	; 1
 6c6:	3e d0       	rcall	.+124    	; 0x744 <__ultoa_invert+0x9c>
 6c8:	b4 e0       	ldi	r27, 0x04	; 4
 6ca:	3c d0       	rcall	.+120    	; 0x744 <__ultoa_invert+0x9c>
 6cc:	67 0f       	add	r22, r23
 6ce:	78 1f       	adc	r23, r24
 6d0:	89 1f       	adc	r24, r25
 6d2:	9a 1f       	adc	r25, r26
 6d4:	a1 1d       	adc	r26, r1
 6d6:	68 0f       	add	r22, r24
 6d8:	79 1f       	adc	r23, r25
 6da:	8a 1f       	adc	r24, r26
 6dc:	91 1d       	adc	r25, r1
 6de:	a1 1d       	adc	r26, r1
 6e0:	6a 0f       	add	r22, r26
 6e2:	71 1d       	adc	r23, r1
 6e4:	81 1d       	adc	r24, r1
 6e6:	91 1d       	adc	r25, r1
 6e8:	a1 1d       	adc	r26, r1
 6ea:	20 d0       	rcall	.+64     	; 0x72c <__ultoa_invert+0x84>
 6ec:	09 f4       	brne	.+2      	; 0x6f0 <__ultoa_invert+0x48>
 6ee:	68 94       	set
 6f0:	3f 91       	pop	r19
 6f2:	2a e0       	ldi	r18, 0x0A	; 10
 6f4:	26 9f       	mul	r18, r22
 6f6:	11 24       	eor	r1, r1
 6f8:	30 19       	sub	r19, r0
 6fa:	30 5d       	subi	r19, 0xD0	; 208
 6fc:	31 93       	st	Z+, r19
 6fe:	de f6       	brtc	.-74     	; 0x6b6 <__ultoa_invert+0xe>
 700:	cf 01       	movw	r24, r30
 702:	08 95       	ret
 704:	46 2f       	mov	r20, r22
 706:	47 70       	andi	r20, 0x07	; 7
 708:	40 5d       	subi	r20, 0xD0	; 208
 70a:	41 93       	st	Z+, r20
 70c:	b3 e0       	ldi	r27, 0x03	; 3
 70e:	0f d0       	rcall	.+30     	; 0x72e <__ultoa_invert+0x86>
 710:	c9 f7       	brne	.-14     	; 0x704 <__ultoa_invert+0x5c>
 712:	f6 cf       	rjmp	.-20     	; 0x700 <__ultoa_invert+0x58>
 714:	46 2f       	mov	r20, r22
 716:	4f 70       	andi	r20, 0x0F	; 15
 718:	40 5d       	subi	r20, 0xD0	; 208
 71a:	4a 33       	cpi	r20, 0x3A	; 58
 71c:	18 f0       	brcs	.+6      	; 0x724 <__ultoa_invert+0x7c>
 71e:	49 5d       	subi	r20, 0xD9	; 217
 720:	31 fd       	sbrc	r19, 1
 722:	40 52       	subi	r20, 0x20	; 32
 724:	41 93       	st	Z+, r20
 726:	02 d0       	rcall	.+4      	; 0x72c <__ultoa_invert+0x84>
 728:	a9 f7       	brne	.-22     	; 0x714 <__ultoa_invert+0x6c>
 72a:	ea cf       	rjmp	.-44     	; 0x700 <__ultoa_invert+0x58>
 72c:	b4 e0       	ldi	r27, 0x04	; 4
 72e:	a6 95       	lsr	r26
 730:	97 95       	ror	r25
 732:	87 95       	ror	r24
 734:	77 95       	ror	r23
 736:	67 95       	ror	r22
 738:	ba 95       	dec	r27
 73a:	c9 f7       	brne	.-14     	; 0x72e <__ultoa_invert+0x86>
 73c:	00 97       	sbiw	r24, 0x00	; 0
 73e:	61 05       	cpc	r22, r1
 740:	71 05       	cpc	r23, r1
 742:	08 95       	ret
 744:	9b 01       	movw	r18, r22
 746:	ac 01       	movw	r20, r24
 748:	0a 2e       	mov	r0, r26
 74a:	06 94       	lsr	r0
 74c:	57 95       	ror	r21
 74e:	47 95       	ror	r20
 750:	37 95       	ror	r19
 752:	27 95       	ror	r18
 754:	ba 95       	dec	r27
 756:	c9 f7       	brne	.-14     	; 0x74a <__ultoa_invert+0xa2>
 758:	62 0f       	add	r22, r18
 75a:	73 1f       	adc	r23, r19
 75c:	84 1f       	adc	r24, r20
 75e:	95 1f       	adc	r25, r21
 760:	a0 1d       	adc	r26, r0
 762:	08 95       	ret

00000764 <__prologue_saves__>:
 764:	2f 92       	push	r2
 766:	3f 92       	push	r3
 768:	4f 92       	push	r4
 76a:	5f 92       	push	r5
 76c:	6f 92       	push	r6
 76e:	7f 92       	push	r7
 770:	8f 92       	push	r8
 772:	9f 92       	push	r9
 774:	af 92       	push	r10
 776:	bf 92       	push	r11
 778:	cf 92       	push	r12
 77a:	df 92       	push	r13
 77c:	ef 92       	push	r14
 77e:	ff 92       	push	r15
 780:	0f 93       	push	r16
 782:	1f 93       	push	r17
 784:	cf 93       	push	r28
 786:	df 93       	push	r29
 788:	cd b7       	in	r28, 0x3d	; 61
 78a:	de b7       	in	r29, 0x3e	; 62
 78c:	ca 1b       	sub	r28, r26
 78e:	db 0b       	sbc	r29, r27
 790:	0f b6       	in	r0, 0x3f	; 63
 792:	f8 94       	cli
 794:	de bf       	out	0x3e, r29	; 62
 796:	0f be       	out	0x3f, r0	; 63
 798:	cd bf       	out	0x3d, r28	; 61
 79a:	09 94       	ijmp

0000079c <__epilogue_restores__>:
 79c:	2a 88       	ldd	r2, Y+18	; 0x12
 79e:	39 88       	ldd	r3, Y+17	; 0x11
 7a0:	48 88       	ldd	r4, Y+16	; 0x10
 7a2:	5f 84       	ldd	r5, Y+15	; 0x0f
 7a4:	6e 84       	ldd	r6, Y+14	; 0x0e
 7a6:	7d 84       	ldd	r7, Y+13	; 0x0d
 7a8:	8c 84       	ldd	r8, Y+12	; 0x0c
 7aa:	9b 84       	ldd	r9, Y+11	; 0x0b
 7ac:	aa 84       	ldd	r10, Y+10	; 0x0a
 7ae:	b9 84       	ldd	r11, Y+9	; 0x09
 7b0:	c8 84       	ldd	r12, Y+8	; 0x08
 7b2:	df 80       	ldd	r13, Y+7	; 0x07
 7b4:	ee 80       	ldd	r14, Y+6	; 0x06
 7b6:	fd 80       	ldd	r15, Y+5	; 0x05
 7b8:	0c 81       	ldd	r16, Y+4	; 0x04
 7ba:	1b 81       	ldd	r17, Y+3	; 0x03
 7bc:	aa 81       	ldd	r26, Y+2	; 0x02
 7be:	b9 81       	ldd	r27, Y+1	; 0x01
 7c0:	ce 0f       	add	r28, r30
 7c2:	d1 1d       	adc	r29, r1
 7c4:	0f b6       	in	r0, 0x3f	; 63
 7c6:	f8 94       	cli
 7c8:	de bf       	out	0x3e, r29	; 62
 7ca:	0f be       	out	0x3f, r0	; 63
 7cc:	cd bf       	out	0x3d, r28	; 61
 7ce:	ed 01       	movw	r28, r26
 7d0:	08 95       	ret

000007d2 <_exit>:
 7d2:	f8 94       	cli

000007d4 <__stop_program>:
 7d4:	ff cf       	rjmp	.-2      	; 0x7d4 <__stop_program>
