
Aplicacion_Interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  000009e2  00000a76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002e  0080011e  0080011e  00000a94  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a94  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000af0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000b30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014cb  00000000  00000000  00000be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000847  00000000  00000000  000020b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008c5  00000000  00000000  000028fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  000031c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000503  00000000  00000000  000033c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b5d  00000000  00000000  000038c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00004420  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__vector_1>
   8:	0c 94 91 00 	jmp	0x122	; 0x122 <__vector_2>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__vector_3>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ee       	ldi	r30, 0xE2	; 226
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 31       	cpi	r26, 0x1E	; 30
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e1       	ldi	r26, 0x1E	; 30
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 34       	cpi	r26, 0x4C	; 76
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 82 01 	call	0x304	; 0x304 <main>
  9e:	0c 94 ef 04 	jmp	0x9de	; 0x9de <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <INTX_Init>:
void PCINTX_Init(void){
	
	
	PCICR |= (1<<PCIE0);//habilitamos ese vector
	
	PCMSK0 |= (1<<PCINT7);//habilitamos el pin pb7
  a6:	e9 e6       	ldi	r30, 0x69	; 105
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	83 60       	ori	r24, 0x03	; 3
  ae:	80 83       	st	Z, r24
  b0:	8d b3       	in	r24, 0x1d	; 29
  b2:	81 60       	ori	r24, 0x01	; 1
  b4:	8d bb       	out	0x1d, r24	; 29
  b6:	80 81       	ld	r24, Z
  b8:	88 60       	ori	r24, 0x08	; 8
  ba:	80 83       	st	Z, r24
  bc:	80 81       	ld	r24, Z
  be:	8b 7f       	andi	r24, 0xFB	; 251
  c0:	80 83       	st	Z, r24
  c2:	8d b3       	in	r24, 0x1d	; 29
  c4:	82 60       	ori	r24, 0x02	; 2
  c6:	8d bb       	out	0x1d, r24	; 29
  c8:	08 95       	ret

000000ca <__vector_3>:
}


ISR(PCINT0_vect){
  ca:	1f 92       	push	r1
  cc:	0f 92       	push	r0
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	0f 92       	push	r0
  d2:	11 24       	eor	r1, r1
  d4:	8f 93       	push	r24
	
	//PORTB ^=(1<<5);
	PCIFR |= (1<<PCIF0);
  d6:	8b b3       	in	r24, 0x1b	; 27
  d8:	81 60       	ori	r24, 0x01	; 1
  da:	8b bb       	out	0x1b, r24	; 27
	
	
}
  dc:	8f 91       	pop	r24
  de:	0f 90       	pop	r0
  e0:	0f be       	out	0x3f, r0	; 63
  e2:	0f 90       	pop	r0
  e4:	1f 90       	pop	r1
  e6:	18 95       	reti

000000e8 <__vector_1>:


ISR(INT0_vect){
  e8:	1f 92       	push	r1
  ea:	0f 92       	push	r0
  ec:	0f b6       	in	r0, 0x3f	; 63
  ee:	0f 92       	push	r0
  f0:	11 24       	eor	r1, r1
  f2:	8f 93       	push	r24
  f4:	9f 93       	push	r25
	Algodon++;
  f6:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <Algodon>
  fa:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <Algodon+0x1>
  fe:	01 96       	adiw	r24, 0x01	; 1
 100:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <Algodon+0x1>
 104:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <Algodon>
	Algodon_F = true;
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <Algodon_F>
	//PORTB ^=(1<<0);
	EIFR |= (1<<INTF0);//limpiamos la bandera
 10e:	8c b3       	in	r24, 0x1c	; 28
 110:	81 60       	ori	r24, 0x01	; 1
 112:	8c bb       	out	0x1c, r24	; 28
}
 114:	9f 91       	pop	r25
 116:	8f 91       	pop	r24
 118:	0f 90       	pop	r0
 11a:	0f be       	out	0x3f, r0	; 63
 11c:	0f 90       	pop	r0
 11e:	1f 90       	pop	r1
 120:	18 95       	reti

00000122 <__vector_2>:

ISR(INT1_vect){
 122:	1f 92       	push	r1
 124:	0f 92       	push	r0
 126:	0f b6       	in	r0, 0x3f	; 63
 128:	0f 92       	push	r0
 12a:	11 24       	eor	r1, r1
 12c:	8f 93       	push	r24
 12e:	9f 93       	push	r25
	Cemento++;
 130:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <Cemento>
 134:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <Cemento+0x1>
 138:	01 96       	adiw	r24, 0x01	; 1
 13a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <Cemento+0x1>
 13e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <Cemento>
	Cemento_F = true;
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
	//PORTB ^=(1<<5);
	EIFR |= (1<<INTF1);//limpiamos la bandera
 148:	8c b3       	in	r24, 0x1c	; 28
 14a:	82 60       	ori	r24, 0x02	; 2
 14c:	8c bb       	out	0x1c, r24	; 28
 14e:	9f 91       	pop	r25
 150:	8f 91       	pop	r24
 152:	0f 90       	pop	r0
 154:	0f be       	out	0x3f, r0	; 63
 156:	0f 90       	pop	r0
 158:	1f 90       	pop	r1
 15a:	18 95       	reti

0000015c <LCD_AVR_Data_Bus>:
	_delay_ms(2);
	E_OFF;
}
void LCD_AVR_Data_Bus(uint8_t a){
	// 0001
	if (a & 0x01){D4_ON;}
 15c:	80 ff       	sbrs	r24, 0
 15e:	04 c0       	rjmp	.+8      	; 0x168 <LCD_AVR_Data_Bus+0xc>
 160:	95 b1       	in	r25, 0x05	; 5
 162:	94 60       	ori	r25, 0x04	; 4
 164:	95 b9       	out	0x05, r25	; 5
 166:	03 c0       	rjmp	.+6      	; 0x16e <LCD_AVR_Data_Bus+0x12>
	else{D4_OFF;}
 168:	95 b1       	in	r25, 0x05	; 5
 16a:	9b 7f       	andi	r25, 0xFB	; 251
 16c:	95 b9       	out	0x05, r25	; 5
	// 0010
	if (a & 0x02){D5_ON;}
 16e:	81 ff       	sbrs	r24, 1
 170:	04 c0       	rjmp	.+8      	; 0x17a <LCD_AVR_Data_Bus+0x1e>
 172:	95 b1       	in	r25, 0x05	; 5
 174:	98 60       	ori	r25, 0x08	; 8
 176:	95 b9       	out	0x05, r25	; 5
 178:	03 c0       	rjmp	.+6      	; 0x180 <LCD_AVR_Data_Bus+0x24>
	else{D5_OFF;}
 17a:	95 b1       	in	r25, 0x05	; 5
 17c:	97 7f       	andi	r25, 0xF7	; 247
 17e:	95 b9       	out	0x05, r25	; 5
	// 0100
	if (a & 0x04){D6_ON;}
 180:	82 ff       	sbrs	r24, 2
 182:	04 c0       	rjmp	.+8      	; 0x18c <LCD_AVR_Data_Bus+0x30>
 184:	95 b1       	in	r25, 0x05	; 5
 186:	90 61       	ori	r25, 0x10	; 16
 188:	95 b9       	out	0x05, r25	; 5
 18a:	03 c0       	rjmp	.+6      	; 0x192 <LCD_AVR_Data_Bus+0x36>
	else{D6_OFF;}
 18c:	95 b1       	in	r25, 0x05	; 5
 18e:	9f 7e       	andi	r25, 0xEF	; 239
 190:	95 b9       	out	0x05, r25	; 5
	// 1000
	if (a & 0x08){D7_ON;}
 192:	83 ff       	sbrs	r24, 3
 194:	04 c0       	rjmp	.+8      	; 0x19e <LCD_AVR_Data_Bus+0x42>
 196:	85 b1       	in	r24, 0x05	; 5
 198:	80 62       	ori	r24, 0x20	; 32
 19a:	85 b9       	out	0x05, r24	; 5
 19c:	08 95       	ret
	else{D7_OFF;}
 19e:	85 b1       	in	r24, 0x05	; 5
 1a0:	8f 7d       	andi	r24, 0xDF	; 223
 1a2:	85 b9       	out	0x05, r24	; 5
 1a4:	08 95       	ret

000001a6 <LCD_AVR_Cmd>:
#include "LCD_avr.h"
#define  F_CPU 8000000UL
#include <util/delay.h>

void LCD_AVR_Cmd(uint8_t a){
	E_OFF;
 1a6:	95 b1       	in	r25, 0x05	; 5
 1a8:	9e 7f       	andi	r25, 0xFE	; 254
 1aa:	95 b9       	out	0x05, r25	; 5
	E_ON;
 1ac:	95 b1       	in	r25, 0x05	; 5
 1ae:	91 60       	ori	r25, 0x01	; 1
 1b0:	95 b9       	out	0x05, r25	; 5
	LCD_AVR_Data_Bus(a)	;
 1b2:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_AVR_Data_Bus>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b6:	8f e9       	ldi	r24, 0x9F	; 159
 1b8:	9f e0       	ldi	r25, 0x0F	; 15
 1ba:	01 97       	sbiw	r24, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <LCD_AVR_Cmd+0x14>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <LCD_AVR_Cmd+0x1a>
 1c0:	00 00       	nop
	_delay_ms(2);
	E_OFF;
 1c2:	85 b1       	in	r24, 0x05	; 5
 1c4:	8e 7f       	andi	r24, 0xFE	; 254
 1c6:	85 b9       	out	0x05, r24	; 5
 1c8:	08 95       	ret

000001ca <LCD_AVR_Init>:
	if (a & 0x08){D7_ON;}
	else{D7_OFF;}
}
void LCD_AVR_Init(void){
	
	DDRB |= (1<<0) |(1<<1)|(1<<2)|(1<<3)|(1<<4)|(1<<5);
 1ca:	84 b1       	in	r24, 0x04	; 4
 1cc:	8f 63       	ori	r24, 0x3F	; 63
 1ce:	84 b9       	out	0x04, r24	; 4
	
	LCD_AVR_Cmd(0X03);
 1d0:	83 e0       	ldi	r24, 0x03	; 3
 1d2:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X03);
 1d6:	83 e0       	ldi	r24, 0x03	; 3
 1d8:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X03);
 1dc:	83 e0       	ldi	r24, 0x03	; 3
 1de:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X02);
 1e2:	82 e0       	ldi	r24, 0x02	; 2
 1e4:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X02);
 1e8:	82 e0       	ldi	r24, 0x02	; 2
 1ea:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X08);
 1ee:	88 e0       	ldi	r24, 0x08	; 8
 1f0:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X00);
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X08);
 1fa:	88 e0       	ldi	r24, 0x08	; 8
 1fc:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X00);
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X01);
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X00);
 20c:	80 e0       	ldi	r24, 0x00	; 0
 20e:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X0D);
 212:	8d e0       	ldi	r24, 0x0D	; 13
 214:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
 218:	08 95       	ret

0000021a <LCD_AVR_Set_Cursor>:
	
}
void LCD_AVR_Set_Cursor(uint8_t x,Ubicacion y){
 21a:	cf 93       	push	r28
uint8_t m,n;

RS_OFF;
 21c:	95 b1       	in	r25, 0x05	; 5
 21e:	9d 7f       	andi	r25, 0xFD	; 253
 220:	95 b9       	out	0x05, r25	; 5
switch (y)
 222:	61 30       	cpi	r22, 0x01	; 1
 224:	c9 f0       	breq	.+50     	; 0x258 <LCD_AVR_Set_Cursor+0x3e>
 226:	28 f0       	brcs	.+10     	; 0x232 <LCD_AVR_Set_Cursor+0x18>
 228:	62 30       	cpi	r22, 0x02	; 2
 22a:	49 f1       	breq	.+82     	; 0x27e <LCD_AVR_Set_Cursor+0x64>
 22c:	63 30       	cpi	r22, 0x03	; 3
 22e:	d1 f1       	breq	.+116    	; 0x2a4 <LCD_AVR_Set_Cursor+0x8a>
 230:	4b c0       	rjmp	.+150    	; 0x2c8 <LCD_AVR_Set_Cursor+0xae>
{
	case Fila1:
			m=0x80+x;
 232:	c0 e8       	ldi	r28, 0x80	; 128
 234:	c8 0f       	add	r28, r24
			n=(0x80+x)>>4;
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	80 58       	subi	r24, 0x80	; 128
 23a:	9f 4f       	sbci	r25, 0xFF	; 255
 23c:	95 95       	asr	r25
 23e:	87 95       	ror	r24
 240:	95 95       	asr	r25
 242:	87 95       	ror	r24
 244:	95 95       	asr	r25
 246:	87 95       	ror	r24
 248:	95 95       	asr	r25
 24a:	87 95       	ror	r24
			LCD_AVR_Cmd(n);
 24c:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
			LCD_AVR_Cmd(m);
 250:	8c 2f       	mov	r24, r28
 252:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	break;
 256:	38 c0       	rjmp	.+112    	; 0x2c8 <LCD_AVR_Set_Cursor+0xae>
	case Fila2:
			m=0xC0+x;
 258:	c0 ec       	ldi	r28, 0xC0	; 192
 25a:	c8 0f       	add	r28, r24
			n=(0XC0+x)>>4;
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	80 54       	subi	r24, 0x40	; 64
 260:	9f 4f       	sbci	r25, 0xFF	; 255
 262:	95 95       	asr	r25
 264:	87 95       	ror	r24
 266:	95 95       	asr	r25
 268:	87 95       	ror	r24
 26a:	95 95       	asr	r25
 26c:	87 95       	ror	r24
 26e:	95 95       	asr	r25
 270:	87 95       	ror	r24
			LCD_AVR_Cmd(n);
 272:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
			LCD_AVR_Cmd(m);
 276:	8c 2f       	mov	r24, r28
 278:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	break;
 27c:	25 c0       	rjmp	.+74     	; 0x2c8 <LCD_AVR_Set_Cursor+0xae>
	case Fila3:
			m=0x94+x;
 27e:	c4 e9       	ldi	r28, 0x94	; 148
 280:	c8 0f       	add	r28, r24
			n=(0x94+x)>>4;
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	8c 56       	subi	r24, 0x6C	; 108
 286:	9f 4f       	sbci	r25, 0xFF	; 255
 288:	95 95       	asr	r25
 28a:	87 95       	ror	r24
 28c:	95 95       	asr	r25
 28e:	87 95       	ror	r24
 290:	95 95       	asr	r25
 292:	87 95       	ror	r24
 294:	95 95       	asr	r25
 296:	87 95       	ror	r24
			LCD_AVR_Cmd(n);
 298:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
			LCD_AVR_Cmd(m);
 29c:	8c 2f       	mov	r24, r28
 29e:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	break;
 2a2:	12 c0       	rjmp	.+36     	; 0x2c8 <LCD_AVR_Set_Cursor+0xae>
	case Fila4:
			m=0xD4+x;
 2a4:	c4 ed       	ldi	r28, 0xD4	; 212
 2a6:	c8 0f       	add	r28, r24
			n=(0xD4+x)>>4;
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	8c 52       	subi	r24, 0x2C	; 44
 2ac:	9f 4f       	sbci	r25, 0xFF	; 255
 2ae:	95 95       	asr	r25
 2b0:	87 95       	ror	r24
 2b2:	95 95       	asr	r25
 2b4:	87 95       	ror	r24
 2b6:	95 95       	asr	r25
 2b8:	87 95       	ror	r24
 2ba:	95 95       	asr	r25
 2bc:	87 95       	ror	r24
			LCD_AVR_Cmd(n);
 2be:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
			LCD_AVR_Cmd(m);
 2c2:	8c 2f       	mov	r24, r28
 2c4:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
	break;
}
	
}
 2c8:	cf 91       	pop	r28
 2ca:	08 95       	ret

000002cc <LCD_AVR_Print_Char>:
void LCD_AVR_Print_Char(char c){
 2cc:	cf 93       	push	r28
 2ce:	c8 2f       	mov	r28, r24
		uint8_t m,n;
		m=c>>4;
		n=c;
		RS_ON;
 2d0:	85 b1       	in	r24, 0x05	; 5
 2d2:	82 60       	ori	r24, 0x02	; 2
 2d4:	85 b9       	out	0x05, r24	; 5
		LCD_AVR_Cmd(m);
 2d6:	8c 2f       	mov	r24, r28
 2d8:	82 95       	swap	r24
 2da:	8f 70       	andi	r24, 0x0F	; 15
 2dc:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 2e0:	8c 2f       	mov	r24, r28
 2e2:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_AVR_Cmd>
}
 2e6:	cf 91       	pop	r28
 2e8:	08 95       	ret

000002ea <LCD_AVR_Print_String>:
void LCD_AVR_Print_String(char *c){
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	ec 01       	movw	r28, r24
	
	char *ptr;
	ptr = c;
	while(*ptr)
 2f0:	03 c0       	rjmp	.+6      	; 0x2f8 <LCD_AVR_Print_String+0xe>
			LCD_AVR_Print_Char(*ptr++);
 2f2:	21 96       	adiw	r28, 0x01	; 1
 2f4:	0e 94 66 01 	call	0x2cc	; 0x2cc <LCD_AVR_Print_Char>
}
void LCD_AVR_Print_String(char *c){
	
	char *ptr;
	ptr = c;
	while(*ptr)
 2f8:	88 81       	ld	r24, Y
 2fa:	81 11       	cpse	r24, r1
 2fc:	fa cf       	rjmp	.-12     	; 0x2f2 <LCD_AVR_Print_String+0x8>
			LCD_AVR_Print_Char(*ptr++);
	
}
 2fe:	df 91       	pop	r29
 300:	cf 91       	pop	r28
 302:	08 95       	ret

00000304 <main>:
volatile bool Algodon_F=false, Cemento_F=false;
char Str_Algodon[20],Str_Cemento[20];

 int main(void)
 {
	 cli();// desabilita las interrupcioness globales
 304:	f8 94       	cli
	 LCD_AVR_Init();
 306:	0e 94 e5 00 	call	0x1ca	; 0x1ca <LCD_AVR_Init>
	 
	 //conversion
	 sprintf(Str_Algodon,"Algodon : %04u",Algodon);
 30a:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <Algodon>
 30e:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <Algodon+0x1>
 312:	9f 93       	push	r25
 314:	8f 93       	push	r24
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	91 e0       	ldi	r25, 0x01	; 1
 31a:	9f 93       	push	r25
 31c:	8f 93       	push	r24
 31e:	88 e3       	ldi	r24, 0x38	; 56
 320:	91 e0       	ldi	r25, 0x01	; 1
 322:	9f 93       	push	r25
 324:	8f 93       	push	r24
 326:	0e 94 05 02 	call	0x40a	; 0x40a <sprintf>
	 sprintf(Str_Cemento,"Cemento : %04u",Cemento);
 32a:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <Cemento>
 32e:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <Cemento+0x1>
 332:	9f 93       	push	r25
 334:	8f 93       	push	r24
 336:	8f e0       	ldi	r24, 0x0F	; 15
 338:	91 e0       	ldi	r25, 0x01	; 1
 33a:	9f 93       	push	r25
 33c:	8f 93       	push	r24
 33e:	84 e2       	ldi	r24, 0x24	; 36
 340:	91 e0       	ldi	r25, 0x01	; 1
 342:	9f 93       	push	r25
 344:	8f 93       	push	r24
 346:	0e 94 05 02 	call	0x40a	; 0x40a <sprintf>
	 
	 LCD_AVR_Set_Cursor(0,Fila1);
 34a:	60 e0       	ldi	r22, 0x00	; 0
 34c:	80 e0       	ldi	r24, 0x00	; 0
 34e:	0e 94 0d 01 	call	0x21a	; 0x21a <LCD_AVR_Set_Cursor>
	 LCD_AVR_Print_String(Str_Algodon);
 352:	88 e3       	ldi	r24, 0x38	; 56
 354:	91 e0       	ldi	r25, 0x01	; 1
 356:	0e 94 75 01 	call	0x2ea	; 0x2ea <LCD_AVR_Print_String>
	 LCD_AVR_Set_Cursor(0,Fila2);
 35a:	61 e0       	ldi	r22, 0x01	; 1
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	0e 94 0d 01 	call	0x21a	; 0x21a <LCD_AVR_Set_Cursor>
	 LCD_AVR_Print_String(Str_Cemento);
 362:	84 e2       	ldi	r24, 0x24	; 36
 364:	91 e0       	ldi	r25, 0x01	; 1
 366:	0e 94 75 01 	call	0x2ea	; 0x2ea <LCD_AVR_Print_String>
	 
	 
	 INTX_Init();
 36a:	0e 94 53 00 	call	0xa6	; 0xa6 <INTX_Init>
	 
	 sei();// habilita las interrupcioness globales
 36e:	78 94       	sei
 370:	8d b7       	in	r24, 0x3d	; 61
 372:	9e b7       	in	r25, 0x3e	; 62
 374:	0c 96       	adiw	r24, 0x0c	; 12
 376:	0f b6       	in	r0, 0x3f	; 63
 378:	f8 94       	cli
 37a:	9e bf       	out	0x3e, r25	; 62
 37c:	0f be       	out	0x3f, r0	; 63
 37e:	8d bf       	out	0x3d, r24	; 61

	 for (;;)
	 {
		if (Algodon_F || Cemento_F)
 380:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <Algodon_F>
 384:	81 11       	cpse	r24, r1
 386:	04 c0       	rjmp	.+8      	; 0x390 <main+0x8c>
 388:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 38c:	88 23       	and	r24, r24
 38e:	c1 f3       	breq	.-16     	; 0x380 <main+0x7c>
		{
			 sprintf(Str_Algodon,"Algodon : %04u",Algodon);
 390:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <Algodon>
 394:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <Algodon+0x1>
 398:	9f 93       	push	r25
 39a:	8f 93       	push	r24
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	91 e0       	ldi	r25, 0x01	; 1
 3a0:	9f 93       	push	r25
 3a2:	8f 93       	push	r24
 3a4:	88 e3       	ldi	r24, 0x38	; 56
 3a6:	91 e0       	ldi	r25, 0x01	; 1
 3a8:	9f 93       	push	r25
 3aa:	8f 93       	push	r24
 3ac:	0e 94 05 02 	call	0x40a	; 0x40a <sprintf>
			 sprintf(Str_Cemento,"Cemento : %04u",Cemento);
 3b0:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <Cemento>
 3b4:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <Cemento+0x1>
 3b8:	9f 93       	push	r25
 3ba:	8f 93       	push	r24
 3bc:	8f e0       	ldi	r24, 0x0F	; 15
 3be:	91 e0       	ldi	r25, 0x01	; 1
 3c0:	9f 93       	push	r25
 3c2:	8f 93       	push	r24
 3c4:	84 e2       	ldi	r24, 0x24	; 36
 3c6:	91 e0       	ldi	r25, 0x01	; 1
 3c8:	9f 93       	push	r25
 3ca:	8f 93       	push	r24
 3cc:	0e 94 05 02 	call	0x40a	; 0x40a <sprintf>
			 
			 LCD_AVR_Set_Cursor(0,Fila1);
 3d0:	60 e0       	ldi	r22, 0x00	; 0
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	0e 94 0d 01 	call	0x21a	; 0x21a <LCD_AVR_Set_Cursor>
			 LCD_AVR_Print_String(Str_Algodon);
 3d8:	88 e3       	ldi	r24, 0x38	; 56
 3da:	91 e0       	ldi	r25, 0x01	; 1
 3dc:	0e 94 75 01 	call	0x2ea	; 0x2ea <LCD_AVR_Print_String>
			 LCD_AVR_Set_Cursor(0,Fila2);
 3e0:	61 e0       	ldi	r22, 0x01	; 1
 3e2:	80 e0       	ldi	r24, 0x00	; 0
 3e4:	0e 94 0d 01 	call	0x21a	; 0x21a <LCD_AVR_Set_Cursor>
			 LCD_AVR_Print_String(Str_Cemento);
 3e8:	84 e2       	ldi	r24, 0x24	; 36
 3ea:	91 e0       	ldi	r25, 0x01	; 1
 3ec:	0e 94 75 01 	call	0x2ea	; 0x2ea <LCD_AVR_Print_String>
			 
			 //borramos las banderas
			Algodon_F = false;
 3f0:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <Algodon_F>
			Cemento_F = false;
 3f4:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <__data_end>
 3f8:	8d b7       	in	r24, 0x3d	; 61
 3fa:	9e b7       	in	r25, 0x3e	; 62
 3fc:	0c 96       	adiw	r24, 0x0c	; 12
 3fe:	0f b6       	in	r0, 0x3f	; 63
 400:	f8 94       	cli
 402:	9e bf       	out	0x3e, r25	; 62
 404:	0f be       	out	0x3f, r0	; 63
 406:	8d bf       	out	0x3d, r24	; 61
 408:	bb cf       	rjmp	.-138    	; 0x380 <main+0x7c>

0000040a <sprintf>:
 40a:	ae e0       	ldi	r26, 0x0E	; 14
 40c:	b0 e0       	ldi	r27, 0x00	; 0
 40e:	eb e0       	ldi	r30, 0x0B	; 11
 410:	f2 e0       	ldi	r31, 0x02	; 2
 412:	0c 94 c6 04 	jmp	0x98c	; 0x98c <__prologue_saves__+0x1c>
 416:	0d 89       	ldd	r16, Y+21	; 0x15
 418:	1e 89       	ldd	r17, Y+22	; 0x16
 41a:	86 e0       	ldi	r24, 0x06	; 6
 41c:	8c 83       	std	Y+4, r24	; 0x04
 41e:	1a 83       	std	Y+2, r17	; 0x02
 420:	09 83       	std	Y+1, r16	; 0x01
 422:	8f ef       	ldi	r24, 0xFF	; 255
 424:	9f e7       	ldi	r25, 0x7F	; 127
 426:	9e 83       	std	Y+6, r25	; 0x06
 428:	8d 83       	std	Y+5, r24	; 0x05
 42a:	ae 01       	movw	r20, r28
 42c:	47 5e       	subi	r20, 0xE7	; 231
 42e:	5f 4f       	sbci	r21, 0xFF	; 255
 430:	6f 89       	ldd	r22, Y+23	; 0x17
 432:	78 8d       	ldd	r23, Y+24	; 0x18
 434:	ce 01       	movw	r24, r28
 436:	01 96       	adiw	r24, 0x01	; 1
 438:	0e 94 27 02 	call	0x44e	; 0x44e <vfprintf>
 43c:	ef 81       	ldd	r30, Y+7	; 0x07
 43e:	f8 85       	ldd	r31, Y+8	; 0x08
 440:	e0 0f       	add	r30, r16
 442:	f1 1f       	adc	r31, r17
 444:	10 82       	st	Z, r1
 446:	2e 96       	adiw	r28, 0x0e	; 14
 448:	e4 e0       	ldi	r30, 0x04	; 4
 44a:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__epilogue_restores__+0x1c>

0000044e <vfprintf>:
 44e:	ab e0       	ldi	r26, 0x0B	; 11
 450:	b0 e0       	ldi	r27, 0x00	; 0
 452:	ed e2       	ldi	r30, 0x2D	; 45
 454:	f2 e0       	ldi	r31, 0x02	; 2
 456:	0c 94 b8 04 	jmp	0x970	; 0x970 <__prologue_saves__>
 45a:	6c 01       	movw	r12, r24
 45c:	7b 01       	movw	r14, r22
 45e:	8a 01       	movw	r16, r20
 460:	fc 01       	movw	r30, r24
 462:	17 82       	std	Z+7, r1	; 0x07
 464:	16 82       	std	Z+6, r1	; 0x06
 466:	83 81       	ldd	r24, Z+3	; 0x03
 468:	81 ff       	sbrs	r24, 1
 46a:	cc c1       	rjmp	.+920    	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 46c:	ce 01       	movw	r24, r28
 46e:	01 96       	adiw	r24, 0x01	; 1
 470:	3c 01       	movw	r6, r24
 472:	f6 01       	movw	r30, r12
 474:	93 81       	ldd	r25, Z+3	; 0x03
 476:	f7 01       	movw	r30, r14
 478:	93 fd       	sbrc	r25, 3
 47a:	85 91       	lpm	r24, Z+
 47c:	93 ff       	sbrs	r25, 3
 47e:	81 91       	ld	r24, Z+
 480:	7f 01       	movw	r14, r30
 482:	88 23       	and	r24, r24
 484:	09 f4       	brne	.+2      	; 0x488 <vfprintf+0x3a>
 486:	ba c1       	rjmp	.+884    	; 0x7fc <vfprintf+0x3ae>
 488:	85 32       	cpi	r24, 0x25	; 37
 48a:	39 f4       	brne	.+14     	; 0x49a <vfprintf+0x4c>
 48c:	93 fd       	sbrc	r25, 3
 48e:	85 91       	lpm	r24, Z+
 490:	93 ff       	sbrs	r25, 3
 492:	81 91       	ld	r24, Z+
 494:	7f 01       	movw	r14, r30
 496:	85 32       	cpi	r24, 0x25	; 37
 498:	29 f4       	brne	.+10     	; 0x4a4 <vfprintf+0x56>
 49a:	b6 01       	movw	r22, r12
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 4a2:	e7 cf       	rjmp	.-50     	; 0x472 <vfprintf+0x24>
 4a4:	91 2c       	mov	r9, r1
 4a6:	21 2c       	mov	r2, r1
 4a8:	31 2c       	mov	r3, r1
 4aa:	ff e1       	ldi	r31, 0x1F	; 31
 4ac:	f3 15       	cp	r31, r3
 4ae:	d8 f0       	brcs	.+54     	; 0x4e6 <vfprintf+0x98>
 4b0:	8b 32       	cpi	r24, 0x2B	; 43
 4b2:	79 f0       	breq	.+30     	; 0x4d2 <vfprintf+0x84>
 4b4:	38 f4       	brcc	.+14     	; 0x4c4 <vfprintf+0x76>
 4b6:	80 32       	cpi	r24, 0x20	; 32
 4b8:	79 f0       	breq	.+30     	; 0x4d8 <vfprintf+0x8a>
 4ba:	83 32       	cpi	r24, 0x23	; 35
 4bc:	a1 f4       	brne	.+40     	; 0x4e6 <vfprintf+0x98>
 4be:	23 2d       	mov	r18, r3
 4c0:	20 61       	ori	r18, 0x10	; 16
 4c2:	1d c0       	rjmp	.+58     	; 0x4fe <vfprintf+0xb0>
 4c4:	8d 32       	cpi	r24, 0x2D	; 45
 4c6:	61 f0       	breq	.+24     	; 0x4e0 <vfprintf+0x92>
 4c8:	80 33       	cpi	r24, 0x30	; 48
 4ca:	69 f4       	brne	.+26     	; 0x4e6 <vfprintf+0x98>
 4cc:	23 2d       	mov	r18, r3
 4ce:	21 60       	ori	r18, 0x01	; 1
 4d0:	16 c0       	rjmp	.+44     	; 0x4fe <vfprintf+0xb0>
 4d2:	83 2d       	mov	r24, r3
 4d4:	82 60       	ori	r24, 0x02	; 2
 4d6:	38 2e       	mov	r3, r24
 4d8:	e3 2d       	mov	r30, r3
 4da:	e4 60       	ori	r30, 0x04	; 4
 4dc:	3e 2e       	mov	r3, r30
 4de:	2a c0       	rjmp	.+84     	; 0x534 <vfprintf+0xe6>
 4e0:	f3 2d       	mov	r31, r3
 4e2:	f8 60       	ori	r31, 0x08	; 8
 4e4:	1d c0       	rjmp	.+58     	; 0x520 <vfprintf+0xd2>
 4e6:	37 fc       	sbrc	r3, 7
 4e8:	2d c0       	rjmp	.+90     	; 0x544 <vfprintf+0xf6>
 4ea:	20 ed       	ldi	r18, 0xD0	; 208
 4ec:	28 0f       	add	r18, r24
 4ee:	2a 30       	cpi	r18, 0x0A	; 10
 4f0:	40 f0       	brcs	.+16     	; 0x502 <vfprintf+0xb4>
 4f2:	8e 32       	cpi	r24, 0x2E	; 46
 4f4:	b9 f4       	brne	.+46     	; 0x524 <vfprintf+0xd6>
 4f6:	36 fc       	sbrc	r3, 6
 4f8:	81 c1       	rjmp	.+770    	; 0x7fc <vfprintf+0x3ae>
 4fa:	23 2d       	mov	r18, r3
 4fc:	20 64       	ori	r18, 0x40	; 64
 4fe:	32 2e       	mov	r3, r18
 500:	19 c0       	rjmp	.+50     	; 0x534 <vfprintf+0xe6>
 502:	36 fe       	sbrs	r3, 6
 504:	06 c0       	rjmp	.+12     	; 0x512 <vfprintf+0xc4>
 506:	8a e0       	ldi	r24, 0x0A	; 10
 508:	98 9e       	mul	r9, r24
 50a:	20 0d       	add	r18, r0
 50c:	11 24       	eor	r1, r1
 50e:	92 2e       	mov	r9, r18
 510:	11 c0       	rjmp	.+34     	; 0x534 <vfprintf+0xe6>
 512:	ea e0       	ldi	r30, 0x0A	; 10
 514:	2e 9e       	mul	r2, r30
 516:	20 0d       	add	r18, r0
 518:	11 24       	eor	r1, r1
 51a:	22 2e       	mov	r2, r18
 51c:	f3 2d       	mov	r31, r3
 51e:	f0 62       	ori	r31, 0x20	; 32
 520:	3f 2e       	mov	r3, r31
 522:	08 c0       	rjmp	.+16     	; 0x534 <vfprintf+0xe6>
 524:	8c 36       	cpi	r24, 0x6C	; 108
 526:	21 f4       	brne	.+8      	; 0x530 <vfprintf+0xe2>
 528:	83 2d       	mov	r24, r3
 52a:	80 68       	ori	r24, 0x80	; 128
 52c:	38 2e       	mov	r3, r24
 52e:	02 c0       	rjmp	.+4      	; 0x534 <vfprintf+0xe6>
 530:	88 36       	cpi	r24, 0x68	; 104
 532:	41 f4       	brne	.+16     	; 0x544 <vfprintf+0xf6>
 534:	f7 01       	movw	r30, r14
 536:	93 fd       	sbrc	r25, 3
 538:	85 91       	lpm	r24, Z+
 53a:	93 ff       	sbrs	r25, 3
 53c:	81 91       	ld	r24, Z+
 53e:	7f 01       	movw	r14, r30
 540:	81 11       	cpse	r24, r1
 542:	b3 cf       	rjmp	.-154    	; 0x4aa <vfprintf+0x5c>
 544:	98 2f       	mov	r25, r24
 546:	9f 7d       	andi	r25, 0xDF	; 223
 548:	95 54       	subi	r25, 0x45	; 69
 54a:	93 30       	cpi	r25, 0x03	; 3
 54c:	28 f4       	brcc	.+10     	; 0x558 <vfprintf+0x10a>
 54e:	0c 5f       	subi	r16, 0xFC	; 252
 550:	1f 4f       	sbci	r17, 0xFF	; 255
 552:	9f e3       	ldi	r25, 0x3F	; 63
 554:	99 83       	std	Y+1, r25	; 0x01
 556:	0d c0       	rjmp	.+26     	; 0x572 <vfprintf+0x124>
 558:	83 36       	cpi	r24, 0x63	; 99
 55a:	31 f0       	breq	.+12     	; 0x568 <vfprintf+0x11a>
 55c:	83 37       	cpi	r24, 0x73	; 115
 55e:	71 f0       	breq	.+28     	; 0x57c <vfprintf+0x12e>
 560:	83 35       	cpi	r24, 0x53	; 83
 562:	09 f0       	breq	.+2      	; 0x566 <vfprintf+0x118>
 564:	59 c0       	rjmp	.+178    	; 0x618 <vfprintf+0x1ca>
 566:	21 c0       	rjmp	.+66     	; 0x5aa <vfprintf+0x15c>
 568:	f8 01       	movw	r30, r16
 56a:	80 81       	ld	r24, Z
 56c:	89 83       	std	Y+1, r24	; 0x01
 56e:	0e 5f       	subi	r16, 0xFE	; 254
 570:	1f 4f       	sbci	r17, 0xFF	; 255
 572:	88 24       	eor	r8, r8
 574:	83 94       	inc	r8
 576:	91 2c       	mov	r9, r1
 578:	53 01       	movw	r10, r6
 57a:	13 c0       	rjmp	.+38     	; 0x5a2 <vfprintf+0x154>
 57c:	28 01       	movw	r4, r16
 57e:	f2 e0       	ldi	r31, 0x02	; 2
 580:	4f 0e       	add	r4, r31
 582:	51 1c       	adc	r5, r1
 584:	f8 01       	movw	r30, r16
 586:	a0 80       	ld	r10, Z
 588:	b1 80       	ldd	r11, Z+1	; 0x01
 58a:	36 fe       	sbrs	r3, 6
 58c:	03 c0       	rjmp	.+6      	; 0x594 <vfprintf+0x146>
 58e:	69 2d       	mov	r22, r9
 590:	70 e0       	ldi	r23, 0x00	; 0
 592:	02 c0       	rjmp	.+4      	; 0x598 <vfprintf+0x14a>
 594:	6f ef       	ldi	r22, 0xFF	; 255
 596:	7f ef       	ldi	r23, 0xFF	; 255
 598:	c5 01       	movw	r24, r10
 59a:	0e 94 13 04 	call	0x826	; 0x826 <strnlen>
 59e:	4c 01       	movw	r8, r24
 5a0:	82 01       	movw	r16, r4
 5a2:	f3 2d       	mov	r31, r3
 5a4:	ff 77       	andi	r31, 0x7F	; 127
 5a6:	3f 2e       	mov	r3, r31
 5a8:	16 c0       	rjmp	.+44     	; 0x5d6 <vfprintf+0x188>
 5aa:	28 01       	movw	r4, r16
 5ac:	22 e0       	ldi	r18, 0x02	; 2
 5ae:	42 0e       	add	r4, r18
 5b0:	51 1c       	adc	r5, r1
 5b2:	f8 01       	movw	r30, r16
 5b4:	a0 80       	ld	r10, Z
 5b6:	b1 80       	ldd	r11, Z+1	; 0x01
 5b8:	36 fe       	sbrs	r3, 6
 5ba:	03 c0       	rjmp	.+6      	; 0x5c2 <vfprintf+0x174>
 5bc:	69 2d       	mov	r22, r9
 5be:	70 e0       	ldi	r23, 0x00	; 0
 5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <vfprintf+0x178>
 5c2:	6f ef       	ldi	r22, 0xFF	; 255
 5c4:	7f ef       	ldi	r23, 0xFF	; 255
 5c6:	c5 01       	movw	r24, r10
 5c8:	0e 94 08 04 	call	0x810	; 0x810 <strnlen_P>
 5cc:	4c 01       	movw	r8, r24
 5ce:	f3 2d       	mov	r31, r3
 5d0:	f0 68       	ori	r31, 0x80	; 128
 5d2:	3f 2e       	mov	r3, r31
 5d4:	82 01       	movw	r16, r4
 5d6:	33 fc       	sbrc	r3, 3
 5d8:	1b c0       	rjmp	.+54     	; 0x610 <vfprintf+0x1c2>
 5da:	82 2d       	mov	r24, r2
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	88 16       	cp	r8, r24
 5e0:	99 06       	cpc	r9, r25
 5e2:	b0 f4       	brcc	.+44     	; 0x610 <vfprintf+0x1c2>
 5e4:	b6 01       	movw	r22, r12
 5e6:	80 e2       	ldi	r24, 0x20	; 32
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 5ee:	2a 94       	dec	r2
 5f0:	f4 cf       	rjmp	.-24     	; 0x5da <vfprintf+0x18c>
 5f2:	f5 01       	movw	r30, r10
 5f4:	37 fc       	sbrc	r3, 7
 5f6:	85 91       	lpm	r24, Z+
 5f8:	37 fe       	sbrs	r3, 7
 5fa:	81 91       	ld	r24, Z+
 5fc:	5f 01       	movw	r10, r30
 5fe:	b6 01       	movw	r22, r12
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 606:	21 10       	cpse	r2, r1
 608:	2a 94       	dec	r2
 60a:	21 e0       	ldi	r18, 0x01	; 1
 60c:	82 1a       	sub	r8, r18
 60e:	91 08       	sbc	r9, r1
 610:	81 14       	cp	r8, r1
 612:	91 04       	cpc	r9, r1
 614:	71 f7       	brne	.-36     	; 0x5f2 <vfprintf+0x1a4>
 616:	e8 c0       	rjmp	.+464    	; 0x7e8 <vfprintf+0x39a>
 618:	84 36       	cpi	r24, 0x64	; 100
 61a:	11 f0       	breq	.+4      	; 0x620 <vfprintf+0x1d2>
 61c:	89 36       	cpi	r24, 0x69	; 105
 61e:	41 f5       	brne	.+80     	; 0x670 <vfprintf+0x222>
 620:	f8 01       	movw	r30, r16
 622:	37 fe       	sbrs	r3, 7
 624:	07 c0       	rjmp	.+14     	; 0x634 <vfprintf+0x1e6>
 626:	60 81       	ld	r22, Z
 628:	71 81       	ldd	r23, Z+1	; 0x01
 62a:	82 81       	ldd	r24, Z+2	; 0x02
 62c:	93 81       	ldd	r25, Z+3	; 0x03
 62e:	0c 5f       	subi	r16, 0xFC	; 252
 630:	1f 4f       	sbci	r17, 0xFF	; 255
 632:	08 c0       	rjmp	.+16     	; 0x644 <vfprintf+0x1f6>
 634:	60 81       	ld	r22, Z
 636:	71 81       	ldd	r23, Z+1	; 0x01
 638:	07 2e       	mov	r0, r23
 63a:	00 0c       	add	r0, r0
 63c:	88 0b       	sbc	r24, r24
 63e:	99 0b       	sbc	r25, r25
 640:	0e 5f       	subi	r16, 0xFE	; 254
 642:	1f 4f       	sbci	r17, 0xFF	; 255
 644:	f3 2d       	mov	r31, r3
 646:	ff 76       	andi	r31, 0x6F	; 111
 648:	3f 2e       	mov	r3, r31
 64a:	97 ff       	sbrs	r25, 7
 64c:	09 c0       	rjmp	.+18     	; 0x660 <vfprintf+0x212>
 64e:	90 95       	com	r25
 650:	80 95       	com	r24
 652:	70 95       	com	r23
 654:	61 95       	neg	r22
 656:	7f 4f       	sbci	r23, 0xFF	; 255
 658:	8f 4f       	sbci	r24, 0xFF	; 255
 65a:	9f 4f       	sbci	r25, 0xFF	; 255
 65c:	f0 68       	ori	r31, 0x80	; 128
 65e:	3f 2e       	mov	r3, r31
 660:	2a e0       	ldi	r18, 0x0A	; 10
 662:	30 e0       	ldi	r19, 0x00	; 0
 664:	a3 01       	movw	r20, r6
 666:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <__ultoa_invert>
 66a:	88 2e       	mov	r8, r24
 66c:	86 18       	sub	r8, r6
 66e:	45 c0       	rjmp	.+138    	; 0x6fa <vfprintf+0x2ac>
 670:	85 37       	cpi	r24, 0x75	; 117
 672:	31 f4       	brne	.+12     	; 0x680 <vfprintf+0x232>
 674:	23 2d       	mov	r18, r3
 676:	2f 7e       	andi	r18, 0xEF	; 239
 678:	b2 2e       	mov	r11, r18
 67a:	2a e0       	ldi	r18, 0x0A	; 10
 67c:	30 e0       	ldi	r19, 0x00	; 0
 67e:	25 c0       	rjmp	.+74     	; 0x6ca <vfprintf+0x27c>
 680:	93 2d       	mov	r25, r3
 682:	99 7f       	andi	r25, 0xF9	; 249
 684:	b9 2e       	mov	r11, r25
 686:	8f 36       	cpi	r24, 0x6F	; 111
 688:	c1 f0       	breq	.+48     	; 0x6ba <vfprintf+0x26c>
 68a:	18 f4       	brcc	.+6      	; 0x692 <vfprintf+0x244>
 68c:	88 35       	cpi	r24, 0x58	; 88
 68e:	79 f0       	breq	.+30     	; 0x6ae <vfprintf+0x260>
 690:	b5 c0       	rjmp	.+362    	; 0x7fc <vfprintf+0x3ae>
 692:	80 37       	cpi	r24, 0x70	; 112
 694:	19 f0       	breq	.+6      	; 0x69c <vfprintf+0x24e>
 696:	88 37       	cpi	r24, 0x78	; 120
 698:	21 f0       	breq	.+8      	; 0x6a2 <vfprintf+0x254>
 69a:	b0 c0       	rjmp	.+352    	; 0x7fc <vfprintf+0x3ae>
 69c:	e9 2f       	mov	r30, r25
 69e:	e0 61       	ori	r30, 0x10	; 16
 6a0:	be 2e       	mov	r11, r30
 6a2:	b4 fe       	sbrs	r11, 4
 6a4:	0d c0       	rjmp	.+26     	; 0x6c0 <vfprintf+0x272>
 6a6:	fb 2d       	mov	r31, r11
 6a8:	f4 60       	ori	r31, 0x04	; 4
 6aa:	bf 2e       	mov	r11, r31
 6ac:	09 c0       	rjmp	.+18     	; 0x6c0 <vfprintf+0x272>
 6ae:	34 fe       	sbrs	r3, 4
 6b0:	0a c0       	rjmp	.+20     	; 0x6c6 <vfprintf+0x278>
 6b2:	29 2f       	mov	r18, r25
 6b4:	26 60       	ori	r18, 0x06	; 6
 6b6:	b2 2e       	mov	r11, r18
 6b8:	06 c0       	rjmp	.+12     	; 0x6c6 <vfprintf+0x278>
 6ba:	28 e0       	ldi	r18, 0x08	; 8
 6bc:	30 e0       	ldi	r19, 0x00	; 0
 6be:	05 c0       	rjmp	.+10     	; 0x6ca <vfprintf+0x27c>
 6c0:	20 e1       	ldi	r18, 0x10	; 16
 6c2:	30 e0       	ldi	r19, 0x00	; 0
 6c4:	02 c0       	rjmp	.+4      	; 0x6ca <vfprintf+0x27c>
 6c6:	20 e1       	ldi	r18, 0x10	; 16
 6c8:	32 e0       	ldi	r19, 0x02	; 2
 6ca:	f8 01       	movw	r30, r16
 6cc:	b7 fe       	sbrs	r11, 7
 6ce:	07 c0       	rjmp	.+14     	; 0x6de <vfprintf+0x290>
 6d0:	60 81       	ld	r22, Z
 6d2:	71 81       	ldd	r23, Z+1	; 0x01
 6d4:	82 81       	ldd	r24, Z+2	; 0x02
 6d6:	93 81       	ldd	r25, Z+3	; 0x03
 6d8:	0c 5f       	subi	r16, 0xFC	; 252
 6da:	1f 4f       	sbci	r17, 0xFF	; 255
 6dc:	06 c0       	rjmp	.+12     	; 0x6ea <vfprintf+0x29c>
 6de:	60 81       	ld	r22, Z
 6e0:	71 81       	ldd	r23, Z+1	; 0x01
 6e2:	80 e0       	ldi	r24, 0x00	; 0
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	0e 5f       	subi	r16, 0xFE	; 254
 6e8:	1f 4f       	sbci	r17, 0xFF	; 255
 6ea:	a3 01       	movw	r20, r6
 6ec:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <__ultoa_invert>
 6f0:	88 2e       	mov	r8, r24
 6f2:	86 18       	sub	r8, r6
 6f4:	fb 2d       	mov	r31, r11
 6f6:	ff 77       	andi	r31, 0x7F	; 127
 6f8:	3f 2e       	mov	r3, r31
 6fa:	36 fe       	sbrs	r3, 6
 6fc:	0d c0       	rjmp	.+26     	; 0x718 <vfprintf+0x2ca>
 6fe:	23 2d       	mov	r18, r3
 700:	2e 7f       	andi	r18, 0xFE	; 254
 702:	a2 2e       	mov	r10, r18
 704:	89 14       	cp	r8, r9
 706:	58 f4       	brcc	.+22     	; 0x71e <vfprintf+0x2d0>
 708:	34 fe       	sbrs	r3, 4
 70a:	0b c0       	rjmp	.+22     	; 0x722 <vfprintf+0x2d4>
 70c:	32 fc       	sbrc	r3, 2
 70e:	09 c0       	rjmp	.+18     	; 0x722 <vfprintf+0x2d4>
 710:	83 2d       	mov	r24, r3
 712:	8e 7e       	andi	r24, 0xEE	; 238
 714:	a8 2e       	mov	r10, r24
 716:	05 c0       	rjmp	.+10     	; 0x722 <vfprintf+0x2d4>
 718:	b8 2c       	mov	r11, r8
 71a:	a3 2c       	mov	r10, r3
 71c:	03 c0       	rjmp	.+6      	; 0x724 <vfprintf+0x2d6>
 71e:	b8 2c       	mov	r11, r8
 720:	01 c0       	rjmp	.+2      	; 0x724 <vfprintf+0x2d6>
 722:	b9 2c       	mov	r11, r9
 724:	a4 fe       	sbrs	r10, 4
 726:	0f c0       	rjmp	.+30     	; 0x746 <vfprintf+0x2f8>
 728:	fe 01       	movw	r30, r28
 72a:	e8 0d       	add	r30, r8
 72c:	f1 1d       	adc	r31, r1
 72e:	80 81       	ld	r24, Z
 730:	80 33       	cpi	r24, 0x30	; 48
 732:	21 f4       	brne	.+8      	; 0x73c <vfprintf+0x2ee>
 734:	9a 2d       	mov	r25, r10
 736:	99 7e       	andi	r25, 0xE9	; 233
 738:	a9 2e       	mov	r10, r25
 73a:	09 c0       	rjmp	.+18     	; 0x74e <vfprintf+0x300>
 73c:	a2 fe       	sbrs	r10, 2
 73e:	06 c0       	rjmp	.+12     	; 0x74c <vfprintf+0x2fe>
 740:	b3 94       	inc	r11
 742:	b3 94       	inc	r11
 744:	04 c0       	rjmp	.+8      	; 0x74e <vfprintf+0x300>
 746:	8a 2d       	mov	r24, r10
 748:	86 78       	andi	r24, 0x86	; 134
 74a:	09 f0       	breq	.+2      	; 0x74e <vfprintf+0x300>
 74c:	b3 94       	inc	r11
 74e:	a3 fc       	sbrc	r10, 3
 750:	11 c0       	rjmp	.+34     	; 0x774 <vfprintf+0x326>
 752:	a0 fe       	sbrs	r10, 0
 754:	06 c0       	rjmp	.+12     	; 0x762 <vfprintf+0x314>
 756:	b2 14       	cp	r11, r2
 758:	88 f4       	brcc	.+34     	; 0x77c <vfprintf+0x32e>
 75a:	28 0c       	add	r2, r8
 75c:	92 2c       	mov	r9, r2
 75e:	9b 18       	sub	r9, r11
 760:	0e c0       	rjmp	.+28     	; 0x77e <vfprintf+0x330>
 762:	b2 14       	cp	r11, r2
 764:	60 f4       	brcc	.+24     	; 0x77e <vfprintf+0x330>
 766:	b6 01       	movw	r22, r12
 768:	80 e2       	ldi	r24, 0x20	; 32
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 770:	b3 94       	inc	r11
 772:	f7 cf       	rjmp	.-18     	; 0x762 <vfprintf+0x314>
 774:	b2 14       	cp	r11, r2
 776:	18 f4       	brcc	.+6      	; 0x77e <vfprintf+0x330>
 778:	2b 18       	sub	r2, r11
 77a:	02 c0       	rjmp	.+4      	; 0x780 <vfprintf+0x332>
 77c:	98 2c       	mov	r9, r8
 77e:	21 2c       	mov	r2, r1
 780:	a4 fe       	sbrs	r10, 4
 782:	10 c0       	rjmp	.+32     	; 0x7a4 <vfprintf+0x356>
 784:	b6 01       	movw	r22, r12
 786:	80 e3       	ldi	r24, 0x30	; 48
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 78e:	a2 fe       	sbrs	r10, 2
 790:	17 c0       	rjmp	.+46     	; 0x7c0 <vfprintf+0x372>
 792:	a1 fc       	sbrc	r10, 1
 794:	03 c0       	rjmp	.+6      	; 0x79c <vfprintf+0x34e>
 796:	88 e7       	ldi	r24, 0x78	; 120
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	02 c0       	rjmp	.+4      	; 0x7a0 <vfprintf+0x352>
 79c:	88 e5       	ldi	r24, 0x58	; 88
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	b6 01       	movw	r22, r12
 7a2:	0c c0       	rjmp	.+24     	; 0x7bc <vfprintf+0x36e>
 7a4:	8a 2d       	mov	r24, r10
 7a6:	86 78       	andi	r24, 0x86	; 134
 7a8:	59 f0       	breq	.+22     	; 0x7c0 <vfprintf+0x372>
 7aa:	a1 fe       	sbrs	r10, 1
 7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <vfprintf+0x364>
 7ae:	8b e2       	ldi	r24, 0x2B	; 43
 7b0:	01 c0       	rjmp	.+2      	; 0x7b4 <vfprintf+0x366>
 7b2:	80 e2       	ldi	r24, 0x20	; 32
 7b4:	a7 fc       	sbrc	r10, 7
 7b6:	8d e2       	ldi	r24, 0x2D	; 45
 7b8:	b6 01       	movw	r22, r12
 7ba:	90 e0       	ldi	r25, 0x00	; 0
 7bc:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 7c0:	89 14       	cp	r8, r9
 7c2:	38 f4       	brcc	.+14     	; 0x7d2 <vfprintf+0x384>
 7c4:	b6 01       	movw	r22, r12
 7c6:	80 e3       	ldi	r24, 0x30	; 48
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 7ce:	9a 94       	dec	r9
 7d0:	f7 cf       	rjmp	.-18     	; 0x7c0 <vfprintf+0x372>
 7d2:	8a 94       	dec	r8
 7d4:	f3 01       	movw	r30, r6
 7d6:	e8 0d       	add	r30, r8
 7d8:	f1 1d       	adc	r31, r1
 7da:	80 81       	ld	r24, Z
 7dc:	b6 01       	movw	r22, r12
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 7e4:	81 10       	cpse	r8, r1
 7e6:	f5 cf       	rjmp	.-22     	; 0x7d2 <vfprintf+0x384>
 7e8:	22 20       	and	r2, r2
 7ea:	09 f4       	brne	.+2      	; 0x7ee <vfprintf+0x3a0>
 7ec:	42 ce       	rjmp	.-892    	; 0x472 <vfprintf+0x24>
 7ee:	b6 01       	movw	r22, r12
 7f0:	80 e2       	ldi	r24, 0x20	; 32
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	0e 94 1e 04 	call	0x83c	; 0x83c <fputc>
 7f8:	2a 94       	dec	r2
 7fa:	f6 cf       	rjmp	.-20     	; 0x7e8 <vfprintf+0x39a>
 7fc:	f6 01       	movw	r30, r12
 7fe:	86 81       	ldd	r24, Z+6	; 0x06
 800:	97 81       	ldd	r25, Z+7	; 0x07
 802:	02 c0       	rjmp	.+4      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 804:	8f ef       	ldi	r24, 0xFF	; 255
 806:	9f ef       	ldi	r25, 0xFF	; 255
 808:	2b 96       	adiw	r28, 0x0b	; 11
 80a:	e2 e1       	ldi	r30, 0x12	; 18
 80c:	0c 94 d4 04 	jmp	0x9a8	; 0x9a8 <__epilogue_restores__>

00000810 <strnlen_P>:
 810:	fc 01       	movw	r30, r24
 812:	05 90       	lpm	r0, Z+
 814:	61 50       	subi	r22, 0x01	; 1
 816:	70 40       	sbci	r23, 0x00	; 0
 818:	01 10       	cpse	r0, r1
 81a:	d8 f7       	brcc	.-10     	; 0x812 <strnlen_P+0x2>
 81c:	80 95       	com	r24
 81e:	90 95       	com	r25
 820:	8e 0f       	add	r24, r30
 822:	9f 1f       	adc	r25, r31
 824:	08 95       	ret

00000826 <strnlen>:
 826:	fc 01       	movw	r30, r24
 828:	61 50       	subi	r22, 0x01	; 1
 82a:	70 40       	sbci	r23, 0x00	; 0
 82c:	01 90       	ld	r0, Z+
 82e:	01 10       	cpse	r0, r1
 830:	d8 f7       	brcc	.-10     	; 0x828 <strnlen+0x2>
 832:	80 95       	com	r24
 834:	90 95       	com	r25
 836:	8e 0f       	add	r24, r30
 838:	9f 1f       	adc	r25, r31
 83a:	08 95       	ret

0000083c <fputc>:
 83c:	0f 93       	push	r16
 83e:	1f 93       	push	r17
 840:	cf 93       	push	r28
 842:	df 93       	push	r29
 844:	fb 01       	movw	r30, r22
 846:	23 81       	ldd	r18, Z+3	; 0x03
 848:	21 fd       	sbrc	r18, 1
 84a:	03 c0       	rjmp	.+6      	; 0x852 <fputc+0x16>
 84c:	8f ef       	ldi	r24, 0xFF	; 255
 84e:	9f ef       	ldi	r25, 0xFF	; 255
 850:	2c c0       	rjmp	.+88     	; 0x8aa <fputc+0x6e>
 852:	22 ff       	sbrs	r18, 2
 854:	16 c0       	rjmp	.+44     	; 0x882 <fputc+0x46>
 856:	46 81       	ldd	r20, Z+6	; 0x06
 858:	57 81       	ldd	r21, Z+7	; 0x07
 85a:	24 81       	ldd	r18, Z+4	; 0x04
 85c:	35 81       	ldd	r19, Z+5	; 0x05
 85e:	42 17       	cp	r20, r18
 860:	53 07       	cpc	r21, r19
 862:	44 f4       	brge	.+16     	; 0x874 <fputc+0x38>
 864:	a0 81       	ld	r26, Z
 866:	b1 81       	ldd	r27, Z+1	; 0x01
 868:	9d 01       	movw	r18, r26
 86a:	2f 5f       	subi	r18, 0xFF	; 255
 86c:	3f 4f       	sbci	r19, 0xFF	; 255
 86e:	31 83       	std	Z+1, r19	; 0x01
 870:	20 83       	st	Z, r18
 872:	8c 93       	st	X, r24
 874:	26 81       	ldd	r18, Z+6	; 0x06
 876:	37 81       	ldd	r19, Z+7	; 0x07
 878:	2f 5f       	subi	r18, 0xFF	; 255
 87a:	3f 4f       	sbci	r19, 0xFF	; 255
 87c:	37 83       	std	Z+7, r19	; 0x07
 87e:	26 83       	std	Z+6, r18	; 0x06
 880:	14 c0       	rjmp	.+40     	; 0x8aa <fputc+0x6e>
 882:	8b 01       	movw	r16, r22
 884:	ec 01       	movw	r28, r24
 886:	fb 01       	movw	r30, r22
 888:	00 84       	ldd	r0, Z+8	; 0x08
 88a:	f1 85       	ldd	r31, Z+9	; 0x09
 88c:	e0 2d       	mov	r30, r0
 88e:	09 95       	icall
 890:	89 2b       	or	r24, r25
 892:	e1 f6       	brne	.-72     	; 0x84c <fputc+0x10>
 894:	d8 01       	movw	r26, r16
 896:	16 96       	adiw	r26, 0x06	; 6
 898:	8d 91       	ld	r24, X+
 89a:	9c 91       	ld	r25, X
 89c:	17 97       	sbiw	r26, 0x07	; 7
 89e:	01 96       	adiw	r24, 0x01	; 1
 8a0:	17 96       	adiw	r26, 0x07	; 7
 8a2:	9c 93       	st	X, r25
 8a4:	8e 93       	st	-X, r24
 8a6:	16 97       	sbiw	r26, 0x06	; 6
 8a8:	ce 01       	movw	r24, r28
 8aa:	df 91       	pop	r29
 8ac:	cf 91       	pop	r28
 8ae:	1f 91       	pop	r17
 8b0:	0f 91       	pop	r16
 8b2:	08 95       	ret

000008b4 <__ultoa_invert>:
 8b4:	fa 01       	movw	r30, r20
 8b6:	aa 27       	eor	r26, r26
 8b8:	28 30       	cpi	r18, 0x08	; 8
 8ba:	51 f1       	breq	.+84     	; 0x910 <__stack+0x11>
 8bc:	20 31       	cpi	r18, 0x10	; 16
 8be:	81 f1       	breq	.+96     	; 0x920 <__stack+0x21>
 8c0:	e8 94       	clt
 8c2:	6f 93       	push	r22
 8c4:	6e 7f       	andi	r22, 0xFE	; 254
 8c6:	6e 5f       	subi	r22, 0xFE	; 254
 8c8:	7f 4f       	sbci	r23, 0xFF	; 255
 8ca:	8f 4f       	sbci	r24, 0xFF	; 255
 8cc:	9f 4f       	sbci	r25, 0xFF	; 255
 8ce:	af 4f       	sbci	r26, 0xFF	; 255
 8d0:	b1 e0       	ldi	r27, 0x01	; 1
 8d2:	3e d0       	rcall	.+124    	; 0x950 <__stack+0x51>
 8d4:	b4 e0       	ldi	r27, 0x04	; 4
 8d6:	3c d0       	rcall	.+120    	; 0x950 <__stack+0x51>
 8d8:	67 0f       	add	r22, r23
 8da:	78 1f       	adc	r23, r24
 8dc:	89 1f       	adc	r24, r25
 8de:	9a 1f       	adc	r25, r26
 8e0:	a1 1d       	adc	r26, r1
 8e2:	68 0f       	add	r22, r24
 8e4:	79 1f       	adc	r23, r25
 8e6:	8a 1f       	adc	r24, r26
 8e8:	91 1d       	adc	r25, r1
 8ea:	a1 1d       	adc	r26, r1
 8ec:	6a 0f       	add	r22, r26
 8ee:	71 1d       	adc	r23, r1
 8f0:	81 1d       	adc	r24, r1
 8f2:	91 1d       	adc	r25, r1
 8f4:	a1 1d       	adc	r26, r1
 8f6:	20 d0       	rcall	.+64     	; 0x938 <__stack+0x39>
 8f8:	09 f4       	brne	.+2      	; 0x8fc <__ultoa_invert+0x48>
 8fa:	68 94       	set
 8fc:	3f 91       	pop	r19
 8fe:	2a e0       	ldi	r18, 0x0A	; 10
 900:	26 9f       	mul	r18, r22
 902:	11 24       	eor	r1, r1
 904:	30 19       	sub	r19, r0
 906:	30 5d       	subi	r19, 0xD0	; 208
 908:	31 93       	st	Z+, r19
 90a:	de f6       	brtc	.-74     	; 0x8c2 <__ultoa_invert+0xe>
 90c:	cf 01       	movw	r24, r30
 90e:	08 95       	ret
 910:	46 2f       	mov	r20, r22
 912:	47 70       	andi	r20, 0x07	; 7
 914:	40 5d       	subi	r20, 0xD0	; 208
 916:	41 93       	st	Z+, r20
 918:	b3 e0       	ldi	r27, 0x03	; 3
 91a:	0f d0       	rcall	.+30     	; 0x93a <__stack+0x3b>
 91c:	c9 f7       	brne	.-14     	; 0x910 <__stack+0x11>
 91e:	f6 cf       	rjmp	.-20     	; 0x90c <__stack+0xd>
 920:	46 2f       	mov	r20, r22
 922:	4f 70       	andi	r20, 0x0F	; 15
 924:	40 5d       	subi	r20, 0xD0	; 208
 926:	4a 33       	cpi	r20, 0x3A	; 58
 928:	18 f0       	brcs	.+6      	; 0x930 <__stack+0x31>
 92a:	49 5d       	subi	r20, 0xD9	; 217
 92c:	31 fd       	sbrc	r19, 1
 92e:	40 52       	subi	r20, 0x20	; 32
 930:	41 93       	st	Z+, r20
 932:	02 d0       	rcall	.+4      	; 0x938 <__stack+0x39>
 934:	a9 f7       	brne	.-22     	; 0x920 <__stack+0x21>
 936:	ea cf       	rjmp	.-44     	; 0x90c <__stack+0xd>
 938:	b4 e0       	ldi	r27, 0x04	; 4
 93a:	a6 95       	lsr	r26
 93c:	97 95       	ror	r25
 93e:	87 95       	ror	r24
 940:	77 95       	ror	r23
 942:	67 95       	ror	r22
 944:	ba 95       	dec	r27
 946:	c9 f7       	brne	.-14     	; 0x93a <__stack+0x3b>
 948:	00 97       	sbiw	r24, 0x00	; 0
 94a:	61 05       	cpc	r22, r1
 94c:	71 05       	cpc	r23, r1
 94e:	08 95       	ret
 950:	9b 01       	movw	r18, r22
 952:	ac 01       	movw	r20, r24
 954:	0a 2e       	mov	r0, r26
 956:	06 94       	lsr	r0
 958:	57 95       	ror	r21
 95a:	47 95       	ror	r20
 95c:	37 95       	ror	r19
 95e:	27 95       	ror	r18
 960:	ba 95       	dec	r27
 962:	c9 f7       	brne	.-14     	; 0x956 <__stack+0x57>
 964:	62 0f       	add	r22, r18
 966:	73 1f       	adc	r23, r19
 968:	84 1f       	adc	r24, r20
 96a:	95 1f       	adc	r25, r21
 96c:	a0 1d       	adc	r26, r0
 96e:	08 95       	ret

00000970 <__prologue_saves__>:
 970:	2f 92       	push	r2
 972:	3f 92       	push	r3
 974:	4f 92       	push	r4
 976:	5f 92       	push	r5
 978:	6f 92       	push	r6
 97a:	7f 92       	push	r7
 97c:	8f 92       	push	r8
 97e:	9f 92       	push	r9
 980:	af 92       	push	r10
 982:	bf 92       	push	r11
 984:	cf 92       	push	r12
 986:	df 92       	push	r13
 988:	ef 92       	push	r14
 98a:	ff 92       	push	r15
 98c:	0f 93       	push	r16
 98e:	1f 93       	push	r17
 990:	cf 93       	push	r28
 992:	df 93       	push	r29
 994:	cd b7       	in	r28, 0x3d	; 61
 996:	de b7       	in	r29, 0x3e	; 62
 998:	ca 1b       	sub	r28, r26
 99a:	db 0b       	sbc	r29, r27
 99c:	0f b6       	in	r0, 0x3f	; 63
 99e:	f8 94       	cli
 9a0:	de bf       	out	0x3e, r29	; 62
 9a2:	0f be       	out	0x3f, r0	; 63
 9a4:	cd bf       	out	0x3d, r28	; 61
 9a6:	09 94       	ijmp

000009a8 <__epilogue_restores__>:
 9a8:	2a 88       	ldd	r2, Y+18	; 0x12
 9aa:	39 88       	ldd	r3, Y+17	; 0x11
 9ac:	48 88       	ldd	r4, Y+16	; 0x10
 9ae:	5f 84       	ldd	r5, Y+15	; 0x0f
 9b0:	6e 84       	ldd	r6, Y+14	; 0x0e
 9b2:	7d 84       	ldd	r7, Y+13	; 0x0d
 9b4:	8c 84       	ldd	r8, Y+12	; 0x0c
 9b6:	9b 84       	ldd	r9, Y+11	; 0x0b
 9b8:	aa 84       	ldd	r10, Y+10	; 0x0a
 9ba:	b9 84       	ldd	r11, Y+9	; 0x09
 9bc:	c8 84       	ldd	r12, Y+8	; 0x08
 9be:	df 80       	ldd	r13, Y+7	; 0x07
 9c0:	ee 80       	ldd	r14, Y+6	; 0x06
 9c2:	fd 80       	ldd	r15, Y+5	; 0x05
 9c4:	0c 81       	ldd	r16, Y+4	; 0x04
 9c6:	1b 81       	ldd	r17, Y+3	; 0x03
 9c8:	aa 81       	ldd	r26, Y+2	; 0x02
 9ca:	b9 81       	ldd	r27, Y+1	; 0x01
 9cc:	ce 0f       	add	r28, r30
 9ce:	d1 1d       	adc	r29, r1
 9d0:	0f b6       	in	r0, 0x3f	; 63
 9d2:	f8 94       	cli
 9d4:	de bf       	out	0x3e, r29	; 62
 9d6:	0f be       	out	0x3f, r0	; 63
 9d8:	cd bf       	out	0x3d, r28	; 61
 9da:	ed 01       	movw	r28, r26
 9dc:	08 95       	ret

000009de <_exit>:
 9de:	f8 94       	cli

000009e0 <__stop_program>:
 9e0:	ff cf       	rjmp	.-2      	; 0x9e0 <__stop_program>
