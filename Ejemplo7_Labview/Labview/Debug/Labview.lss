
Labview.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000009b4  00000a48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006e  0080010a  0080010a  00000a52  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a52  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ab0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b3c  00000000  00000000  00000ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000858  00000000  00000000  000016dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000062d  00000000  00000000  00001f34  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b8  00000000  00000000  00002564  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e6  00000000  00000000  0000271c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000494  00000000  00000000  00002c02  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00003096  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 eb       	ldi	r30, 0xB4	; 180
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e0       	ldi	r26, 0x0A	; 10
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 37       	cpi	r26, 0x78	; 120
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <main>
  9e:	0c 94 d8 04 	jmp	0x9b0	; 0x9b0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_Avr_Init>:

void ADC_Avr_Init(void){
	//Seleccionos el AVCC ;//Justificacion a la derecha
	//ADMUX |= (1<<REFS0) ;
	//ADMUX &= ~(1<<REFS1) & ~(1<<ADLAR);
	ADMUX = (1<<REFS0) | (0<<REFS1) | (0<<ADLAR);
  a6:	80 e4       	ldi	r24, 0x40	; 64
  a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	//Seleccionamos el Clock del ADC
	//FOSC/PREESC = 16MHz/128 = 125kHZ
	ADCSRA |= (1<<ADPS0)|(1<<ADPS1)|(1<<ADPS2);
  ac:	ea e7       	ldi	r30, 0x7A	; 122
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	80 81       	ld	r24, Z
  b2:	87 60       	ori	r24, 0x07	; 7
  b4:	80 83       	st	Z, r24
	
	//Habiltamos los canales Analogicos
	DIDR0 = 0XFF;
  b6:	8f ef       	ldi	r24, 0xFF	; 255
  b8:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
  bc:	08 95       	ret

000000be <ADC_Enable>:
	
}
void ADC_Enable(void)
{
	ADCSRA |= (1<<ADEN);
  be:	ea e7       	ldi	r30, 0x7A	; 122
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	80 68       	ori	r24, 0x80	; 128
  c6:	80 83       	st	Z, r24
  c8:	08 95       	ret

000000ca <ADC_Disable>:
}

void ADC_Disable(void)
{
	ADCSRA &= ~(1<<ADEN);
  ca:	ea e7       	ldi	r30, 0x7A	; 122
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	8f 77       	andi	r24, 0x7F	; 127
  d2:	80 83       	st	Z, r24
  d4:	08 95       	ret

000000d6 <ADC_Start_Conversion>:
}

void ADC_Start_Conversion(void)
{
	ADCSRA |= (1<<ADSC);
  d6:	ea e7       	ldi	r30, 0x7A	; 122
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	80 64       	ori	r24, 0x40	; 64
  de:	80 83       	st	Z, r24
  e0:	08 95       	ret

000000e2 <ADC_State_Conversion>:
}

bool ADC_State_Conversion(void)
{
	return ( (ADCSRA & (1<<ADSC)) );
  e2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
}
  e6:	86 fb       	bst	r24, 6
  e8:	88 27       	eor	r24, r24
  ea:	80 f9       	bld	r24, 0
  ec:	08 95       	ret

000000ee <ADC_Select_Channel>:

void ADC_Select_Channel(uint8_t channel)
{
	ADMUX = ( (ADMUX & 0xF0) | (channel & 0x0F) );
  ee:	ec e7       	ldi	r30, 0x7C	; 124
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	90 81       	ld	r25, Z
  f4:	90 7f       	andi	r25, 0xF0	; 240
  f6:	8f 70       	andi	r24, 0x0F	; 15
  f8:	89 2b       	or	r24, r25
  fa:	80 83       	st	Z, r24
  fc:	08 95       	ret

000000fe <AnalogRead>:
}

uint16_t AnalogRead(uint8_t channel)
{
	ADC_Select_Channel(channel); //Seleecion del canal analogico
  fe:	0e 94 77 00 	call	0xee	; 0xee <ADC_Select_Channel>
	ADC_Enable(); //Habilitamos el ADC
 102:	0e 94 5f 00 	call	0xbe	; 0xbe <ADC_Enable>
	ADC_Start_Conversion(); //Iniciamos la conversion
 106:	0e 94 6b 00 	call	0xd6	; 0xd6 <ADC_Start_Conversion>
	while(ADC_State_Conversion() == true); //Esperar que la conversion se complete
 10a:	0e 94 71 00 	call	0xe2	; 0xe2 <ADC_State_Conversion>
 10e:	81 11       	cpse	r24, r1
 110:	fc cf       	rjmp	.-8      	; 0x10a <AnalogRead+0xc>
	ADC_Disable(); //Deshabilitar el ADC
 112:	0e 94 65 00 	call	0xca	; 0xca <ADC_Disable>
	return (ADC); //Retorno el valor actual de la conversion
 116:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 11a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 11e:	08 95       	ret

00000120 <UART0_Avr_Init>:
		for (i=0; i<len; i++)
		UART0_Avr_Print_Char(*(char*)buffer++);
		
	}
	return(len);
}
 120:	9b 01       	movw	r18, r22
 122:	ac 01       	movw	r20, r24
 124:	60 e8       	ldi	r22, 0x80	; 128
 126:	74 e8       	ldi	r23, 0x84	; 132
 128:	8e e1       	ldi	r24, 0x1E	; 30
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 c1 01 	call	0x382	; 0x382 <__udivmodsi4>
 130:	21 50       	subi	r18, 0x01	; 1
 132:	31 09       	sbc	r19, r1
 134:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 138:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 13c:	e0 ec       	ldi	r30, 0xC0	; 192
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	82 60       	ori	r24, 0x02	; 2
 144:	80 83       	st	Z, r24
 146:	e1 ec       	ldi	r30, 0xC1	; 193
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	80 81       	ld	r24, Z
 14c:	8b 7f       	andi	r24, 0xFB	; 251
 14e:	80 83       	st	Z, r24
 150:	a2 ec       	ldi	r26, 0xC2	; 194
 152:	b0 e0       	ldi	r27, 0x00	; 0
 154:	8c 91       	ld	r24, X
 156:	86 60       	ori	r24, 0x06	; 6
 158:	8c 93       	st	X, r24
 15a:	8c 91       	ld	r24, X
 15c:	8f 73       	andi	r24, 0x3F	; 63
 15e:	8c 93       	st	X, r24
 160:	8c 91       	ld	r24, X
 162:	8f 7c       	andi	r24, 0xCF	; 207
 164:	8c 93       	st	X, r24
 166:	8c 91       	ld	r24, X
 168:	87 7f       	andi	r24, 0xF7	; 247
 16a:	8c 93       	st	X, r24
 16c:	80 81       	ld	r24, Z
 16e:	88 60       	ori	r24, 0x08	; 8
 170:	80 83       	st	Z, r24
 172:	80 81       	ld	r24, Z
 174:	80 61       	ori	r24, 0x10	; 16
 176:	80 83       	st	Z, r24
 178:	80 81       	ld	r24, Z
 17a:	80 68       	ori	r24, 0x80	; 128
 17c:	80 83       	st	Z, r24
 17e:	08 95       	ret

00000180 <UART0_Avr_Print_Char>:
 180:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 184:	95 ff       	sbrs	r25, 5
 186:	fc cf       	rjmp	.-8      	; 0x180 <UART0_Avr_Print_Char>
 188:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 18c:	08 95       	ret

0000018e <UART0_Avr_Print_String>:
 18e:	cf 93       	push	r28
 190:	df 93       	push	r29
 192:	ec 01       	movw	r28, r24
 194:	03 c0       	rjmp	.+6      	; 0x19c <UART0_Avr_Print_String+0xe>
 196:	21 96       	adiw	r28, 0x01	; 1
 198:	0e 94 c0 00 	call	0x180	; 0x180 <UART0_Avr_Print_Char>
 19c:	88 81       	ld	r24, Y
 19e:	81 11       	cpse	r24, r1
 1a0:	fa cf       	rjmp	.-12     	; 0x196 <UART0_Avr_Print_String+0x8>
 1a2:	df 91       	pop	r29
 1a4:	cf 91       	pop	r28
 1a6:	08 95       	ret

000001a8 <__vector_18>:


ISR(USART_RX_vect){
 1a8:	1f 92       	push	r1
 1aa:	0f 92       	push	r0
 1ac:	0f b6       	in	r0, 0x3f	; 63
 1ae:	0f 92       	push	r0
 1b0:	11 24       	eor	r1, r1
 1b2:	8f 93       	push	r24
	
char byte = UDR0;
 1b4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>

switch(byte){
 1b8:	82 36       	cpi	r24, 0x62	; 98
 1ba:	69 f0       	breq	.+26     	; 0x1d6 <__vector_18+0x2e>
 1bc:	18 f4       	brcc	.+6      	; 0x1c4 <__vector_18+0x1c>
 1be:	81 36       	cpi	r24, 0x61	; 97
 1c0:	31 f0       	breq	.+12     	; 0x1ce <__vector_18+0x26>
 1c2:	14 c0       	rjmp	.+40     	; 0x1ec <__vector_18+0x44>
 1c4:	83 36       	cpi	r24, 0x63	; 99
 1c6:	59 f0       	breq	.+22     	; 0x1de <__vector_18+0x36>
 1c8:	84 36       	cpi	r24, 0x64	; 100
 1ca:	69 f0       	breq	.+26     	; 0x1e6 <__vector_18+0x3e>
 1cc:	0f c0       	rjmp	.+30     	; 0x1ec <__vector_18+0x44>
	case 'a':
	PORTD |= (1<<7);
 1ce:	8b b1       	in	r24, 0x0b	; 11
 1d0:	80 68       	ori	r24, 0x80	; 128
 1d2:	8b b9       	out	0x0b, r24	; 11
	break;
 1d4:	0b c0       	rjmp	.+22     	; 0x1ec <__vector_18+0x44>
	case 'b':
	PORTD &= ~(1<<7);
 1d6:	8b b1       	in	r24, 0x0b	; 11
 1d8:	8f 77       	andi	r24, 0x7F	; 127
 1da:	8b b9       	out	0x0b, r24	; 11
	break;
 1dc:	07 c0       	rjmp	.+14     	; 0x1ec <__vector_18+0x44>
	case 'c':
	PORTD |= (1<<6);
 1de:	8b b1       	in	r24, 0x0b	; 11
 1e0:	80 64       	ori	r24, 0x40	; 64
 1e2:	8b b9       	out	0x0b, r24	; 11
	break;
 1e4:	03 c0       	rjmp	.+6      	; 0x1ec <__vector_18+0x44>
	case 'd':
	PORTD &= ~(1<<6);
 1e6:	8b b1       	in	r24, 0x0b	; 11
 1e8:	8f 7b       	andi	r24, 0xBF	; 191
 1ea:	8b b9       	out	0x0b, r24	; 11
	break;
	
	}
	
}
 1ec:	8f 91       	pop	r24
 1ee:	0f 90       	pop	r0
 1f0:	0f be       	out	0x3f, r0	; 63
 1f2:	0f 90       	pop	r0
 1f4:	1f 90       	pop	r1
 1f6:	18 95       	reti

000001f8 <main>:
uint16_t  Pot0,Pot1,Pot2,Pot3,Pot4,Pot5;
char Str_Pot0[8],Str_Pot1[8],Str_Pot2[8],Str_Pot3[8],Str_Pot4[8],Str_Pot5[8],STR_SEND[50];

int main(void)
{
   ADC_Avr_Init();
 1f8:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_Avr_Init>
   UART0_Avr_Init(9600);
 1fc:	60 e8       	ldi	r22, 0x80	; 128
 1fe:	75 e2       	ldi	r23, 0x25	; 37
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	0e 94 90 00 	call	0x120	; 0x120 <UART0_Avr_Init>
   sei();
 208:	78 94       	sei

   for (;;)
   {
	 		 //Inicamos la conversion
	 		 Pot0 = AnalogRead(0);
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	0e 94 7f 00 	call	0xfe	; 0xfe <AnalogRead>
 210:	90 93 6d 01 	sts	0x016D, r25	; 0x80016d <Pot0+0x1>
 214:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <Pot0>
	 		 Pot1 = AnalogRead(1);
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	0e 94 7f 00 	call	0xfe	; 0xfe <AnalogRead>
 21e:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <Pot1+0x1>
 222:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <Pot1>
	 		 Pot2 = AnalogRead(2);
 226:	82 e0       	ldi	r24, 0x02	; 2
 228:	0e 94 7f 00 	call	0xfe	; 0xfe <AnalogRead>
 22c:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <Pot2+0x1>
 230:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <Pot2>
	 		 Pot3 = AnalogRead(3);
 234:	83 e0       	ldi	r24, 0x03	; 3
 236:	0e 94 7f 00 	call	0xfe	; 0xfe <AnalogRead>
 23a:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <Pot3+0x1>
 23e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <Pot3>
	 		 Pot4 = AnalogRead(4);
 242:	84 e0       	ldi	r24, 0x04	; 4
 244:	0e 94 7f 00 	call	0xfe	; 0xfe <AnalogRead>
 248:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <Pot4+0x1>
 24c:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <Pot4>
	 		 Pot5 = AnalogRead(5);
 250:	85 e0       	ldi	r24, 0x05	; 5
 252:	0e 94 7f 00 	call	0xfe	; 0xfe <AnalogRead>
 256:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <Pot5+0x1>
 25a:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <Pot5>
	 		 
	 		 //Convertimos uint a string
	 		 
	 		 sprintf((char*)Str_Pot0,"%u;",Pot0);
 25e:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <Pot0+0x1>
 262:	8f 93       	push	r24
 264:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <Pot0>
 268:	8f 93       	push	r24
 26a:	c0 e0       	ldi	r28, 0x00	; 0
 26c:	d1 e0       	ldi	r29, 0x01	; 1
 26e:	df 93       	push	r29
 270:	cf 93       	push	r28
 272:	80 e5       	ldi	r24, 0x50	; 80
 274:	91 e0       	ldi	r25, 0x01	; 1
 276:	9f 93       	push	r25
 278:	8f 93       	push	r24
 27a:	0e 94 ee 01 	call	0x3dc	; 0x3dc <sprintf>
	 		 sprintf((char*)Str_Pot1,"%u;",Pot1);
 27e:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <Pot1+0x1>
 282:	8f 93       	push	r24
 284:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <Pot1>
 288:	8f 93       	push	r24
 28a:	df 93       	push	r29
 28c:	cf 93       	push	r28
 28e:	8e e6       	ldi	r24, 0x6E	; 110
 290:	91 e0       	ldi	r25, 0x01	; 1
 292:	9f 93       	push	r25
 294:	8f 93       	push	r24
 296:	0e 94 ee 01 	call	0x3dc	; 0x3dc <sprintf>
	 		 sprintf((char*)Str_Pot2,"%u;",Pot2);
 29a:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <Pot2+0x1>
 29e:	8f 93       	push	r24
 2a0:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <Pot2>
 2a4:	8f 93       	push	r24
 2a6:	df 93       	push	r29
 2a8:	cf 93       	push	r28
 2aa:	82 e1       	ldi	r24, 0x12	; 18
 2ac:	91 e0       	ldi	r25, 0x01	; 1
 2ae:	9f 93       	push	r25
 2b0:	8f 93       	push	r24
 2b2:	0e 94 ee 01 	call	0x3dc	; 0x3dc <sprintf>
	 		 sprintf((char*)Str_Pot3,"%u;",Pot3);
 2b6:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <Pot3+0x1>
 2ba:	8f 93       	push	r24
 2bc:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <Pot3>
 2c0:	8f 93       	push	r24
 2c2:	df 93       	push	r29
 2c4:	cf 93       	push	r28
 2c6:	82 e6       	ldi	r24, 0x62	; 98
 2c8:	91 e0       	ldi	r25, 0x01	; 1
 2ca:	9f 93       	push	r25
 2cc:	8f 93       	push	r24
 2ce:	0e 94 ee 01 	call	0x3dc	; 0x3dc <sprintf>
	 		 sprintf((char*)Str_Pot4,"%u;",Pot4);
 2d2:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <Pot4+0x1>
 2d6:	8f 93       	push	r24
 2d8:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <Pot4>
 2dc:	8f 93       	push	r24
 2de:	df 93       	push	r29
 2e0:	cf 93       	push	r28
 2e2:	8a e0       	ldi	r24, 0x0A	; 10
 2e4:	91 e0       	ldi	r25, 0x01	; 1
 2e6:	9f 93       	push	r25
 2e8:	8f 93       	push	r24
 2ea:	0e 94 ee 01 	call	0x3dc	; 0x3dc <sprintf>
	 		 sprintf((char*)Str_Pot5,"%u\n\r",Pot5);
 2ee:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <Pot5+0x1>
 2f2:	8f 93       	push	r24
 2f4:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <Pot5>
 2f8:	8f 93       	push	r24
 2fa:	84 e0       	ldi	r24, 0x04	; 4
 2fc:	91 e0       	ldi	r25, 0x01	; 1
 2fe:	9f 93       	push	r25
 300:	8f 93       	push	r24
 302:	88 e5       	ldi	r24, 0x58	; 88
 304:	91 e0       	ldi	r25, 0x01	; 1
 306:	9f 93       	push	r25
 308:	8f 93       	push	r24
 30a:	0e 94 ee 01 	call	0x3dc	; 0x3dc <sprintf>
	 		 
	 		 //Escribimos en la LCD
	 		 strcat(STR_SEND,Str_Pot0);
 30e:	8d b7       	in	r24, 0x3d	; 61
 310:	9e b7       	in	r25, 0x3e	; 62
 312:	84 96       	adiw	r24, 0x24	; 36
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	f8 94       	cli
 318:	9e bf       	out	0x3e, r25	; 62
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	8d bf       	out	0x3d, r24	; 61
 31e:	60 e5       	ldi	r22, 0x50	; 80
 320:	71 e0       	ldi	r23, 0x01	; 1
 322:	8e e1       	ldi	r24, 0x1E	; 30
 324:	91 e0       	ldi	r25, 0x01	; 1
 326:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <strcat>
	 		 strcat(STR_SEND,Str_Pot1);
 32a:	6e e6       	ldi	r22, 0x6E	; 110
 32c:	71 e0       	ldi	r23, 0x01	; 1
 32e:	8e e1       	ldi	r24, 0x1E	; 30
 330:	91 e0       	ldi	r25, 0x01	; 1
 332:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <strcat>
			 strcat(STR_SEND,Str_Pot2);
 336:	62 e1       	ldi	r22, 0x12	; 18
 338:	71 e0       	ldi	r23, 0x01	; 1
 33a:	8e e1       	ldi	r24, 0x1E	; 30
 33c:	91 e0       	ldi	r25, 0x01	; 1
 33e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <strcat>
			 strcat(STR_SEND,Str_Pot3);
 342:	62 e6       	ldi	r22, 0x62	; 98
 344:	71 e0       	ldi	r23, 0x01	; 1
 346:	8e e1       	ldi	r24, 0x1E	; 30
 348:	91 e0       	ldi	r25, 0x01	; 1
 34a:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <strcat>
			 strcat(STR_SEND,Str_Pot4);
 34e:	6a e0       	ldi	r22, 0x0A	; 10
 350:	71 e0       	ldi	r23, 0x01	; 1
 352:	8e e1       	ldi	r24, 0x1E	; 30
 354:	91 e0       	ldi	r25, 0x01	; 1
 356:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <strcat>
			 strcat(STR_SEND,Str_Pot5);
 35a:	68 e5       	ldi	r22, 0x58	; 88
 35c:	71 e0       	ldi	r23, 0x01	; 1
 35e:	8e e1       	ldi	r24, 0x1E	; 30
 360:	91 e0       	ldi	r25, 0x01	; 1
 362:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <strcat>
		
			UART0_Avr_Print_String(STR_SEND);
 366:	8e e1       	ldi	r24, 0x1E	; 30
 368:	91 e0       	ldi	r25, 0x01	; 1
 36a:	0e 94 c7 00 	call	0x18e	; 0x18e <UART0_Avr_Print_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 36e:	9f ef       	ldi	r25, 0xFF	; 255
 370:	29 e6       	ldi	r18, 0x69	; 105
 372:	88 e1       	ldi	r24, 0x18	; 24
 374:	91 50       	subi	r25, 0x01	; 1
 376:	20 40       	sbci	r18, 0x00	; 0
 378:	80 40       	sbci	r24, 0x00	; 0
 37a:	e1 f7       	brne	.-8      	; 0x374 <main+0x17c>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <main+0x186>
 37e:	00 00       	nop
 380:	44 cf       	rjmp	.-376    	; 0x20a <main+0x12>

00000382 <__udivmodsi4>:
 382:	a1 e2       	ldi	r26, 0x21	; 33
 384:	1a 2e       	mov	r1, r26
 386:	aa 1b       	sub	r26, r26
 388:	bb 1b       	sub	r27, r27
 38a:	fd 01       	movw	r30, r26
 38c:	0d c0       	rjmp	.+26     	; 0x3a8 <__udivmodsi4_ep>

0000038e <__udivmodsi4_loop>:
 38e:	aa 1f       	adc	r26, r26
 390:	bb 1f       	adc	r27, r27
 392:	ee 1f       	adc	r30, r30
 394:	ff 1f       	adc	r31, r31
 396:	a2 17       	cp	r26, r18
 398:	b3 07       	cpc	r27, r19
 39a:	e4 07       	cpc	r30, r20
 39c:	f5 07       	cpc	r31, r21
 39e:	20 f0       	brcs	.+8      	; 0x3a8 <__udivmodsi4_ep>
 3a0:	a2 1b       	sub	r26, r18
 3a2:	b3 0b       	sbc	r27, r19
 3a4:	e4 0b       	sbc	r30, r20
 3a6:	f5 0b       	sbc	r31, r21

000003a8 <__udivmodsi4_ep>:
 3a8:	66 1f       	adc	r22, r22
 3aa:	77 1f       	adc	r23, r23
 3ac:	88 1f       	adc	r24, r24
 3ae:	99 1f       	adc	r25, r25
 3b0:	1a 94       	dec	r1
 3b2:	69 f7       	brne	.-38     	; 0x38e <__udivmodsi4_loop>
 3b4:	60 95       	com	r22
 3b6:	70 95       	com	r23
 3b8:	80 95       	com	r24
 3ba:	90 95       	com	r25
 3bc:	9b 01       	movw	r18, r22
 3be:	ac 01       	movw	r20, r24
 3c0:	bd 01       	movw	r22, r26
 3c2:	cf 01       	movw	r24, r30
 3c4:	08 95       	ret

000003c6 <strcat>:
 3c6:	fb 01       	movw	r30, r22
 3c8:	dc 01       	movw	r26, r24
 3ca:	0d 90       	ld	r0, X+
 3cc:	00 20       	and	r0, r0
 3ce:	e9 f7       	brne	.-6      	; 0x3ca <strcat+0x4>
 3d0:	11 97       	sbiw	r26, 0x01	; 1
 3d2:	01 90       	ld	r0, Z+
 3d4:	0d 92       	st	X+, r0
 3d6:	00 20       	and	r0, r0
 3d8:	e1 f7       	brne	.-8      	; 0x3d2 <strcat+0xc>
 3da:	08 95       	ret

000003dc <sprintf>:
 3dc:	ae e0       	ldi	r26, 0x0E	; 14
 3de:	b0 e0       	ldi	r27, 0x00	; 0
 3e0:	e4 ef       	ldi	r30, 0xF4	; 244
 3e2:	f1 e0       	ldi	r31, 0x01	; 1
 3e4:	0c 94 af 04 	jmp	0x95e	; 0x95e <__prologue_saves__+0x1c>
 3e8:	0d 89       	ldd	r16, Y+21	; 0x15
 3ea:	1e 89       	ldd	r17, Y+22	; 0x16
 3ec:	86 e0       	ldi	r24, 0x06	; 6
 3ee:	8c 83       	std	Y+4, r24	; 0x04
 3f0:	1a 83       	std	Y+2, r17	; 0x02
 3f2:	09 83       	std	Y+1, r16	; 0x01
 3f4:	8f ef       	ldi	r24, 0xFF	; 255
 3f6:	9f e7       	ldi	r25, 0x7F	; 127
 3f8:	9e 83       	std	Y+6, r25	; 0x06
 3fa:	8d 83       	std	Y+5, r24	; 0x05
 3fc:	ae 01       	movw	r20, r28
 3fe:	47 5e       	subi	r20, 0xE7	; 231
 400:	5f 4f       	sbci	r21, 0xFF	; 255
 402:	6f 89       	ldd	r22, Y+23	; 0x17
 404:	78 8d       	ldd	r23, Y+24	; 0x18
 406:	ce 01       	movw	r24, r28
 408:	01 96       	adiw	r24, 0x01	; 1
 40a:	0e 94 10 02 	call	0x420	; 0x420 <vfprintf>
 40e:	ef 81       	ldd	r30, Y+7	; 0x07
 410:	f8 85       	ldd	r31, Y+8	; 0x08
 412:	e0 0f       	add	r30, r16
 414:	f1 1f       	adc	r31, r17
 416:	10 82       	st	Z, r1
 418:	2e 96       	adiw	r28, 0x0e	; 14
 41a:	e4 e0       	ldi	r30, 0x04	; 4
 41c:	0c 94 cb 04 	jmp	0x996	; 0x996 <__epilogue_restores__+0x1c>

00000420 <vfprintf>:
 420:	ab e0       	ldi	r26, 0x0B	; 11
 422:	b0 e0       	ldi	r27, 0x00	; 0
 424:	e6 e1       	ldi	r30, 0x16	; 22
 426:	f2 e0       	ldi	r31, 0x02	; 2
 428:	0c 94 a1 04 	jmp	0x942	; 0x942 <__prologue_saves__>
 42c:	6c 01       	movw	r12, r24
 42e:	7b 01       	movw	r14, r22
 430:	8a 01       	movw	r16, r20
 432:	fc 01       	movw	r30, r24
 434:	17 82       	std	Z+7, r1	; 0x07
 436:	16 82       	std	Z+6, r1	; 0x06
 438:	83 81       	ldd	r24, Z+3	; 0x03
 43a:	81 ff       	sbrs	r24, 1
 43c:	cc c1       	rjmp	.+920    	; 0x7d6 <vfprintf+0x3b6>
 43e:	ce 01       	movw	r24, r28
 440:	01 96       	adiw	r24, 0x01	; 1
 442:	3c 01       	movw	r6, r24
 444:	f6 01       	movw	r30, r12
 446:	93 81       	ldd	r25, Z+3	; 0x03
 448:	f7 01       	movw	r30, r14
 44a:	93 fd       	sbrc	r25, 3
 44c:	85 91       	lpm	r24, Z+
 44e:	93 ff       	sbrs	r25, 3
 450:	81 91       	ld	r24, Z+
 452:	7f 01       	movw	r14, r30
 454:	88 23       	and	r24, r24
 456:	09 f4       	brne	.+2      	; 0x45a <vfprintf+0x3a>
 458:	ba c1       	rjmp	.+884    	; 0x7ce <vfprintf+0x3ae>
 45a:	85 32       	cpi	r24, 0x25	; 37
 45c:	39 f4       	brne	.+14     	; 0x46c <vfprintf+0x4c>
 45e:	93 fd       	sbrc	r25, 3
 460:	85 91       	lpm	r24, Z+
 462:	93 ff       	sbrs	r25, 3
 464:	81 91       	ld	r24, Z+
 466:	7f 01       	movw	r14, r30
 468:	85 32       	cpi	r24, 0x25	; 37
 46a:	29 f4       	brne	.+10     	; 0x476 <vfprintf+0x56>
 46c:	b6 01       	movw	r22, r12
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	0e 94 07 04 	call	0x80e	; 0x80e <fputc>
 474:	e7 cf       	rjmp	.-50     	; 0x444 <vfprintf+0x24>
 476:	91 2c       	mov	r9, r1
 478:	21 2c       	mov	r2, r1
 47a:	31 2c       	mov	r3, r1
 47c:	ff e1       	ldi	r31, 0x1F	; 31
 47e:	f3 15       	cp	r31, r3
 480:	d8 f0       	brcs	.+54     	; 0x4b8 <vfprintf+0x98>
 482:	8b 32       	cpi	r24, 0x2B	; 43
 484:	79 f0       	breq	.+30     	; 0x4a4 <vfprintf+0x84>
 486:	38 f4       	brcc	.+14     	; 0x496 <vfprintf+0x76>
 488:	80 32       	cpi	r24, 0x20	; 32
 48a:	79 f0       	breq	.+30     	; 0x4aa <vfprintf+0x8a>
 48c:	83 32       	cpi	r24, 0x23	; 35
 48e:	a1 f4       	brne	.+40     	; 0x4b8 <vfprintf+0x98>
 490:	23 2d       	mov	r18, r3
 492:	20 61       	ori	r18, 0x10	; 16
 494:	1d c0       	rjmp	.+58     	; 0x4d0 <vfprintf+0xb0>
 496:	8d 32       	cpi	r24, 0x2D	; 45
 498:	61 f0       	breq	.+24     	; 0x4b2 <vfprintf+0x92>
 49a:	80 33       	cpi	r24, 0x30	; 48
 49c:	69 f4       	brne	.+26     	; 0x4b8 <vfprintf+0x98>
 49e:	23 2d       	mov	r18, r3
 4a0:	21 60       	ori	r18, 0x01	; 1
 4a2:	16 c0       	rjmp	.+44     	; 0x4d0 <vfprintf+0xb0>
 4a4:	83 2d       	mov	r24, r3
 4a6:	82 60       	ori	r24, 0x02	; 2
 4a8:	38 2e       	mov	r3, r24
 4aa:	e3 2d       	mov	r30, r3
 4ac:	e4 60       	ori	r30, 0x04	; 4
 4ae:	3e 2e       	mov	r3, r30
 4b0:	2a c0       	rjmp	.+84     	; 0x506 <vfprintf+0xe6>
 4b2:	f3 2d       	mov	r31, r3
 4b4:	f8 60       	ori	r31, 0x08	; 8
 4b6:	1d c0       	rjmp	.+58     	; 0x4f2 <vfprintf+0xd2>
 4b8:	37 fc       	sbrc	r3, 7
 4ba:	2d c0       	rjmp	.+90     	; 0x516 <vfprintf+0xf6>
 4bc:	20 ed       	ldi	r18, 0xD0	; 208
 4be:	28 0f       	add	r18, r24
 4c0:	2a 30       	cpi	r18, 0x0A	; 10
 4c2:	40 f0       	brcs	.+16     	; 0x4d4 <vfprintf+0xb4>
 4c4:	8e 32       	cpi	r24, 0x2E	; 46
 4c6:	b9 f4       	brne	.+46     	; 0x4f6 <vfprintf+0xd6>
 4c8:	36 fc       	sbrc	r3, 6
 4ca:	81 c1       	rjmp	.+770    	; 0x7ce <vfprintf+0x3ae>
 4cc:	23 2d       	mov	r18, r3
 4ce:	20 64       	ori	r18, 0x40	; 64
 4d0:	32 2e       	mov	r3, r18
 4d2:	19 c0       	rjmp	.+50     	; 0x506 <vfprintf+0xe6>
 4d4:	36 fe       	sbrs	r3, 6
 4d6:	06 c0       	rjmp	.+12     	; 0x4e4 <vfprintf+0xc4>
 4d8:	8a e0       	ldi	r24, 0x0A	; 10
 4da:	98 9e       	mul	r9, r24
 4dc:	20 0d       	add	r18, r0
 4de:	11 24       	eor	r1, r1
 4e0:	92 2e       	mov	r9, r18
 4e2:	11 c0       	rjmp	.+34     	; 0x506 <vfprintf+0xe6>
 4e4:	ea e0       	ldi	r30, 0x0A	; 10
 4e6:	2e 9e       	mul	r2, r30
 4e8:	20 0d       	add	r18, r0
 4ea:	11 24       	eor	r1, r1
 4ec:	22 2e       	mov	r2, r18
 4ee:	f3 2d       	mov	r31, r3
 4f0:	f0 62       	ori	r31, 0x20	; 32
 4f2:	3f 2e       	mov	r3, r31
 4f4:	08 c0       	rjmp	.+16     	; 0x506 <vfprintf+0xe6>
 4f6:	8c 36       	cpi	r24, 0x6C	; 108
 4f8:	21 f4       	brne	.+8      	; 0x502 <vfprintf+0xe2>
 4fa:	83 2d       	mov	r24, r3
 4fc:	80 68       	ori	r24, 0x80	; 128
 4fe:	38 2e       	mov	r3, r24
 500:	02 c0       	rjmp	.+4      	; 0x506 <vfprintf+0xe6>
 502:	88 36       	cpi	r24, 0x68	; 104
 504:	41 f4       	brne	.+16     	; 0x516 <vfprintf+0xf6>
 506:	f7 01       	movw	r30, r14
 508:	93 fd       	sbrc	r25, 3
 50a:	85 91       	lpm	r24, Z+
 50c:	93 ff       	sbrs	r25, 3
 50e:	81 91       	ld	r24, Z+
 510:	7f 01       	movw	r14, r30
 512:	81 11       	cpse	r24, r1
 514:	b3 cf       	rjmp	.-154    	; 0x47c <vfprintf+0x5c>
 516:	98 2f       	mov	r25, r24
 518:	9f 7d       	andi	r25, 0xDF	; 223
 51a:	95 54       	subi	r25, 0x45	; 69
 51c:	93 30       	cpi	r25, 0x03	; 3
 51e:	28 f4       	brcc	.+10     	; 0x52a <vfprintf+0x10a>
 520:	0c 5f       	subi	r16, 0xFC	; 252
 522:	1f 4f       	sbci	r17, 0xFF	; 255
 524:	9f e3       	ldi	r25, 0x3F	; 63
 526:	99 83       	std	Y+1, r25	; 0x01
 528:	0d c0       	rjmp	.+26     	; 0x544 <vfprintf+0x124>
 52a:	83 36       	cpi	r24, 0x63	; 99
 52c:	31 f0       	breq	.+12     	; 0x53a <vfprintf+0x11a>
 52e:	83 37       	cpi	r24, 0x73	; 115
 530:	71 f0       	breq	.+28     	; 0x54e <vfprintf+0x12e>
 532:	83 35       	cpi	r24, 0x53	; 83
 534:	09 f0       	breq	.+2      	; 0x538 <vfprintf+0x118>
 536:	59 c0       	rjmp	.+178    	; 0x5ea <vfprintf+0x1ca>
 538:	21 c0       	rjmp	.+66     	; 0x57c <vfprintf+0x15c>
 53a:	f8 01       	movw	r30, r16
 53c:	80 81       	ld	r24, Z
 53e:	89 83       	std	Y+1, r24	; 0x01
 540:	0e 5f       	subi	r16, 0xFE	; 254
 542:	1f 4f       	sbci	r17, 0xFF	; 255
 544:	88 24       	eor	r8, r8
 546:	83 94       	inc	r8
 548:	91 2c       	mov	r9, r1
 54a:	53 01       	movw	r10, r6
 54c:	13 c0       	rjmp	.+38     	; 0x574 <vfprintf+0x154>
 54e:	28 01       	movw	r4, r16
 550:	f2 e0       	ldi	r31, 0x02	; 2
 552:	4f 0e       	add	r4, r31
 554:	51 1c       	adc	r5, r1
 556:	f8 01       	movw	r30, r16
 558:	a0 80       	ld	r10, Z
 55a:	b1 80       	ldd	r11, Z+1	; 0x01
 55c:	36 fe       	sbrs	r3, 6
 55e:	03 c0       	rjmp	.+6      	; 0x566 <vfprintf+0x146>
 560:	69 2d       	mov	r22, r9
 562:	70 e0       	ldi	r23, 0x00	; 0
 564:	02 c0       	rjmp	.+4      	; 0x56a <vfprintf+0x14a>
 566:	6f ef       	ldi	r22, 0xFF	; 255
 568:	7f ef       	ldi	r23, 0xFF	; 255
 56a:	c5 01       	movw	r24, r10
 56c:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <strnlen>
 570:	4c 01       	movw	r8, r24
 572:	82 01       	movw	r16, r4
 574:	f3 2d       	mov	r31, r3
 576:	ff 77       	andi	r31, 0x7F	; 127
 578:	3f 2e       	mov	r3, r31
 57a:	16 c0       	rjmp	.+44     	; 0x5a8 <vfprintf+0x188>
 57c:	28 01       	movw	r4, r16
 57e:	22 e0       	ldi	r18, 0x02	; 2
 580:	42 0e       	add	r4, r18
 582:	51 1c       	adc	r5, r1
 584:	f8 01       	movw	r30, r16
 586:	a0 80       	ld	r10, Z
 588:	b1 80       	ldd	r11, Z+1	; 0x01
 58a:	36 fe       	sbrs	r3, 6
 58c:	03 c0       	rjmp	.+6      	; 0x594 <vfprintf+0x174>
 58e:	69 2d       	mov	r22, r9
 590:	70 e0       	ldi	r23, 0x00	; 0
 592:	02 c0       	rjmp	.+4      	; 0x598 <vfprintf+0x178>
 594:	6f ef       	ldi	r22, 0xFF	; 255
 596:	7f ef       	ldi	r23, 0xFF	; 255
 598:	c5 01       	movw	r24, r10
 59a:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <strnlen_P>
 59e:	4c 01       	movw	r8, r24
 5a0:	f3 2d       	mov	r31, r3
 5a2:	f0 68       	ori	r31, 0x80	; 128
 5a4:	3f 2e       	mov	r3, r31
 5a6:	82 01       	movw	r16, r4
 5a8:	33 fc       	sbrc	r3, 3
 5aa:	1b c0       	rjmp	.+54     	; 0x5e2 <vfprintf+0x1c2>
 5ac:	82 2d       	mov	r24, r2
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	88 16       	cp	r8, r24
 5b2:	99 06       	cpc	r9, r25
 5b4:	b0 f4       	brcc	.+44     	; 0x5e2 <vfprintf+0x1c2>
 5b6:	b6 01       	movw	r22, r12
 5b8:	80 e2       	ldi	r24, 0x20	; 32
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	0e 94 07 04 	call	0x80e	; 0x80e <fputc>
 5c0:	2a 94       	dec	r2
 5c2:	f4 cf       	rjmp	.-24     	; 0x5ac <vfprintf+0x18c>
 5c4:	f5 01       	movw	r30, r10
 5c6:	37 fc       	sbrc	r3, 7
 5c8:	85 91       	lpm	r24, Z+
 5ca:	37 fe       	sbrs	r3, 7
 5cc:	81 91       	ld	r24, Z+
 5ce:	5f 01       	movw	r10, r30
 5d0:	b6 01       	movw	r22, r12
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	0e 94 07 04 	call	0x80e	; 0x80e <fputc>
 5d8:	21 10       	cpse	r2, r1
 5da:	2a 94       	dec	r2
 5dc:	21 e0       	ldi	r18, 0x01	; 1
 5de:	82 1a       	sub	r8, r18
 5e0:	91 08       	sbc	r9, r1
 5e2:	81 14       	cp	r8, r1
 5e4:	91 04       	cpc	r9, r1
 5e6:	71 f7       	brne	.-36     	; 0x5c4 <vfprintf+0x1a4>
 5e8:	e8 c0       	rjmp	.+464    	; 0x7ba <vfprintf+0x39a>
 5ea:	84 36       	cpi	r24, 0x64	; 100
 5ec:	11 f0       	breq	.+4      	; 0x5f2 <vfprintf+0x1d2>
 5ee:	89 36       	cpi	r24, 0x69	; 105
 5f0:	41 f5       	brne	.+80     	; 0x642 <vfprintf+0x222>
 5f2:	f8 01       	movw	r30, r16
 5f4:	37 fe       	sbrs	r3, 7
 5f6:	07 c0       	rjmp	.+14     	; 0x606 <vfprintf+0x1e6>
 5f8:	60 81       	ld	r22, Z
 5fa:	71 81       	ldd	r23, Z+1	; 0x01
 5fc:	82 81       	ldd	r24, Z+2	; 0x02
 5fe:	93 81       	ldd	r25, Z+3	; 0x03
 600:	0c 5f       	subi	r16, 0xFC	; 252
 602:	1f 4f       	sbci	r17, 0xFF	; 255
 604:	08 c0       	rjmp	.+16     	; 0x616 <vfprintf+0x1f6>
 606:	60 81       	ld	r22, Z
 608:	71 81       	ldd	r23, Z+1	; 0x01
 60a:	07 2e       	mov	r0, r23
 60c:	00 0c       	add	r0, r0
 60e:	88 0b       	sbc	r24, r24
 610:	99 0b       	sbc	r25, r25
 612:	0e 5f       	subi	r16, 0xFE	; 254
 614:	1f 4f       	sbci	r17, 0xFF	; 255
 616:	f3 2d       	mov	r31, r3
 618:	ff 76       	andi	r31, 0x6F	; 111
 61a:	3f 2e       	mov	r3, r31
 61c:	97 ff       	sbrs	r25, 7
 61e:	09 c0       	rjmp	.+18     	; 0x632 <vfprintf+0x212>
 620:	90 95       	com	r25
 622:	80 95       	com	r24
 624:	70 95       	com	r23
 626:	61 95       	neg	r22
 628:	7f 4f       	sbci	r23, 0xFF	; 255
 62a:	8f 4f       	sbci	r24, 0xFF	; 255
 62c:	9f 4f       	sbci	r25, 0xFF	; 255
 62e:	f0 68       	ori	r31, 0x80	; 128
 630:	3f 2e       	mov	r3, r31
 632:	2a e0       	ldi	r18, 0x0A	; 10
 634:	30 e0       	ldi	r19, 0x00	; 0
 636:	a3 01       	movw	r20, r6
 638:	0e 94 43 04 	call	0x886	; 0x886 <__ultoa_invert>
 63c:	88 2e       	mov	r8, r24
 63e:	86 18       	sub	r8, r6
 640:	45 c0       	rjmp	.+138    	; 0x6cc <vfprintf+0x2ac>
 642:	85 37       	cpi	r24, 0x75	; 117
 644:	31 f4       	brne	.+12     	; 0x652 <vfprintf+0x232>
 646:	23 2d       	mov	r18, r3
 648:	2f 7e       	andi	r18, 0xEF	; 239
 64a:	b2 2e       	mov	r11, r18
 64c:	2a e0       	ldi	r18, 0x0A	; 10
 64e:	30 e0       	ldi	r19, 0x00	; 0
 650:	25 c0       	rjmp	.+74     	; 0x69c <vfprintf+0x27c>
 652:	93 2d       	mov	r25, r3
 654:	99 7f       	andi	r25, 0xF9	; 249
 656:	b9 2e       	mov	r11, r25
 658:	8f 36       	cpi	r24, 0x6F	; 111
 65a:	c1 f0       	breq	.+48     	; 0x68c <vfprintf+0x26c>
 65c:	18 f4       	brcc	.+6      	; 0x664 <vfprintf+0x244>
 65e:	88 35       	cpi	r24, 0x58	; 88
 660:	79 f0       	breq	.+30     	; 0x680 <vfprintf+0x260>
 662:	b5 c0       	rjmp	.+362    	; 0x7ce <vfprintf+0x3ae>
 664:	80 37       	cpi	r24, 0x70	; 112
 666:	19 f0       	breq	.+6      	; 0x66e <vfprintf+0x24e>
 668:	88 37       	cpi	r24, 0x78	; 120
 66a:	21 f0       	breq	.+8      	; 0x674 <vfprintf+0x254>
 66c:	b0 c0       	rjmp	.+352    	; 0x7ce <vfprintf+0x3ae>
 66e:	e9 2f       	mov	r30, r25
 670:	e0 61       	ori	r30, 0x10	; 16
 672:	be 2e       	mov	r11, r30
 674:	b4 fe       	sbrs	r11, 4
 676:	0d c0       	rjmp	.+26     	; 0x692 <vfprintf+0x272>
 678:	fb 2d       	mov	r31, r11
 67a:	f4 60       	ori	r31, 0x04	; 4
 67c:	bf 2e       	mov	r11, r31
 67e:	09 c0       	rjmp	.+18     	; 0x692 <vfprintf+0x272>
 680:	34 fe       	sbrs	r3, 4
 682:	0a c0       	rjmp	.+20     	; 0x698 <vfprintf+0x278>
 684:	29 2f       	mov	r18, r25
 686:	26 60       	ori	r18, 0x06	; 6
 688:	b2 2e       	mov	r11, r18
 68a:	06 c0       	rjmp	.+12     	; 0x698 <vfprintf+0x278>
 68c:	28 e0       	ldi	r18, 0x08	; 8
 68e:	30 e0       	ldi	r19, 0x00	; 0
 690:	05 c0       	rjmp	.+10     	; 0x69c <vfprintf+0x27c>
 692:	20 e1       	ldi	r18, 0x10	; 16
 694:	30 e0       	ldi	r19, 0x00	; 0
 696:	02 c0       	rjmp	.+4      	; 0x69c <vfprintf+0x27c>
 698:	20 e1       	ldi	r18, 0x10	; 16
 69a:	32 e0       	ldi	r19, 0x02	; 2
 69c:	f8 01       	movw	r30, r16
 69e:	b7 fe       	sbrs	r11, 7
 6a0:	07 c0       	rjmp	.+14     	; 0x6b0 <vfprintf+0x290>
 6a2:	60 81       	ld	r22, Z
 6a4:	71 81       	ldd	r23, Z+1	; 0x01
 6a6:	82 81       	ldd	r24, Z+2	; 0x02
 6a8:	93 81       	ldd	r25, Z+3	; 0x03
 6aa:	0c 5f       	subi	r16, 0xFC	; 252
 6ac:	1f 4f       	sbci	r17, 0xFF	; 255
 6ae:	06 c0       	rjmp	.+12     	; 0x6bc <vfprintf+0x29c>
 6b0:	60 81       	ld	r22, Z
 6b2:	71 81       	ldd	r23, Z+1	; 0x01
 6b4:	80 e0       	ldi	r24, 0x00	; 0
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	0e 5f       	subi	r16, 0xFE	; 254
 6ba:	1f 4f       	sbci	r17, 0xFF	; 255
 6bc:	a3 01       	movw	r20, r6
 6be:	0e 94 43 04 	call	0x886	; 0x886 <__ultoa_invert>
 6c2:	88 2e       	mov	r8, r24
 6c4:	86 18       	sub	r8, r6
 6c6:	fb 2d       	mov	r31, r11
 6c8:	ff 77       	andi	r31, 0x7F	; 127
 6ca:	3f 2e       	mov	r3, r31
 6cc:	36 fe       	sbrs	r3, 6
 6ce:	0d c0       	rjmp	.+26     	; 0x6ea <vfprintf+0x2ca>
 6d0:	23 2d       	mov	r18, r3
 6d2:	2e 7f       	andi	r18, 0xFE	; 254
 6d4:	a2 2e       	mov	r10, r18
 6d6:	89 14       	cp	r8, r9
 6d8:	58 f4       	brcc	.+22     	; 0x6f0 <vfprintf+0x2d0>
 6da:	34 fe       	sbrs	r3, 4
 6dc:	0b c0       	rjmp	.+22     	; 0x6f4 <vfprintf+0x2d4>
 6de:	32 fc       	sbrc	r3, 2
 6e0:	09 c0       	rjmp	.+18     	; 0x6f4 <vfprintf+0x2d4>
 6e2:	83 2d       	mov	r24, r3
 6e4:	8e 7e       	andi	r24, 0xEE	; 238
 6e6:	a8 2e       	mov	r10, r24
 6e8:	05 c0       	rjmp	.+10     	; 0x6f4 <vfprintf+0x2d4>
 6ea:	b8 2c       	mov	r11, r8
 6ec:	a3 2c       	mov	r10, r3
 6ee:	03 c0       	rjmp	.+6      	; 0x6f6 <vfprintf+0x2d6>
 6f0:	b8 2c       	mov	r11, r8
 6f2:	01 c0       	rjmp	.+2      	; 0x6f6 <vfprintf+0x2d6>
 6f4:	b9 2c       	mov	r11, r9
 6f6:	a4 fe       	sbrs	r10, 4
 6f8:	0f c0       	rjmp	.+30     	; 0x718 <vfprintf+0x2f8>
 6fa:	fe 01       	movw	r30, r28
 6fc:	e8 0d       	add	r30, r8
 6fe:	f1 1d       	adc	r31, r1
 700:	80 81       	ld	r24, Z
 702:	80 33       	cpi	r24, 0x30	; 48
 704:	21 f4       	brne	.+8      	; 0x70e <vfprintf+0x2ee>
 706:	9a 2d       	mov	r25, r10
 708:	99 7e       	andi	r25, 0xE9	; 233
 70a:	a9 2e       	mov	r10, r25
 70c:	09 c0       	rjmp	.+18     	; 0x720 <vfprintf+0x300>
 70e:	a2 fe       	sbrs	r10, 2
 710:	06 c0       	rjmp	.+12     	; 0x71e <vfprintf+0x2fe>
 712:	b3 94       	inc	r11
 714:	b3 94       	inc	r11
 716:	04 c0       	rjmp	.+8      	; 0x720 <vfprintf+0x300>
 718:	8a 2d       	mov	r24, r10
 71a:	86 78       	andi	r24, 0x86	; 134
 71c:	09 f0       	breq	.+2      	; 0x720 <vfprintf+0x300>
 71e:	b3 94       	inc	r11
 720:	a3 fc       	sbrc	r10, 3
 722:	11 c0       	rjmp	.+34     	; 0x746 <vfprintf+0x326>
 724:	a0 fe       	sbrs	r10, 0
 726:	06 c0       	rjmp	.+12     	; 0x734 <vfprintf+0x314>
 728:	b2 14       	cp	r11, r2
 72a:	88 f4       	brcc	.+34     	; 0x74e <vfprintf+0x32e>
 72c:	28 0c       	add	r2, r8
 72e:	92 2c       	mov	r9, r2
 730:	9b 18       	sub	r9, r11
 732:	0e c0       	rjmp	.+28     	; 0x750 <vfprintf+0x330>
 734:	b2 14       	cp	r11, r2
 736:	60 f4       	brcc	.+24     	; 0x750 <vfprintf+0x330>
 738:	b6 01       	movw	r22, r12
 73a:	80 e2       	ldi	r24, 0x20	; 32
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0e 94 07 04 	call	0x80e	; 0x80e <fputc>
 742:	b3 94       	inc	r11
 744:	f7 cf       	rjmp	.-18     	; 0x734 <vfprintf+0x314>
 746:	b2 14       	cp	r11, r2
 748:	18 f4       	brcc	.+6      	; 0x750 <vfprintf+0x330>
 74a:	2b 18       	sub	r2, r11
 74c:	02 c0       	rjmp	.+4      	; 0x752 <vfprintf+0x332>
 74e:	98 2c       	mov	r9, r8
 750:	21 2c       	mov	r2, r1
 752:	a4 fe       	sbrs	r10, 4
 754:	10 c0       	rjmp	.+32     	; 0x776 <vfprintf+0x356>
 756:	b6 01       	movw	r22, r12
 758:	80 e3       	ldi	r24, 0x30	; 48
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	0e 94 07 04 	call	0x80e	; 0x80e <fputc>
 760:	a2 fe       	sbrs	r10, 2
 762:	17 c0       	rjmp	.+46     	; 0x792 <vfprintf+0x372>
 764:	a1 fc       	sbrc	r10, 1
 766:	03 c0       	rjmp	.+6      	; 0x76e <vfprintf+0x34e>
 768:	88 e7       	ldi	r24, 0x78	; 120
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	02 c0       	rjmp	.+4      	; 0x772 <vfprintf+0x352>
 76e:	88 e5       	ldi	r24, 0x58	; 88
 770:	90 e0       	ldi	r25, 0x00	; 0
 772:	b6 01       	movw	r22, r12
 774:	0c c0       	rjmp	.+24     	; 0x78e <vfprintf+0x36e>
 776:	8a 2d       	mov	r24, r10
 778:	86 78       	andi	r24, 0x86	; 134
 77a:	59 f0       	breq	.+22     	; 0x792 <vfprintf+0x372>
 77c:	a1 fe       	sbrs	r10, 1
 77e:	02 c0       	rjmp	.+4      	; 0x784 <vfprintf+0x364>
 780:	8b e2       	ldi	r24, 0x2B	; 43
 782:	01 c0       	rjmp	.+2      	; 0x786 <vfprintf+0x366>
 784:	80 e2       	ldi	r24, 0x20	; 32
 786:	a7 fc       	sbrc	r10, 7
 788:	8d e2       	ldi	r24, 0x2D	; 45
 78a:	b6 01       	movw	r22, r12
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	0e 94 07 04 	call	0x80e	; 0x80e <fputc>
 792:	89 14       	cp	r8, r9
 794:	38 f4       	brcc	.+14     	; 0x7a4 <vfprintf+0x384>
 796:	b6 01       	movw	r22, r12
 798:	80 e3       	ldi	r24, 0x30	; 48
 79a:	90 e0       	ldi	r25, 0x00	; 0
 79c:	0e 94 07 04 	call	0x80e	; 0x80e <fputc>
 7a0:	9a 94       	dec	r9
 7a2:	f7 cf       	rjmp	.-18     	; 0x792 <vfprintf+0x372>
 7a4:	8a 94       	dec	r8
 7a6:	f3 01       	movw	r30, r6
 7a8:	e8 0d       	add	r30, r8
 7aa:	f1 1d       	adc	r31, r1
 7ac:	80 81       	ld	r24, Z
 7ae:	b6 01       	movw	r22, r12
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	0e 94 07 04 	call	0x80e	; 0x80e <fputc>
 7b6:	81 10       	cpse	r8, r1
 7b8:	f5 cf       	rjmp	.-22     	; 0x7a4 <vfprintf+0x384>
 7ba:	22 20       	and	r2, r2
 7bc:	09 f4       	brne	.+2      	; 0x7c0 <vfprintf+0x3a0>
 7be:	42 ce       	rjmp	.-892    	; 0x444 <vfprintf+0x24>
 7c0:	b6 01       	movw	r22, r12
 7c2:	80 e2       	ldi	r24, 0x20	; 32
 7c4:	90 e0       	ldi	r25, 0x00	; 0
 7c6:	0e 94 07 04 	call	0x80e	; 0x80e <fputc>
 7ca:	2a 94       	dec	r2
 7cc:	f6 cf       	rjmp	.-20     	; 0x7ba <vfprintf+0x39a>
 7ce:	f6 01       	movw	r30, r12
 7d0:	86 81       	ldd	r24, Z+6	; 0x06
 7d2:	97 81       	ldd	r25, Z+7	; 0x07
 7d4:	02 c0       	rjmp	.+4      	; 0x7da <vfprintf+0x3ba>
 7d6:	8f ef       	ldi	r24, 0xFF	; 255
 7d8:	9f ef       	ldi	r25, 0xFF	; 255
 7da:	2b 96       	adiw	r28, 0x0b	; 11
 7dc:	e2 e1       	ldi	r30, 0x12	; 18
 7de:	0c 94 bd 04 	jmp	0x97a	; 0x97a <__epilogue_restores__>

000007e2 <strnlen_P>:
 7e2:	fc 01       	movw	r30, r24
 7e4:	05 90       	lpm	r0, Z+
 7e6:	61 50       	subi	r22, 0x01	; 1
 7e8:	70 40       	sbci	r23, 0x00	; 0
 7ea:	01 10       	cpse	r0, r1
 7ec:	d8 f7       	brcc	.-10     	; 0x7e4 <strnlen_P+0x2>
 7ee:	80 95       	com	r24
 7f0:	90 95       	com	r25
 7f2:	8e 0f       	add	r24, r30
 7f4:	9f 1f       	adc	r25, r31
 7f6:	08 95       	ret

000007f8 <strnlen>:
 7f8:	fc 01       	movw	r30, r24
 7fa:	61 50       	subi	r22, 0x01	; 1
 7fc:	70 40       	sbci	r23, 0x00	; 0
 7fe:	01 90       	ld	r0, Z+
 800:	01 10       	cpse	r0, r1
 802:	d8 f7       	brcc	.-10     	; 0x7fa <strnlen+0x2>
 804:	80 95       	com	r24
 806:	90 95       	com	r25
 808:	8e 0f       	add	r24, r30
 80a:	9f 1f       	adc	r25, r31
 80c:	08 95       	ret

0000080e <fputc>:
 80e:	0f 93       	push	r16
 810:	1f 93       	push	r17
 812:	cf 93       	push	r28
 814:	df 93       	push	r29
 816:	fb 01       	movw	r30, r22
 818:	23 81       	ldd	r18, Z+3	; 0x03
 81a:	21 fd       	sbrc	r18, 1
 81c:	03 c0       	rjmp	.+6      	; 0x824 <fputc+0x16>
 81e:	8f ef       	ldi	r24, 0xFF	; 255
 820:	9f ef       	ldi	r25, 0xFF	; 255
 822:	2c c0       	rjmp	.+88     	; 0x87c <fputc+0x6e>
 824:	22 ff       	sbrs	r18, 2
 826:	16 c0       	rjmp	.+44     	; 0x854 <fputc+0x46>
 828:	46 81       	ldd	r20, Z+6	; 0x06
 82a:	57 81       	ldd	r21, Z+7	; 0x07
 82c:	24 81       	ldd	r18, Z+4	; 0x04
 82e:	35 81       	ldd	r19, Z+5	; 0x05
 830:	42 17       	cp	r20, r18
 832:	53 07       	cpc	r21, r19
 834:	44 f4       	brge	.+16     	; 0x846 <fputc+0x38>
 836:	a0 81       	ld	r26, Z
 838:	b1 81       	ldd	r27, Z+1	; 0x01
 83a:	9d 01       	movw	r18, r26
 83c:	2f 5f       	subi	r18, 0xFF	; 255
 83e:	3f 4f       	sbci	r19, 0xFF	; 255
 840:	31 83       	std	Z+1, r19	; 0x01
 842:	20 83       	st	Z, r18
 844:	8c 93       	st	X, r24
 846:	26 81       	ldd	r18, Z+6	; 0x06
 848:	37 81       	ldd	r19, Z+7	; 0x07
 84a:	2f 5f       	subi	r18, 0xFF	; 255
 84c:	3f 4f       	sbci	r19, 0xFF	; 255
 84e:	37 83       	std	Z+7, r19	; 0x07
 850:	26 83       	std	Z+6, r18	; 0x06
 852:	14 c0       	rjmp	.+40     	; 0x87c <fputc+0x6e>
 854:	8b 01       	movw	r16, r22
 856:	ec 01       	movw	r28, r24
 858:	fb 01       	movw	r30, r22
 85a:	00 84       	ldd	r0, Z+8	; 0x08
 85c:	f1 85       	ldd	r31, Z+9	; 0x09
 85e:	e0 2d       	mov	r30, r0
 860:	09 95       	icall
 862:	89 2b       	or	r24, r25
 864:	e1 f6       	brne	.-72     	; 0x81e <fputc+0x10>
 866:	d8 01       	movw	r26, r16
 868:	16 96       	adiw	r26, 0x06	; 6
 86a:	8d 91       	ld	r24, X+
 86c:	9c 91       	ld	r25, X
 86e:	17 97       	sbiw	r26, 0x07	; 7
 870:	01 96       	adiw	r24, 0x01	; 1
 872:	17 96       	adiw	r26, 0x07	; 7
 874:	9c 93       	st	X, r25
 876:	8e 93       	st	-X, r24
 878:	16 97       	sbiw	r26, 0x06	; 6
 87a:	ce 01       	movw	r24, r28
 87c:	df 91       	pop	r29
 87e:	cf 91       	pop	r28
 880:	1f 91       	pop	r17
 882:	0f 91       	pop	r16
 884:	08 95       	ret

00000886 <__ultoa_invert>:
 886:	fa 01       	movw	r30, r20
 888:	aa 27       	eor	r26, r26
 88a:	28 30       	cpi	r18, 0x08	; 8
 88c:	51 f1       	breq	.+84     	; 0x8e2 <__ultoa_invert+0x5c>
 88e:	20 31       	cpi	r18, 0x10	; 16
 890:	81 f1       	breq	.+96     	; 0x8f2 <__ultoa_invert+0x6c>
 892:	e8 94       	clt
 894:	6f 93       	push	r22
 896:	6e 7f       	andi	r22, 0xFE	; 254
 898:	6e 5f       	subi	r22, 0xFE	; 254
 89a:	7f 4f       	sbci	r23, 0xFF	; 255
 89c:	8f 4f       	sbci	r24, 0xFF	; 255
 89e:	9f 4f       	sbci	r25, 0xFF	; 255
 8a0:	af 4f       	sbci	r26, 0xFF	; 255
 8a2:	b1 e0       	ldi	r27, 0x01	; 1
 8a4:	3e d0       	rcall	.+124    	; 0x922 <__stack+0x23>
 8a6:	b4 e0       	ldi	r27, 0x04	; 4
 8a8:	3c d0       	rcall	.+120    	; 0x922 <__stack+0x23>
 8aa:	67 0f       	add	r22, r23
 8ac:	78 1f       	adc	r23, r24
 8ae:	89 1f       	adc	r24, r25
 8b0:	9a 1f       	adc	r25, r26
 8b2:	a1 1d       	adc	r26, r1
 8b4:	68 0f       	add	r22, r24
 8b6:	79 1f       	adc	r23, r25
 8b8:	8a 1f       	adc	r24, r26
 8ba:	91 1d       	adc	r25, r1
 8bc:	a1 1d       	adc	r26, r1
 8be:	6a 0f       	add	r22, r26
 8c0:	71 1d       	adc	r23, r1
 8c2:	81 1d       	adc	r24, r1
 8c4:	91 1d       	adc	r25, r1
 8c6:	a1 1d       	adc	r26, r1
 8c8:	20 d0       	rcall	.+64     	; 0x90a <__stack+0xb>
 8ca:	09 f4       	brne	.+2      	; 0x8ce <__ultoa_invert+0x48>
 8cc:	68 94       	set
 8ce:	3f 91       	pop	r19
 8d0:	2a e0       	ldi	r18, 0x0A	; 10
 8d2:	26 9f       	mul	r18, r22
 8d4:	11 24       	eor	r1, r1
 8d6:	30 19       	sub	r19, r0
 8d8:	30 5d       	subi	r19, 0xD0	; 208
 8da:	31 93       	st	Z+, r19
 8dc:	de f6       	brtc	.-74     	; 0x894 <__ultoa_invert+0xe>
 8de:	cf 01       	movw	r24, r30
 8e0:	08 95       	ret
 8e2:	46 2f       	mov	r20, r22
 8e4:	47 70       	andi	r20, 0x07	; 7
 8e6:	40 5d       	subi	r20, 0xD0	; 208
 8e8:	41 93       	st	Z+, r20
 8ea:	b3 e0       	ldi	r27, 0x03	; 3
 8ec:	0f d0       	rcall	.+30     	; 0x90c <__stack+0xd>
 8ee:	c9 f7       	brne	.-14     	; 0x8e2 <__ultoa_invert+0x5c>
 8f0:	f6 cf       	rjmp	.-20     	; 0x8de <__ultoa_invert+0x58>
 8f2:	46 2f       	mov	r20, r22
 8f4:	4f 70       	andi	r20, 0x0F	; 15
 8f6:	40 5d       	subi	r20, 0xD0	; 208
 8f8:	4a 33       	cpi	r20, 0x3A	; 58
 8fa:	18 f0       	brcs	.+6      	; 0x902 <__stack+0x3>
 8fc:	49 5d       	subi	r20, 0xD9	; 217
 8fe:	31 fd       	sbrc	r19, 1
 900:	40 52       	subi	r20, 0x20	; 32
 902:	41 93       	st	Z+, r20
 904:	02 d0       	rcall	.+4      	; 0x90a <__stack+0xb>
 906:	a9 f7       	brne	.-22     	; 0x8f2 <__ultoa_invert+0x6c>
 908:	ea cf       	rjmp	.-44     	; 0x8de <__ultoa_invert+0x58>
 90a:	b4 e0       	ldi	r27, 0x04	; 4
 90c:	a6 95       	lsr	r26
 90e:	97 95       	ror	r25
 910:	87 95       	ror	r24
 912:	77 95       	ror	r23
 914:	67 95       	ror	r22
 916:	ba 95       	dec	r27
 918:	c9 f7       	brne	.-14     	; 0x90c <__stack+0xd>
 91a:	00 97       	sbiw	r24, 0x00	; 0
 91c:	61 05       	cpc	r22, r1
 91e:	71 05       	cpc	r23, r1
 920:	08 95       	ret
 922:	9b 01       	movw	r18, r22
 924:	ac 01       	movw	r20, r24
 926:	0a 2e       	mov	r0, r26
 928:	06 94       	lsr	r0
 92a:	57 95       	ror	r21
 92c:	47 95       	ror	r20
 92e:	37 95       	ror	r19
 930:	27 95       	ror	r18
 932:	ba 95       	dec	r27
 934:	c9 f7       	brne	.-14     	; 0x928 <__stack+0x29>
 936:	62 0f       	add	r22, r18
 938:	73 1f       	adc	r23, r19
 93a:	84 1f       	adc	r24, r20
 93c:	95 1f       	adc	r25, r21
 93e:	a0 1d       	adc	r26, r0
 940:	08 95       	ret

00000942 <__prologue_saves__>:
 942:	2f 92       	push	r2
 944:	3f 92       	push	r3
 946:	4f 92       	push	r4
 948:	5f 92       	push	r5
 94a:	6f 92       	push	r6
 94c:	7f 92       	push	r7
 94e:	8f 92       	push	r8
 950:	9f 92       	push	r9
 952:	af 92       	push	r10
 954:	bf 92       	push	r11
 956:	cf 92       	push	r12
 958:	df 92       	push	r13
 95a:	ef 92       	push	r14
 95c:	ff 92       	push	r15
 95e:	0f 93       	push	r16
 960:	1f 93       	push	r17
 962:	cf 93       	push	r28
 964:	df 93       	push	r29
 966:	cd b7       	in	r28, 0x3d	; 61
 968:	de b7       	in	r29, 0x3e	; 62
 96a:	ca 1b       	sub	r28, r26
 96c:	db 0b       	sbc	r29, r27
 96e:	0f b6       	in	r0, 0x3f	; 63
 970:	f8 94       	cli
 972:	de bf       	out	0x3e, r29	; 62
 974:	0f be       	out	0x3f, r0	; 63
 976:	cd bf       	out	0x3d, r28	; 61
 978:	09 94       	ijmp

0000097a <__epilogue_restores__>:
 97a:	2a 88       	ldd	r2, Y+18	; 0x12
 97c:	39 88       	ldd	r3, Y+17	; 0x11
 97e:	48 88       	ldd	r4, Y+16	; 0x10
 980:	5f 84       	ldd	r5, Y+15	; 0x0f
 982:	6e 84       	ldd	r6, Y+14	; 0x0e
 984:	7d 84       	ldd	r7, Y+13	; 0x0d
 986:	8c 84       	ldd	r8, Y+12	; 0x0c
 988:	9b 84       	ldd	r9, Y+11	; 0x0b
 98a:	aa 84       	ldd	r10, Y+10	; 0x0a
 98c:	b9 84       	ldd	r11, Y+9	; 0x09
 98e:	c8 84       	ldd	r12, Y+8	; 0x08
 990:	df 80       	ldd	r13, Y+7	; 0x07
 992:	ee 80       	ldd	r14, Y+6	; 0x06
 994:	fd 80       	ldd	r15, Y+5	; 0x05
 996:	0c 81       	ldd	r16, Y+4	; 0x04
 998:	1b 81       	ldd	r17, Y+3	; 0x03
 99a:	aa 81       	ldd	r26, Y+2	; 0x02
 99c:	b9 81       	ldd	r27, Y+1	; 0x01
 99e:	ce 0f       	add	r28, r30
 9a0:	d1 1d       	adc	r29, r1
 9a2:	0f b6       	in	r0, 0x3f	; 63
 9a4:	f8 94       	cli
 9a6:	de bf       	out	0x3e, r29	; 62
 9a8:	0f be       	out	0x3f, r0	; 63
 9aa:	cd bf       	out	0x3d, r28	; 61
 9ac:	ed 01       	movw	r28, r26
 9ae:	08 95       	ret

000009b0 <_exit>:
 9b0:	f8 94       	cli

000009b2 <__stop_program>:
 9b2:	ff cf       	rjmp	.-2      	; 0x9b2 <__stop_program>
