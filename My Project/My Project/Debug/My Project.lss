
My Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  000007f2  00000886  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080011c  0080011c  000008a2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000900  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00000940  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017b5  00000000  00000000  00000aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dc7  00000000  00000000  00002255  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000095a  00000000  00000000  0000301c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00003978  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000092a  00000000  00000000  00003b78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002d0  00000000  00000000  000044a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00004772  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e2 ef       	ldi	r30, 0xF2	; 242
  c8:	f7 e0       	ldi	r31, 0x07	; 7
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	ac 31       	cpi	r26, 0x1C	; 28
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	ac e1       	ldi	r26, 0x1C	; 28
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a2 32       	cpi	r26, 0x22	; 34
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 7c 00 	call	0xf8	; 0xf8 <main>
  ea:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
  f2:	0e 94 bc 00 	call	0x178	; 0x178 <system_init>
  f6:	08 95       	ret

000000f8 <main>:
#include <util/delay.h>
#include <stdio.h>
int main(void)
{
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
  f8:	0e 94 79 00 	call	0xf2	; 0xf2 <atmel_start_init>

	/* Replace with your application code */
	while (1) {
		
		printf("hola mundo\n\r");
  fc:	8e e0       	ldi	r24, 0x0E	; 14
  fe:	91 e0       	ldi	r25, 0x01	; 1
 100:	9f 93       	push	r25
 102:	8f 93       	push	r24
 104:	0e 94 19 01 	call	0x232	; 0x232 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 108:	2f ef       	ldi	r18, 0xFF	; 255
 10a:	84 e3       	ldi	r24, 0x34	; 52
 10c:	9c e0       	ldi	r25, 0x0C	; 12
 10e:	21 50       	subi	r18, 0x01	; 1
 110:	80 40       	sbci	r24, 0x00	; 0
 112:	90 40       	sbci	r25, 0x00	; 0
 114:	e1 f7       	brne	.-8      	; 0x10e <main+0x16>
 116:	00 c0       	rjmp	.+0      	; 0x118 <main+0x20>
 118:	00 00       	nop
 11a:	0f 90       	pop	r0
 11c:	0f 90       	pop	r0
 11e:	ee cf       	rjmp	.-36     	; 0xfc <main+0x4>

00000120 <ADC_0_init>:
 */
int8_t ADC_0_init()
{

	/* Enable clock to write ADC registers */
	PRR0 &= ~(1 << PRADC);
 120:	e4 e6       	ldi	r30, 0x64	; 100
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	80 81       	ld	r24, Z
 126:	8e 7f       	andi	r24, 0xFE	; 254
 128:	80 83       	st	Z, r24

	ADMUX = (0x00 << REFS0)   /* AREF, Internal Vref turned off */
 12a:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	        | (0 << ADLAR)    /* Left Adjust Result: disabled */
	        | (0x00 << MUX0); /* ADC Single Ended Input pin 0 */

	ADCSRA = (1 << ADEN)        /* ADC: enabled */
 12e:	82 e8       	ldi	r24, 0x82	; 130
 130:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	         | (0 << ADATE)     /* Auto Trigger: disabled */
	         | (0 << ADIE)      /* ADC Interrupt: disabled */
	         | (0x02 << ADPS0); /* 4 */
	ADCSRB = (0x00 << ADTS0)    /* Free Running mode */
 134:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
	         | (0 << ACME)      /* Analog Comparator Multiplexer: disabled */
	    ;

	DIDR0 = 1 << ADC0D    /* Disable digital input buffer for ADC0 */
 138:	87 e0       	ldi	r24, 0x07	; 7
 13a:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
	        | 1 << ADC1D  /* Disable digital input buffer for ADC1 */
	        | 1 << ADC2D; /* Disable digital input buffer for ADC2 */

	return 0;
}
 13e:	80 e0       	ldi	r24, 0x00	; 0
 140:	08 95       	ret

00000142 <ADC_0_initialization>:
		DDRC &= ~(1 << pin);

		PORTC |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTC &= ~(1 << pin);
 142:	88 b1       	in	r24, 0x08	; 8
 144:	8e 7f       	andi	r24, 0xFE	; 254
 146:	88 b9       	out	0x08, r24	; 8
 148:	88 b1       	in	r24, 0x08	; 8
 14a:	8d 7f       	andi	r24, 0xFD	; 253
 14c:	88 b9       	out	0x08, r24	; 8
 14e:	88 b1       	in	r24, 0x08	; 8
 150:	8b 7f       	andi	r24, 0xFB	; 251
 152:	88 b9       	out	0x08, r24	; 8
	ana0_set_pull_mode(PORT_PULL_OFF);

	// Disable pull-up.
	an2_set_pull_mode(PORT_PULL_OFF);

	ADC_0_init();
 154:	0e 94 90 00 	call	0x120	; 0x120 <ADC_0_init>
 158:	08 95       	ret

0000015a <USART_0_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
 15a:	8a b1       	in	r24, 0x0a	; 10
 15c:	8e 7f       	andi	r24, 0xFE	; 254
 15e:	8a b9       	out	0x0a, r24	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
 160:	8b b1       	in	r24, 0x0b	; 11
 162:	8e 7f       	andi	r24, 0xFE	; 254
 164:	8b b9       	out	0x0b, r24	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
 166:	8a b1       	in	r24, 0x0a	; 10
 168:	82 60       	ori	r24, 0x02	; 2
 16a:	8a b9       	out	0x0a, r24	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
 16c:	8b b1       	in	r24, 0x0b	; 11
 16e:	8d 7f       	andi	r24, 0xFD	; 253
 170:	8b b9       	out	0x0b, r24	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
 172:	0e 94 f6 00 	call	0x1ec	; 0x1ec <USART_0_init>
 176:	08 95       	ret

00000178 <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR1 = (1 << PRTWI1) | (1 << PRTIM4) | (1 << PRSPI1) | (1 << PRPTC) | (1 << PRTIM3);
 178:	8d e3       	ldi	r24, 0x3D	; 61
 17a:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7f8065>

	PRR0 = (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI0) | (1 << PRUSART1) | (1 << PRUSART0)
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7f8064>
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
 184:	94 b1       	in	r25, 0x04	; 4
 186:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
 188:	95 b1       	in	r25, 0x05	; 5
 18a:	85 b9       	out	0x05, r24	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
 18c:	97 b1       	in	r25, 0x07	; 7
 18e:	90 78       	andi	r25, 0x80	; 128
 190:	97 b9       	out	0x07, r25	; 7

		PORTC |= mask;
 192:	98 b1       	in	r25, 0x08	; 8
 194:	9f 67       	ori	r25, 0x7F	; 127
 196:	98 b9       	out	0x08, r25	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
 198:	9a b1       	in	r25, 0x0a	; 10
 19a:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
 19c:	9b b1       	in	r25, 0x0b	; 11
 19e:	8b b9       	out	0x0b, r24	; 11
		break;
	case PORT_DIR_OUT:
		DDRE |= mask;
		break;
	case PORT_DIR_OFF:
		DDRE &= ~mask;
 1a0:	8d b1       	in	r24, 0x0d	; 13
 1a2:	80 7f       	andi	r24, 0xF0	; 240
 1a4:	8d b9       	out	0x0d, r24	; 13

		PORTE |= mask;
 1a6:	8e b1       	in	r24, 0x0e	; 14
 1a8:	8f 60       	ori	r24, 0x0F	; 15
 1aa:	8e b9       	out	0x0e, r24	; 14
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
 1ac:	84 b1       	in	r24, 0x04	; 4
 1ae:	80 62       	ori	r24, 0x20	; 32
 1b0:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
 1b2:	85 b1       	in	r24, 0x05	; 5
 1b4:	8f 7d       	andi	r24, 0xDF	; 223
 1b6:	85 b9       	out	0x05, r24	; 5
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
 1b8:	84 b1       	in	r24, 0x04	; 4
 1ba:	8f 77       	andi	r24, 0x7F	; 127
 1bc:	84 b9       	out	0x04, r24	; 4
		DDRB &= ~(1 << pin);

		PORTB |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTB &= ~(1 << pin);
 1be:	85 b1       	in	r24, 0x05	; 5
 1c0:	8f 77       	andi	r24, 0x7F	; 127
 1c2:	85 b9       	out	0x05, r24	; 5
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
 1c4:	40 e0       	ldi	r20, 0x00	; 0
 1c6:	60 e8       	ldi	r22, 0x80	; 128
 1c8:	81 e6       	ldi	r24, 0x61	; 97
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	0e 94 ef 00 	call	0x1de	; 0x1de <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
 1d0:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
 1d2:	15 be       	out	0x35, r1	; 53
	    // <PORT_PULL_UP"> Pull-up
	    PORT_PULL_OFF);

	sysctrl_init();

	ADC_0_initialization();
 1d4:	0e 94 a1 00 	call	0x142	; 0x142 <ADC_0_initialization>

	USART_0_initialization();
 1d8:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_0_initialization>
 1dc:	08 95       	ret

000001de <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
 1de:	2f b7       	in	r18, 0x3f	; 63
	cli
 1e0:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
 1e2:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
 1e4:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
 1e6:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
 1e8:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
 1ea:	08 95       	ret

000001ec <USART_0_init>:
uint8_t USART_0_read()
{
	while (!(UCSR0A & (1 << RXC0)))
		;
	return UDR0;
}
 1ec:	e4 e6       	ldi	r30, 0x64	; 100
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	80 81       	ld	r24, Z
 1f2:	8d 7f       	andi	r24, 0xFD	; 253
 1f4:	80 83       	st	Z, r24
 1f6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 1fa:	83 e3       	ldi	r24, 0x33	; 51
 1fc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 200:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 204:	88 e9       	ldi	r24, 0x98	; 152
 206:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	91 e0       	ldi	r25, 0x01	; 1
 20e:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__data_end+0x3>
 212:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end+0x2>
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	08 95       	ret

0000021a <USART_0_write>:
 *
 * \return Nothing
 */
void USART_0_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE0)))
 21a:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 21e:	95 ff       	sbrs	r25, 5
 220:	fc cf       	rjmp	.-8      	; 0x21a <USART_0_write>
		;
	UDR0 = data;
 222:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 226:	08 95       	ret

00000228 <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
 228:	0e 94 0d 01 	call	0x21a	; 0x21a <USART_0_write>
	return 0;
}
 22c:	80 e0       	ldi	r24, 0x00	; 0
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	08 95       	ret

00000232 <printf>:
 232:	a0 e0       	ldi	r26, 0x00	; 0
 234:	b0 e0       	ldi	r27, 0x00	; 0
 236:	ef e1       	ldi	r30, 0x1F	; 31
 238:	f1 e0       	ldi	r31, 0x01	; 1
 23a:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__prologue_saves__+0x20>
 23e:	ae 01       	movw	r20, r28
 240:	4b 5f       	subi	r20, 0xFB	; 251
 242:	5f 4f       	sbci	r21, 0xFF	; 255
 244:	fa 01       	movw	r30, r20
 246:	61 91       	ld	r22, Z+
 248:	71 91       	ld	r23, Z+
 24a:	af 01       	movw	r20, r30
 24c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end+0x2>
 250:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x3>
 254:	0e 94 2f 01 	call	0x25e	; 0x25e <vfprintf>
 258:	e2 e0       	ldi	r30, 0x02	; 2
 25a:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__epilogue_restores__+0x20>

0000025e <vfprintf>:
 25e:	ab e0       	ldi	r26, 0x0B	; 11
 260:	b0 e0       	ldi	r27, 0x00	; 0
 262:	e5 e3       	ldi	r30, 0x35	; 53
 264:	f1 e0       	ldi	r31, 0x01	; 1
 266:	0c 94 c0 03 	jmp	0x780	; 0x780 <__prologue_saves__>
 26a:	6c 01       	movw	r12, r24
 26c:	7b 01       	movw	r14, r22
 26e:	8a 01       	movw	r16, r20
 270:	fc 01       	movw	r30, r24
 272:	17 82       	std	Z+7, r1	; 0x07
 274:	16 82       	std	Z+6, r1	; 0x06
 276:	83 81       	ldd	r24, Z+3	; 0x03
 278:	81 ff       	sbrs	r24, 1
 27a:	cc c1       	rjmp	.+920    	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
 27c:	ce 01       	movw	r24, r28
 27e:	01 96       	adiw	r24, 0x01	; 1
 280:	3c 01       	movw	r6, r24
 282:	f6 01       	movw	r30, r12
 284:	93 81       	ldd	r25, Z+3	; 0x03
 286:	f7 01       	movw	r30, r14
 288:	93 fd       	sbrc	r25, 3
 28a:	85 91       	lpm	r24, Z+
 28c:	93 ff       	sbrs	r25, 3
 28e:	81 91       	ld	r24, Z+
 290:	7f 01       	movw	r14, r30
 292:	88 23       	and	r24, r24
 294:	09 f4       	brne	.+2      	; 0x298 <vfprintf+0x3a>
 296:	ba c1       	rjmp	.+884    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
 298:	85 32       	cpi	r24, 0x25	; 37
 29a:	39 f4       	brne	.+14     	; 0x2aa <vfprintf+0x4c>
 29c:	93 fd       	sbrc	r25, 3
 29e:	85 91       	lpm	r24, Z+
 2a0:	93 ff       	sbrs	r25, 3
 2a2:	81 91       	ld	r24, Z+
 2a4:	7f 01       	movw	r14, r30
 2a6:	85 32       	cpi	r24, 0x25	; 37
 2a8:	29 f4       	brne	.+10     	; 0x2b4 <vfprintf+0x56>
 2aa:	b6 01       	movw	r22, r12
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	0e 94 26 03 	call	0x64c	; 0x64c <fputc>
 2b2:	e7 cf       	rjmp	.-50     	; 0x282 <vfprintf+0x24>
 2b4:	91 2c       	mov	r9, r1
 2b6:	21 2c       	mov	r2, r1
 2b8:	31 2c       	mov	r3, r1
 2ba:	ff e1       	ldi	r31, 0x1F	; 31
 2bc:	f3 15       	cp	r31, r3
 2be:	d8 f0       	brcs	.+54     	; 0x2f6 <vfprintf+0x98>
 2c0:	8b 32       	cpi	r24, 0x2B	; 43
 2c2:	79 f0       	breq	.+30     	; 0x2e2 <vfprintf+0x84>
 2c4:	38 f4       	brcc	.+14     	; 0x2d4 <vfprintf+0x76>
 2c6:	80 32       	cpi	r24, 0x20	; 32
 2c8:	79 f0       	breq	.+30     	; 0x2e8 <vfprintf+0x8a>
 2ca:	83 32       	cpi	r24, 0x23	; 35
 2cc:	a1 f4       	brne	.+40     	; 0x2f6 <vfprintf+0x98>
 2ce:	23 2d       	mov	r18, r3
 2d0:	20 61       	ori	r18, 0x10	; 16
 2d2:	1d c0       	rjmp	.+58     	; 0x30e <vfprintf+0xb0>
 2d4:	8d 32       	cpi	r24, 0x2D	; 45
 2d6:	61 f0       	breq	.+24     	; 0x2f0 <vfprintf+0x92>
 2d8:	80 33       	cpi	r24, 0x30	; 48
 2da:	69 f4       	brne	.+26     	; 0x2f6 <vfprintf+0x98>
 2dc:	23 2d       	mov	r18, r3
 2de:	21 60       	ori	r18, 0x01	; 1
 2e0:	16 c0       	rjmp	.+44     	; 0x30e <vfprintf+0xb0>
 2e2:	83 2d       	mov	r24, r3
 2e4:	82 60       	ori	r24, 0x02	; 2
 2e6:	38 2e       	mov	r3, r24
 2e8:	e3 2d       	mov	r30, r3
 2ea:	e4 60       	ori	r30, 0x04	; 4
 2ec:	3e 2e       	mov	r3, r30
 2ee:	2a c0       	rjmp	.+84     	; 0x344 <vfprintf+0xe6>
 2f0:	f3 2d       	mov	r31, r3
 2f2:	f8 60       	ori	r31, 0x08	; 8
 2f4:	1d c0       	rjmp	.+58     	; 0x330 <vfprintf+0xd2>
 2f6:	37 fc       	sbrc	r3, 7
 2f8:	2d c0       	rjmp	.+90     	; 0x354 <vfprintf+0xf6>
 2fa:	20 ed       	ldi	r18, 0xD0	; 208
 2fc:	28 0f       	add	r18, r24
 2fe:	2a 30       	cpi	r18, 0x0A	; 10
 300:	40 f0       	brcs	.+16     	; 0x312 <vfprintf+0xb4>
 302:	8e 32       	cpi	r24, 0x2E	; 46
 304:	b9 f4       	brne	.+46     	; 0x334 <vfprintf+0xd6>
 306:	36 fc       	sbrc	r3, 6
 308:	81 c1       	rjmp	.+770    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
 30a:	23 2d       	mov	r18, r3
 30c:	20 64       	ori	r18, 0x40	; 64
 30e:	32 2e       	mov	r3, r18
 310:	19 c0       	rjmp	.+50     	; 0x344 <vfprintf+0xe6>
 312:	36 fe       	sbrs	r3, 6
 314:	06 c0       	rjmp	.+12     	; 0x322 <vfprintf+0xc4>
 316:	8a e0       	ldi	r24, 0x0A	; 10
 318:	98 9e       	mul	r9, r24
 31a:	20 0d       	add	r18, r0
 31c:	11 24       	eor	r1, r1
 31e:	92 2e       	mov	r9, r18
 320:	11 c0       	rjmp	.+34     	; 0x344 <vfprintf+0xe6>
 322:	ea e0       	ldi	r30, 0x0A	; 10
 324:	2e 9e       	mul	r2, r30
 326:	20 0d       	add	r18, r0
 328:	11 24       	eor	r1, r1
 32a:	22 2e       	mov	r2, r18
 32c:	f3 2d       	mov	r31, r3
 32e:	f0 62       	ori	r31, 0x20	; 32
 330:	3f 2e       	mov	r3, r31
 332:	08 c0       	rjmp	.+16     	; 0x344 <vfprintf+0xe6>
 334:	8c 36       	cpi	r24, 0x6C	; 108
 336:	21 f4       	brne	.+8      	; 0x340 <vfprintf+0xe2>
 338:	83 2d       	mov	r24, r3
 33a:	80 68       	ori	r24, 0x80	; 128
 33c:	38 2e       	mov	r3, r24
 33e:	02 c0       	rjmp	.+4      	; 0x344 <vfprintf+0xe6>
 340:	88 36       	cpi	r24, 0x68	; 104
 342:	41 f4       	brne	.+16     	; 0x354 <vfprintf+0xf6>
 344:	f7 01       	movw	r30, r14
 346:	93 fd       	sbrc	r25, 3
 348:	85 91       	lpm	r24, Z+
 34a:	93 ff       	sbrs	r25, 3
 34c:	81 91       	ld	r24, Z+
 34e:	7f 01       	movw	r14, r30
 350:	81 11       	cpse	r24, r1
 352:	b3 cf       	rjmp	.-154    	; 0x2ba <vfprintf+0x5c>
 354:	98 2f       	mov	r25, r24
 356:	9f 7d       	andi	r25, 0xDF	; 223
 358:	95 54       	subi	r25, 0x45	; 69
 35a:	93 30       	cpi	r25, 0x03	; 3
 35c:	28 f4       	brcc	.+10     	; 0x368 <vfprintf+0x10a>
 35e:	0c 5f       	subi	r16, 0xFC	; 252
 360:	1f 4f       	sbci	r17, 0xFF	; 255
 362:	9f e3       	ldi	r25, 0x3F	; 63
 364:	99 83       	std	Y+1, r25	; 0x01
 366:	0d c0       	rjmp	.+26     	; 0x382 <vfprintf+0x124>
 368:	83 36       	cpi	r24, 0x63	; 99
 36a:	31 f0       	breq	.+12     	; 0x378 <vfprintf+0x11a>
 36c:	83 37       	cpi	r24, 0x73	; 115
 36e:	71 f0       	breq	.+28     	; 0x38c <vfprintf+0x12e>
 370:	83 35       	cpi	r24, 0x53	; 83
 372:	09 f0       	breq	.+2      	; 0x376 <vfprintf+0x118>
 374:	59 c0       	rjmp	.+178    	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 376:	21 c0       	rjmp	.+66     	; 0x3ba <vfprintf+0x15c>
 378:	f8 01       	movw	r30, r16
 37a:	80 81       	ld	r24, Z
 37c:	89 83       	std	Y+1, r24	; 0x01
 37e:	0e 5f       	subi	r16, 0xFE	; 254
 380:	1f 4f       	sbci	r17, 0xFF	; 255
 382:	88 24       	eor	r8, r8
 384:	83 94       	inc	r8
 386:	91 2c       	mov	r9, r1
 388:	53 01       	movw	r10, r6
 38a:	13 c0       	rjmp	.+38     	; 0x3b2 <vfprintf+0x154>
 38c:	28 01       	movw	r4, r16
 38e:	f2 e0       	ldi	r31, 0x02	; 2
 390:	4f 0e       	add	r4, r31
 392:	51 1c       	adc	r5, r1
 394:	f8 01       	movw	r30, r16
 396:	a0 80       	ld	r10, Z
 398:	b1 80       	ldd	r11, Z+1	; 0x01
 39a:	36 fe       	sbrs	r3, 6
 39c:	03 c0       	rjmp	.+6      	; 0x3a4 <vfprintf+0x146>
 39e:	69 2d       	mov	r22, r9
 3a0:	70 e0       	ldi	r23, 0x00	; 0
 3a2:	02 c0       	rjmp	.+4      	; 0x3a8 <vfprintf+0x14a>
 3a4:	6f ef       	ldi	r22, 0xFF	; 255
 3a6:	7f ef       	ldi	r23, 0xFF	; 255
 3a8:	c5 01       	movw	r24, r10
 3aa:	0e 94 1b 03 	call	0x636	; 0x636 <strnlen>
 3ae:	4c 01       	movw	r8, r24
 3b0:	82 01       	movw	r16, r4
 3b2:	f3 2d       	mov	r31, r3
 3b4:	ff 77       	andi	r31, 0x7F	; 127
 3b6:	3f 2e       	mov	r3, r31
 3b8:	16 c0       	rjmp	.+44     	; 0x3e6 <vfprintf+0x188>
 3ba:	28 01       	movw	r4, r16
 3bc:	22 e0       	ldi	r18, 0x02	; 2
 3be:	42 0e       	add	r4, r18
 3c0:	51 1c       	adc	r5, r1
 3c2:	f8 01       	movw	r30, r16
 3c4:	a0 80       	ld	r10, Z
 3c6:	b1 80       	ldd	r11, Z+1	; 0x01
 3c8:	36 fe       	sbrs	r3, 6
 3ca:	03 c0       	rjmp	.+6      	; 0x3d2 <vfprintf+0x174>
 3cc:	69 2d       	mov	r22, r9
 3ce:	70 e0       	ldi	r23, 0x00	; 0
 3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <vfprintf+0x178>
 3d2:	6f ef       	ldi	r22, 0xFF	; 255
 3d4:	7f ef       	ldi	r23, 0xFF	; 255
 3d6:	c5 01       	movw	r24, r10
 3d8:	0e 94 10 03 	call	0x620	; 0x620 <strnlen_P>
 3dc:	4c 01       	movw	r8, r24
 3de:	f3 2d       	mov	r31, r3
 3e0:	f0 68       	ori	r31, 0x80	; 128
 3e2:	3f 2e       	mov	r3, r31
 3e4:	82 01       	movw	r16, r4
 3e6:	33 fc       	sbrc	r3, 3
 3e8:	1b c0       	rjmp	.+54     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3ea:	82 2d       	mov	r24, r2
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	88 16       	cp	r8, r24
 3f0:	99 06       	cpc	r9, r25
 3f2:	b0 f4       	brcc	.+44     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3f4:	b6 01       	movw	r22, r12
 3f6:	80 e2       	ldi	r24, 0x20	; 32
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	0e 94 26 03 	call	0x64c	; 0x64c <fputc>
 3fe:	2a 94       	dec	r2
 400:	f4 cf       	rjmp	.-24     	; 0x3ea <vfprintf+0x18c>
 402:	f5 01       	movw	r30, r10
 404:	37 fc       	sbrc	r3, 7
 406:	85 91       	lpm	r24, Z+
 408:	37 fe       	sbrs	r3, 7
 40a:	81 91       	ld	r24, Z+
 40c:	5f 01       	movw	r10, r30
 40e:	b6 01       	movw	r22, r12
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	0e 94 26 03 	call	0x64c	; 0x64c <fputc>
 416:	21 10       	cpse	r2, r1
 418:	2a 94       	dec	r2
 41a:	21 e0       	ldi	r18, 0x01	; 1
 41c:	82 1a       	sub	r8, r18
 41e:	91 08       	sbc	r9, r1
 420:	81 14       	cp	r8, r1
 422:	91 04       	cpc	r9, r1
 424:	71 f7       	brne	.-36     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 426:	e8 c0       	rjmp	.+464    	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 428:	84 36       	cpi	r24, 0x64	; 100
 42a:	11 f0       	breq	.+4      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 42c:	89 36       	cpi	r24, 0x69	; 105
 42e:	41 f5       	brne	.+80     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 430:	f8 01       	movw	r30, r16
 432:	37 fe       	sbrs	r3, 7
 434:	07 c0       	rjmp	.+14     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 436:	60 81       	ld	r22, Z
 438:	71 81       	ldd	r23, Z+1	; 0x01
 43a:	82 81       	ldd	r24, Z+2	; 0x02
 43c:	93 81       	ldd	r25, Z+3	; 0x03
 43e:	0c 5f       	subi	r16, 0xFC	; 252
 440:	1f 4f       	sbci	r17, 0xFF	; 255
 442:	08 c0       	rjmp	.+16     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 444:	60 81       	ld	r22, Z
 446:	71 81       	ldd	r23, Z+1	; 0x01
 448:	07 2e       	mov	r0, r23
 44a:	00 0c       	add	r0, r0
 44c:	88 0b       	sbc	r24, r24
 44e:	99 0b       	sbc	r25, r25
 450:	0e 5f       	subi	r16, 0xFE	; 254
 452:	1f 4f       	sbci	r17, 0xFF	; 255
 454:	f3 2d       	mov	r31, r3
 456:	ff 76       	andi	r31, 0x6F	; 111
 458:	3f 2e       	mov	r3, r31
 45a:	97 ff       	sbrs	r25, 7
 45c:	09 c0       	rjmp	.+18     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 45e:	90 95       	com	r25
 460:	80 95       	com	r24
 462:	70 95       	com	r23
 464:	61 95       	neg	r22
 466:	7f 4f       	sbci	r23, 0xFF	; 255
 468:	8f 4f       	sbci	r24, 0xFF	; 255
 46a:	9f 4f       	sbci	r25, 0xFF	; 255
 46c:	f0 68       	ori	r31, 0x80	; 128
 46e:	3f 2e       	mov	r3, r31
 470:	2a e0       	ldi	r18, 0x0A	; 10
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	a3 01       	movw	r20, r6
 476:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__ultoa_invert>
 47a:	88 2e       	mov	r8, r24
 47c:	86 18       	sub	r8, r6
 47e:	45 c0       	rjmp	.+138    	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 480:	85 37       	cpi	r24, 0x75	; 117
 482:	31 f4       	brne	.+12     	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 484:	23 2d       	mov	r18, r3
 486:	2f 7e       	andi	r18, 0xEF	; 239
 488:	b2 2e       	mov	r11, r18
 48a:	2a e0       	ldi	r18, 0x0A	; 10
 48c:	30 e0       	ldi	r19, 0x00	; 0
 48e:	25 c0       	rjmp	.+74     	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 490:	93 2d       	mov	r25, r3
 492:	99 7f       	andi	r25, 0xF9	; 249
 494:	b9 2e       	mov	r11, r25
 496:	8f 36       	cpi	r24, 0x6F	; 111
 498:	c1 f0       	breq	.+48     	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 49a:	18 f4       	brcc	.+6      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 49c:	88 35       	cpi	r24, 0x58	; 88
 49e:	79 f0       	breq	.+30     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4a0:	b5 c0       	rjmp	.+362    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
 4a2:	80 37       	cpi	r24, 0x70	; 112
 4a4:	19 f0       	breq	.+6      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 4a6:	88 37       	cpi	r24, 0x78	; 120
 4a8:	21 f0       	breq	.+8      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
 4aa:	b0 c0       	rjmp	.+352    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
 4ac:	e9 2f       	mov	r30, r25
 4ae:	e0 61       	ori	r30, 0x10	; 16
 4b0:	be 2e       	mov	r11, r30
 4b2:	b4 fe       	sbrs	r11, 4
 4b4:	0d c0       	rjmp	.+26     	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
 4b6:	fb 2d       	mov	r31, r11
 4b8:	f4 60       	ori	r31, 0x04	; 4
 4ba:	bf 2e       	mov	r11, r31
 4bc:	09 c0       	rjmp	.+18     	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
 4be:	34 fe       	sbrs	r3, 4
 4c0:	0a c0       	rjmp	.+20     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4c2:	29 2f       	mov	r18, r25
 4c4:	26 60       	ori	r18, 0x06	; 6
 4c6:	b2 2e       	mov	r11, r18
 4c8:	06 c0       	rjmp	.+12     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4ca:	28 e0       	ldi	r18, 0x08	; 8
 4cc:	30 e0       	ldi	r19, 0x00	; 0
 4ce:	05 c0       	rjmp	.+10     	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4d0:	20 e1       	ldi	r18, 0x10	; 16
 4d2:	30 e0       	ldi	r19, 0x00	; 0
 4d4:	02 c0       	rjmp	.+4      	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4d6:	20 e1       	ldi	r18, 0x10	; 16
 4d8:	32 e0       	ldi	r19, 0x02	; 2
 4da:	f8 01       	movw	r30, r16
 4dc:	b7 fe       	sbrs	r11, 7
 4de:	07 c0       	rjmp	.+14     	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 4e0:	60 81       	ld	r22, Z
 4e2:	71 81       	ldd	r23, Z+1	; 0x01
 4e4:	82 81       	ldd	r24, Z+2	; 0x02
 4e6:	93 81       	ldd	r25, Z+3	; 0x03
 4e8:	0c 5f       	subi	r16, 0xFC	; 252
 4ea:	1f 4f       	sbci	r17, 0xFF	; 255
 4ec:	06 c0       	rjmp	.+12     	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
 4ee:	60 81       	ld	r22, Z
 4f0:	71 81       	ldd	r23, Z+1	; 0x01
 4f2:	80 e0       	ldi	r24, 0x00	; 0
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	0e 5f       	subi	r16, 0xFE	; 254
 4f8:	1f 4f       	sbci	r17, 0xFF	; 255
 4fa:	a3 01       	movw	r20, r6
 4fc:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__ultoa_invert>
 500:	88 2e       	mov	r8, r24
 502:	86 18       	sub	r8, r6
 504:	fb 2d       	mov	r31, r11
 506:	ff 77       	andi	r31, 0x7F	; 127
 508:	3f 2e       	mov	r3, r31
 50a:	36 fe       	sbrs	r3, 6
 50c:	0d c0       	rjmp	.+26     	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 50e:	23 2d       	mov	r18, r3
 510:	2e 7f       	andi	r18, 0xFE	; 254
 512:	a2 2e       	mov	r10, r18
 514:	89 14       	cp	r8, r9
 516:	58 f4       	brcc	.+22     	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 518:	34 fe       	sbrs	r3, 4
 51a:	0b c0       	rjmp	.+22     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 51c:	32 fc       	sbrc	r3, 2
 51e:	09 c0       	rjmp	.+18     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 520:	83 2d       	mov	r24, r3
 522:	8e 7e       	andi	r24, 0xEE	; 238
 524:	a8 2e       	mov	r10, r24
 526:	05 c0       	rjmp	.+10     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 528:	b8 2c       	mov	r11, r8
 52a:	a3 2c       	mov	r10, r3
 52c:	03 c0       	rjmp	.+6      	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 52e:	b8 2c       	mov	r11, r8
 530:	01 c0       	rjmp	.+2      	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 532:	b9 2c       	mov	r11, r9
 534:	a4 fe       	sbrs	r10, 4
 536:	0f c0       	rjmp	.+30     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 538:	fe 01       	movw	r30, r28
 53a:	e8 0d       	add	r30, r8
 53c:	f1 1d       	adc	r31, r1
 53e:	80 81       	ld	r24, Z
 540:	80 33       	cpi	r24, 0x30	; 48
 542:	21 f4       	brne	.+8      	; 0x54c <__EEPROM_REGION_LENGTH__+0x14c>
 544:	9a 2d       	mov	r25, r10
 546:	99 7e       	andi	r25, 0xE9	; 233
 548:	a9 2e       	mov	r10, r25
 54a:	09 c0       	rjmp	.+18     	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 54c:	a2 fe       	sbrs	r10, 2
 54e:	06 c0       	rjmp	.+12     	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
 550:	b3 94       	inc	r11
 552:	b3 94       	inc	r11
 554:	04 c0       	rjmp	.+8      	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 556:	8a 2d       	mov	r24, r10
 558:	86 78       	andi	r24, 0x86	; 134
 55a:	09 f0       	breq	.+2      	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 55c:	b3 94       	inc	r11
 55e:	a3 fc       	sbrc	r10, 3
 560:	11 c0       	rjmp	.+34     	; 0x584 <__EEPROM_REGION_LENGTH__+0x184>
 562:	a0 fe       	sbrs	r10, 0
 564:	06 c0       	rjmp	.+12     	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 566:	b2 14       	cp	r11, r2
 568:	88 f4       	brcc	.+34     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 56a:	28 0c       	add	r2, r8
 56c:	92 2c       	mov	r9, r2
 56e:	9b 18       	sub	r9, r11
 570:	0e c0       	rjmp	.+28     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 572:	b2 14       	cp	r11, r2
 574:	60 f4       	brcc	.+24     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 576:	b6 01       	movw	r22, r12
 578:	80 e2       	ldi	r24, 0x20	; 32
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	0e 94 26 03 	call	0x64c	; 0x64c <fputc>
 580:	b3 94       	inc	r11
 582:	f7 cf       	rjmp	.-18     	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 584:	b2 14       	cp	r11, r2
 586:	18 f4       	brcc	.+6      	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 588:	2b 18       	sub	r2, r11
 58a:	02 c0       	rjmp	.+4      	; 0x590 <__EEPROM_REGION_LENGTH__+0x190>
 58c:	98 2c       	mov	r9, r8
 58e:	21 2c       	mov	r2, r1
 590:	a4 fe       	sbrs	r10, 4
 592:	10 c0       	rjmp	.+32     	; 0x5b4 <__EEPROM_REGION_LENGTH__+0x1b4>
 594:	b6 01       	movw	r22, r12
 596:	80 e3       	ldi	r24, 0x30	; 48
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	0e 94 26 03 	call	0x64c	; 0x64c <fputc>
 59e:	a2 fe       	sbrs	r10, 2
 5a0:	17 c0       	rjmp	.+46     	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 5a2:	a1 fc       	sbrc	r10, 1
 5a4:	03 c0       	rjmp	.+6      	; 0x5ac <__EEPROM_REGION_LENGTH__+0x1ac>
 5a6:	88 e7       	ldi	r24, 0x78	; 120
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 5ac:	88 e5       	ldi	r24, 0x58	; 88
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	b6 01       	movw	r22, r12
 5b2:	0c c0       	rjmp	.+24     	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
 5b4:	8a 2d       	mov	r24, r10
 5b6:	86 78       	andi	r24, 0x86	; 134
 5b8:	59 f0       	breq	.+22     	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 5ba:	a1 fe       	sbrs	r10, 1
 5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
 5be:	8b e2       	ldi	r24, 0x2B	; 43
 5c0:	01 c0       	rjmp	.+2      	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
 5c2:	80 e2       	ldi	r24, 0x20	; 32
 5c4:	a7 fc       	sbrc	r10, 7
 5c6:	8d e2       	ldi	r24, 0x2D	; 45
 5c8:	b6 01       	movw	r22, r12
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	0e 94 26 03 	call	0x64c	; 0x64c <fputc>
 5d0:	89 14       	cp	r8, r9
 5d2:	38 f4       	brcc	.+14     	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
 5d4:	b6 01       	movw	r22, r12
 5d6:	80 e3       	ldi	r24, 0x30	; 48
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 94 26 03 	call	0x64c	; 0x64c <fputc>
 5de:	9a 94       	dec	r9
 5e0:	f7 cf       	rjmp	.-18     	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 5e2:	8a 94       	dec	r8
 5e4:	f3 01       	movw	r30, r6
 5e6:	e8 0d       	add	r30, r8
 5e8:	f1 1d       	adc	r31, r1
 5ea:	80 81       	ld	r24, Z
 5ec:	b6 01       	movw	r22, r12
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	0e 94 26 03 	call	0x64c	; 0x64c <fputc>
 5f4:	81 10       	cpse	r8, r1
 5f6:	f5 cf       	rjmp	.-22     	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
 5f8:	22 20       	and	r2, r2
 5fa:	09 f4       	brne	.+2      	; 0x5fe <__EEPROM_REGION_LENGTH__+0x1fe>
 5fc:	42 ce       	rjmp	.-892    	; 0x282 <vfprintf+0x24>
 5fe:	b6 01       	movw	r22, r12
 600:	80 e2       	ldi	r24, 0x20	; 32
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	0e 94 26 03 	call	0x64c	; 0x64c <fputc>
 608:	2a 94       	dec	r2
 60a:	f6 cf       	rjmp	.-20     	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 60c:	f6 01       	movw	r30, r12
 60e:	86 81       	ldd	r24, Z+6	; 0x06
 610:	97 81       	ldd	r25, Z+7	; 0x07
 612:	02 c0       	rjmp	.+4      	; 0x618 <__EEPROM_REGION_LENGTH__+0x218>
 614:	8f ef       	ldi	r24, 0xFF	; 255
 616:	9f ef       	ldi	r25, 0xFF	; 255
 618:	2b 96       	adiw	r28, 0x0b	; 11
 61a:	e2 e1       	ldi	r30, 0x12	; 18
 61c:	0c 94 dc 03 	jmp	0x7b8	; 0x7b8 <__epilogue_restores__>

00000620 <strnlen_P>:
 620:	fc 01       	movw	r30, r24
 622:	05 90       	lpm	r0, Z+
 624:	61 50       	subi	r22, 0x01	; 1
 626:	70 40       	sbci	r23, 0x00	; 0
 628:	01 10       	cpse	r0, r1
 62a:	d8 f7       	brcc	.-10     	; 0x622 <strnlen_P+0x2>
 62c:	80 95       	com	r24
 62e:	90 95       	com	r25
 630:	8e 0f       	add	r24, r30
 632:	9f 1f       	adc	r25, r31
 634:	08 95       	ret

00000636 <strnlen>:
 636:	fc 01       	movw	r30, r24
 638:	61 50       	subi	r22, 0x01	; 1
 63a:	70 40       	sbci	r23, 0x00	; 0
 63c:	01 90       	ld	r0, Z+
 63e:	01 10       	cpse	r0, r1
 640:	d8 f7       	brcc	.-10     	; 0x638 <strnlen+0x2>
 642:	80 95       	com	r24
 644:	90 95       	com	r25
 646:	8e 0f       	add	r24, r30
 648:	9f 1f       	adc	r25, r31
 64a:	08 95       	ret

0000064c <fputc>:
 64c:	0f 93       	push	r16
 64e:	1f 93       	push	r17
 650:	cf 93       	push	r28
 652:	df 93       	push	r29
 654:	fb 01       	movw	r30, r22
 656:	23 81       	ldd	r18, Z+3	; 0x03
 658:	21 fd       	sbrc	r18, 1
 65a:	03 c0       	rjmp	.+6      	; 0x662 <fputc+0x16>
 65c:	8f ef       	ldi	r24, 0xFF	; 255
 65e:	9f ef       	ldi	r25, 0xFF	; 255
 660:	2c c0       	rjmp	.+88     	; 0x6ba <fputc+0x6e>
 662:	22 ff       	sbrs	r18, 2
 664:	16 c0       	rjmp	.+44     	; 0x692 <fputc+0x46>
 666:	46 81       	ldd	r20, Z+6	; 0x06
 668:	57 81       	ldd	r21, Z+7	; 0x07
 66a:	24 81       	ldd	r18, Z+4	; 0x04
 66c:	35 81       	ldd	r19, Z+5	; 0x05
 66e:	42 17       	cp	r20, r18
 670:	53 07       	cpc	r21, r19
 672:	44 f4       	brge	.+16     	; 0x684 <fputc+0x38>
 674:	a0 81       	ld	r26, Z
 676:	b1 81       	ldd	r27, Z+1	; 0x01
 678:	9d 01       	movw	r18, r26
 67a:	2f 5f       	subi	r18, 0xFF	; 255
 67c:	3f 4f       	sbci	r19, 0xFF	; 255
 67e:	31 83       	std	Z+1, r19	; 0x01
 680:	20 83       	st	Z, r18
 682:	8c 93       	st	X, r24
 684:	26 81       	ldd	r18, Z+6	; 0x06
 686:	37 81       	ldd	r19, Z+7	; 0x07
 688:	2f 5f       	subi	r18, 0xFF	; 255
 68a:	3f 4f       	sbci	r19, 0xFF	; 255
 68c:	37 83       	std	Z+7, r19	; 0x07
 68e:	26 83       	std	Z+6, r18	; 0x06
 690:	14 c0       	rjmp	.+40     	; 0x6ba <fputc+0x6e>
 692:	8b 01       	movw	r16, r22
 694:	ec 01       	movw	r28, r24
 696:	fb 01       	movw	r30, r22
 698:	00 84       	ldd	r0, Z+8	; 0x08
 69a:	f1 85       	ldd	r31, Z+9	; 0x09
 69c:	e0 2d       	mov	r30, r0
 69e:	09 95       	icall
 6a0:	89 2b       	or	r24, r25
 6a2:	e1 f6       	brne	.-72     	; 0x65c <fputc+0x10>
 6a4:	d8 01       	movw	r26, r16
 6a6:	16 96       	adiw	r26, 0x06	; 6
 6a8:	8d 91       	ld	r24, X+
 6aa:	9c 91       	ld	r25, X
 6ac:	17 97       	sbiw	r26, 0x07	; 7
 6ae:	01 96       	adiw	r24, 0x01	; 1
 6b0:	17 96       	adiw	r26, 0x07	; 7
 6b2:	9c 93       	st	X, r25
 6b4:	8e 93       	st	-X, r24
 6b6:	16 97       	sbiw	r26, 0x06	; 6
 6b8:	ce 01       	movw	r24, r28
 6ba:	df 91       	pop	r29
 6bc:	cf 91       	pop	r28
 6be:	1f 91       	pop	r17
 6c0:	0f 91       	pop	r16
 6c2:	08 95       	ret

000006c4 <__ultoa_invert>:
 6c4:	fa 01       	movw	r30, r20
 6c6:	aa 27       	eor	r26, r26
 6c8:	28 30       	cpi	r18, 0x08	; 8
 6ca:	51 f1       	breq	.+84     	; 0x720 <__ultoa_invert+0x5c>
 6cc:	20 31       	cpi	r18, 0x10	; 16
 6ce:	81 f1       	breq	.+96     	; 0x730 <__ultoa_invert+0x6c>
 6d0:	e8 94       	clt
 6d2:	6f 93       	push	r22
 6d4:	6e 7f       	andi	r22, 0xFE	; 254
 6d6:	6e 5f       	subi	r22, 0xFE	; 254
 6d8:	7f 4f       	sbci	r23, 0xFF	; 255
 6da:	8f 4f       	sbci	r24, 0xFF	; 255
 6dc:	9f 4f       	sbci	r25, 0xFF	; 255
 6de:	af 4f       	sbci	r26, 0xFF	; 255
 6e0:	b1 e0       	ldi	r27, 0x01	; 1
 6e2:	3e d0       	rcall	.+124    	; 0x760 <__ultoa_invert+0x9c>
 6e4:	b4 e0       	ldi	r27, 0x04	; 4
 6e6:	3c d0       	rcall	.+120    	; 0x760 <__ultoa_invert+0x9c>
 6e8:	67 0f       	add	r22, r23
 6ea:	78 1f       	adc	r23, r24
 6ec:	89 1f       	adc	r24, r25
 6ee:	9a 1f       	adc	r25, r26
 6f0:	a1 1d       	adc	r26, r1
 6f2:	68 0f       	add	r22, r24
 6f4:	79 1f       	adc	r23, r25
 6f6:	8a 1f       	adc	r24, r26
 6f8:	91 1d       	adc	r25, r1
 6fa:	a1 1d       	adc	r26, r1
 6fc:	6a 0f       	add	r22, r26
 6fe:	71 1d       	adc	r23, r1
 700:	81 1d       	adc	r24, r1
 702:	91 1d       	adc	r25, r1
 704:	a1 1d       	adc	r26, r1
 706:	20 d0       	rcall	.+64     	; 0x748 <__ultoa_invert+0x84>
 708:	09 f4       	brne	.+2      	; 0x70c <__ultoa_invert+0x48>
 70a:	68 94       	set
 70c:	3f 91       	pop	r19
 70e:	2a e0       	ldi	r18, 0x0A	; 10
 710:	26 9f       	mul	r18, r22
 712:	11 24       	eor	r1, r1
 714:	30 19       	sub	r19, r0
 716:	30 5d       	subi	r19, 0xD0	; 208
 718:	31 93       	st	Z+, r19
 71a:	de f6       	brtc	.-74     	; 0x6d2 <__ultoa_invert+0xe>
 71c:	cf 01       	movw	r24, r30
 71e:	08 95       	ret
 720:	46 2f       	mov	r20, r22
 722:	47 70       	andi	r20, 0x07	; 7
 724:	40 5d       	subi	r20, 0xD0	; 208
 726:	41 93       	st	Z+, r20
 728:	b3 e0       	ldi	r27, 0x03	; 3
 72a:	0f d0       	rcall	.+30     	; 0x74a <__ultoa_invert+0x86>
 72c:	c9 f7       	brne	.-14     	; 0x720 <__ultoa_invert+0x5c>
 72e:	f6 cf       	rjmp	.-20     	; 0x71c <__ultoa_invert+0x58>
 730:	46 2f       	mov	r20, r22
 732:	4f 70       	andi	r20, 0x0F	; 15
 734:	40 5d       	subi	r20, 0xD0	; 208
 736:	4a 33       	cpi	r20, 0x3A	; 58
 738:	18 f0       	brcs	.+6      	; 0x740 <__ultoa_invert+0x7c>
 73a:	49 5d       	subi	r20, 0xD9	; 217
 73c:	31 fd       	sbrc	r19, 1
 73e:	40 52       	subi	r20, 0x20	; 32
 740:	41 93       	st	Z+, r20
 742:	02 d0       	rcall	.+4      	; 0x748 <__ultoa_invert+0x84>
 744:	a9 f7       	brne	.-22     	; 0x730 <__ultoa_invert+0x6c>
 746:	ea cf       	rjmp	.-44     	; 0x71c <__ultoa_invert+0x58>
 748:	b4 e0       	ldi	r27, 0x04	; 4
 74a:	a6 95       	lsr	r26
 74c:	97 95       	ror	r25
 74e:	87 95       	ror	r24
 750:	77 95       	ror	r23
 752:	67 95       	ror	r22
 754:	ba 95       	dec	r27
 756:	c9 f7       	brne	.-14     	; 0x74a <__ultoa_invert+0x86>
 758:	00 97       	sbiw	r24, 0x00	; 0
 75a:	61 05       	cpc	r22, r1
 75c:	71 05       	cpc	r23, r1
 75e:	08 95       	ret
 760:	9b 01       	movw	r18, r22
 762:	ac 01       	movw	r20, r24
 764:	0a 2e       	mov	r0, r26
 766:	06 94       	lsr	r0
 768:	57 95       	ror	r21
 76a:	47 95       	ror	r20
 76c:	37 95       	ror	r19
 76e:	27 95       	ror	r18
 770:	ba 95       	dec	r27
 772:	c9 f7       	brne	.-14     	; 0x766 <__ultoa_invert+0xa2>
 774:	62 0f       	add	r22, r18
 776:	73 1f       	adc	r23, r19
 778:	84 1f       	adc	r24, r20
 77a:	95 1f       	adc	r25, r21
 77c:	a0 1d       	adc	r26, r0
 77e:	08 95       	ret

00000780 <__prologue_saves__>:
 780:	2f 92       	push	r2
 782:	3f 92       	push	r3
 784:	4f 92       	push	r4
 786:	5f 92       	push	r5
 788:	6f 92       	push	r6
 78a:	7f 92       	push	r7
 78c:	8f 92       	push	r8
 78e:	9f 92       	push	r9
 790:	af 92       	push	r10
 792:	bf 92       	push	r11
 794:	cf 92       	push	r12
 796:	df 92       	push	r13
 798:	ef 92       	push	r14
 79a:	ff 92       	push	r15
 79c:	0f 93       	push	r16
 79e:	1f 93       	push	r17
 7a0:	cf 93       	push	r28
 7a2:	df 93       	push	r29
 7a4:	cd b7       	in	r28, 0x3d	; 61
 7a6:	de b7       	in	r29, 0x3e	; 62
 7a8:	ca 1b       	sub	r28, r26
 7aa:	db 0b       	sbc	r29, r27
 7ac:	0f b6       	in	r0, 0x3f	; 63
 7ae:	f8 94       	cli
 7b0:	de bf       	out	0x3e, r29	; 62
 7b2:	0f be       	out	0x3f, r0	; 63
 7b4:	cd bf       	out	0x3d, r28	; 61
 7b6:	09 94       	ijmp

000007b8 <__epilogue_restores__>:
 7b8:	2a 88       	ldd	r2, Y+18	; 0x12
 7ba:	39 88       	ldd	r3, Y+17	; 0x11
 7bc:	48 88       	ldd	r4, Y+16	; 0x10
 7be:	5f 84       	ldd	r5, Y+15	; 0x0f
 7c0:	6e 84       	ldd	r6, Y+14	; 0x0e
 7c2:	7d 84       	ldd	r7, Y+13	; 0x0d
 7c4:	8c 84       	ldd	r8, Y+12	; 0x0c
 7c6:	9b 84       	ldd	r9, Y+11	; 0x0b
 7c8:	aa 84       	ldd	r10, Y+10	; 0x0a
 7ca:	b9 84       	ldd	r11, Y+9	; 0x09
 7cc:	c8 84       	ldd	r12, Y+8	; 0x08
 7ce:	df 80       	ldd	r13, Y+7	; 0x07
 7d0:	ee 80       	ldd	r14, Y+6	; 0x06
 7d2:	fd 80       	ldd	r15, Y+5	; 0x05
 7d4:	0c 81       	ldd	r16, Y+4	; 0x04
 7d6:	1b 81       	ldd	r17, Y+3	; 0x03
 7d8:	aa 81       	ldd	r26, Y+2	; 0x02
 7da:	b9 81       	ldd	r27, Y+1	; 0x01
 7dc:	ce 0f       	add	r28, r30
 7de:	d1 1d       	adc	r29, r1
 7e0:	0f b6       	in	r0, 0x3f	; 63
 7e2:	f8 94       	cli
 7e4:	de bf       	out	0x3e, r29	; 62
 7e6:	0f be       	out	0x3f, r0	; 63
 7e8:	cd bf       	out	0x3d, r28	; 61
 7ea:	ed 01       	movw	r28, r26
 7ec:	08 95       	ret

000007ee <_exit>:
 7ee:	f8 94       	cli

000007f0 <__stop_program>:
 7f0:	ff cf       	rjmp	.-2      	; 0x7f0 <__stop_program>
